syntax = "proto2";
package ODP_main_frame;
import "common.proto";

//金额单位（万元）

//当天充值金额与提现金额结构体
message Pay_Withdraw
{
   optional  bytes cur_date         = 1;    //当前日期2015-07-28
   optional  double pay_amount      = 2;    //当天的充值总金额
   optional  double withdraw_amount = 3;    //当天的提现总金额
}

//省份未满标的数量
message province_under_count
{
    optional  bytes province_name   = 1;    // 省份中文名字
    optional  int32 under_count     = 2;    // 未满标的数量
}

// 城市借款标的数量
message city_bid_count
{
    optional  bytes city_name            = 1;    // 城市中文名字
    optional  int32 bid_count            = 2;    // 借款标的数量
}

//未满借款标（投资未满）城市中文名,以及相应的角色所在城市的中文名
message unfinished_bid_info
{
    optional bytes  city_name              = 1; //借款标城市中文名
    repeated bytes  role_city_name         = 2; //相应的角色所在城市的中文名（用户发生这个事件时候的位置）
}

// 用户的分布
message user_distribution
{
    optional  bytes city_name            = 1;    // 城市中文名字
    optional  int32 user_count           = 2;    // 用户的数量
}

//当前交易量
message cur_trading_volume
{
    optional bytes hour                 = 1;     // 时间刻度  格式HH:mm
    optional float trading_volume       = 2;     //每个刻度交易额
}

//当天的省交易量
message cur_province_trading_volume
{
    optional  bytes province_name   = 1;    // 省份中文名字
    optional  int32 trading_volume  = 2;    // 交易量
}

//月注册量
message month_registration_volume
{
    optional  bytes year_month           = 1;            // 月份  格式yyyy_MM
    optional  int32 regist_volume        = 2;            // 注册量   单位个
}

//当天交易笔数
message cur_trading_count
{
    optional  bytes hour                 = 1;            // 小时  格式HH:mm
    optional  int32 trading_count        = 2;            // 每小时交易笔数   单位笔
}

//月交易量
message month_trading_volume
{
    optional bytes year_month                 = 1;     // 月份  格式yyyy_MM
    optional float trading_volume             = 2;     // 每个月交易金额  单位万元
}

//实时注册信息
message registration_info
{
	optional bytes city_name           = 1;     //城市中文名
	optional int32 count               = 2;     //注册人数
}

//实时充值信息
message charge_info
{
	optional bytes city_name           = 1;     //城市中文名
	optional float charge_amount       = 2;     //该城市实时充值总金额  单位万元
}

// 数据详情  最新的30条数据
message real_fund_detail
{
    optional bytes fund_serial_number              = 1;  // 流水号
    optional bytes fund_serial_name                = 2;  // 流水标题
	optional bytes user_name                       = 3;  // 用户姓名
	optional bytes telno                           = 4;  // 手机号
	optional bytes to_user_name                    = 5;  // 关联用户姓名
	optional bytes fund_serial_type                = 6;  // 流水类型
	optional bytes fund_amount                     = 7;  // 资金
	optional bytes fund_status                     = 8;  // 状态
	optional bytes fund_desc                       = 9;  // 描述
	optional bytes update_time                     = 10; //更新时间
}

//历史资金流水标题
message fund_flow_type
{
	optional bytes  type_id			= 1;     	//类型号
	optional bytes  title			= 2;     	//类型对应的标题
}

//用户数量
message user_acount_info
{
	optional int32 user_acount               = 1;   // 用户数量
	optional bytes date_tick                 = 2;   // 日期2015-07-21
}

//TOP10终端用户数量或启动次数
message top_ten_user_acount_info
{
    optional bytes app_version                = 1;   // APP版本号
	repeated  user_acount_info info           = 2;   // 用户数量列表
}

//启动次数
message start_count_info
{
	optional int32 start_count               = 1;   // 次数
	optional float start_count_rate          = 2;   // 次数占比
	optional bytes date_tick                = 3;   // 时间刻度  天yyyy-MM-dd   小时yyyy-MM-dd HH
}
//用户分析（新增用户 活跃用户）
message user_analyze_info
{
	optional int32 user_count                = 1;   // 新增用户数量
	optional float user_count_rate           = 2;   // 新增用户数量占比
	optional bytes date_tick                = 3;    // 时间刻度  天yyyy-MM-dd   小时yyyy-MM-dd HH
}

//用户新鲜度
message user_freshness_info
{
	optional int32 new_add_user_count               = 1;   // 当日新增用户数量
	optional int32 active_user_count                = 2;   // 当日活跃用户数量
	optional float new_add_count_rate               = 3;   // 当日新鲜度  当日新鲜度=当日新增用户数量/当日活跃用户数量  保留2位小数
	optional bytes date_tick                       = 4;   // 日期刻度2015-07-21
}

//留存率
message user_retain_rate_info
{
	optional float oneday               = 1;  // 1天后留存率
	optional float twoday               = 2;  // 2天后留存率
	optional float threeday             = 3;  // 3天后留存率
	optional float fourday              = 4;  // 4天后留存率
	optional float fiveday              = 5;  // 5天后留存率
	optional float sixday               = 6;  // 6天后留存率
	optional float sevenday             = 7;  // 7天后留存率
	optional float fourteenday          = 14; // 14天后留存率
	optional float thirtyday            = 30; // 30天后留存率
}

//留存用户
message user_retain_info
{
	optional int32 new_add_user                              = 1;   // 新增用户
	optional user_retain_rate_info user_retain_rate          = 2;   // 留存率
	optional bytes first_use_date                            = 3;   // 首次使用时间2015-07-21
}

//终端版本统计数据
message app_version_statistics
{
	optional bytes app_version                = 1;   // APP版本号
	optional int32 total_user_acount          = 2;   // 累计用户数量   截止时间点的当前用户的总数量，起始时间参数无效
	optional float total_user_rate            = 3;   // 累计用户占比
	optional int32 new_add_user_acount        = 4;   // 新增用户数量
	optional float new_add_user_rate          = 5;   // 新增用户占比
	optional int32 upgrade_user_acount        = 6;   // 升级用户数量
	optional float upgrade_user_rate          = 7;   // 升级用户占比
	optional int32 new_upgrade_user_acount    = 8;   // 新增+升级用户数量
	optional float new_upgrade_user_rate      = 9;   // 新增+升级用户占比
	optional int32 active_user_acount         = 10;  // 活跃用户数量
	optional float active_user_rate           = 11;  // 活跃用户占比
	optional int32 start_acount               = 12;  // 启动次数
	optional float start_acount_rate          = 13;  // 启动次数占比
}

//每个终端版本详细数据
message app_version_detail
{
	optional bytes date_tick                  = 1;   // 日期2015-07-21
	optional int32 new_add_user_acount        = 2;   // 新增用户数量
	optional int32 upgrade_user_acount        = 3;   // 升级用户数量
	optional int32 active_user_acount         = 4;   // 活跃用户数量
	optional int32 acumulate_user_acount      = 5;   // 累计用户数量
	optional int32 start_acount               = 6;   // 启动次数
}

//TOP10渠道用户数量
message download_src_user_acount_info
{
    optional  bytes src_name                  = 1;   // 渠道名称
	repeated  user_acount_info info           = 2;   // 用户数量列表
}

//渠道详细数据
message download_src_detail
{
	optional bytes src_name                   = 1;   // 渠道名称
	optional int32 new_add_user_acount        = 2;   // 新增用户数量
    optional float new_add_user_acount_rate   = 3;   // 新增用户数量占比
	optional int32 active_user_acount         = 4;   // 活跃用户数量
    optional float active_user_acount_rate    = 5;   // 活跃用户数量占比
    optional int32 total_user_acount          = 6;   // 累计用户数量
    optional float total_user_acount_rate     = 7;   // 累计用户数量占比
}

//使用时长信息

message use_time_info
{
	optional bytes time_tick              = 1;   //时长区间(1-3秒、4-10秒、11-30秒、31-60秒、1-3分、3-10分、10-30分、30分+)
	optional int32 start_count            = 2;   //启动次数
	optional float start_rate             = 3;   //启动次数占比
}

//使用频率信息
message use_count_info
{
	optional bytes count_tick              = 1;   //次数区间(1-2、3-5、6-9、10-19、20-49、50+)
	optional int32 user_count              = 2;   //用户数
	optional float user_count_rate         = 3;   //用户数量占比
}

//使用间隔信息
message use_interval_info
{
	optional bytes interval_tick            = 1;   //间隔区间(首次、0-24h、1天、2天、3天、4天、5天、6天、7天、8-14天、15-30天)
	optional int32 start_count              = 2;   //启动次数
	optional float start_count_rate         = 3;   //启动次数占比
}


//第三方登录信息
message third_party_login_info
{
	optional bytes platform_name                = 1;   //第三方平台名
	optional int32 new_add_user_count           = 2;   //新增用户数量
	optional float new_add_user_count_rate      = 3;   //新增用户占比
	optional int32 total_user_count             = 4;   //累计用户数量
	optional float total_user_count_rate        = 5;   //累计用户占比
}

///////////////////////////////////////////////////////////////////////////////////////////////   精细化运营
//////////////////////////////////////////////////////////    —— 大屏幕

// 1 充值/提现
//一段时间内的充值金额和提现金额，以天为单位（如果结束的日期，大于当前日期，则用预测数据补充）
message Pay_Withdraw_ask
{
    optional  bytes start_date 			               = 1;    //开始日期2015-07-21
    optional  bytes end_date   				           = 2;    //结束日期2015-07-28
	optional common.common_ask_header    ask_header    = 3;    // 通用的公共请求字段(比如回复的主题)
}

message Pay_Withdraw_ans
{
    repeated Pay_Withdraw cur_pay_withdraw   = 1; //每天总充值金额、每天总提现金额
    optional common.errorinfo      error     = 2; //错误代码
}

// 2 所有未满标城市中文名；每个标相对应的标的借款人，投资人，担保人，尽调人所在城市中文名
message unfinished_bid_ask
{
    optional int32 event               				   = 1;   //业务事件, 0:借款; 1:投资 ; 2:担保 ;3:尽调
	optional common.common_ask_header    ask_header    = 2;    // 通用的公共请求字段(比如回复的主题)
}

message unfinished_bid_ans
{
    repeated unfinished_bid_info info     = 1; //借款标城市中文名；相对应的标的角色所在城市中文名
    optional common.errorinfo   error     = 2; //错误代码
}



// 3 当前借款标分布 (数据来源：城市中文名、每个城市借款标的数量)
message city_bid_count_ask
{
    optional int32 bid_status             			   = 1;    //标的状态， 0为正常借款标  1为没有关闭的逾期借款标
	optional common.common_ask_header    ask_header    = 2;    // 通用的公共请求字段(比如回复的主题)
}

message city_bid_count_ans
{
    repeated city_bid_count count_info    = 1;    //每个城市没有关闭的正常借款标的数量
    optional common.errorinfo   error     = 2;    //错误代码
}



// 4  用户的分布
message user_distribution_ask
{
    optional int32 user_status    					   = 1; //用户的状态，0 所有用户， 1 当天活跃用户（）
	optional common.common_ask_header    ask_header    = 2;    // 通用的公共请求字段(比如回复的主题)
}

message user_distribution_ans
{
    repeated user_distribution  info      = 1;    //用户的分布
    optional common.errorinfo   error     = 2; //错误代码
}


// 5 	当天交易量(每次抛送48个时间段的数据,每隔半小时统计一次，当前24小时之内的数据)
message cur_trading_volume_ask
{
	optional  bytes start_datetime 					   = 1;    //开始日期2015-07-21 HH:MM:00
    optional  bytes end_datetime   					   = 2;    //结束日期2015-07-28 HH:MM:00
	optional common.common_ask_header    ask_header    = 3;    // 通用的公共请求字段(比如回复的主题)
}
message cur_trading_volume_ans
{
    repeated cur_trading_volume info      = 1; //当天交易量
    optional common.errorinfo   error     = 2; //错误代码
}

// 6 省交易量
message cur_province_trading_volume_ask
{
	optional common.common_ask_header    ask_header    = 1;    // 通用的公共请求字段(比如回复的主题)
}

message cur_province_trading_volume_ans
{
    repeated cur_province_trading_volume info = 1;   //省交易量
    optional common.errorinfo   error         = 2;   //错误代码
}

// 7	实时注册（最新一小时内的）
message Real_time_registration_ask
{
	optional common.common_ask_header    ask_header    = 1;    // 通用的公共请求字段(比如回复的主题)
}
message Real_time_registration_ans
{
    repeated registration_info info              = 1;  //注册信息
    optional common.errorinfo   error            = 2;  //错误代码
}

// 8 月注册量(下发12个月)
message month_registration_ask
{
	optional  bytes start_date 						   = 1;    	//开始日期2015-07-01
    optional  bytes end_date 						   = 2;     //结束日期2015-07-01
	optional common.common_ask_header    ask_header    = 3;    // 通用的公共请求字段(比如回复的主题)
}
message month_registration_ans
{
    repeated month_registration_volume info = 1;              //月注册量
    optional common.errorinfo   error       = 2;              //错误代码
}

// 9 实时充值（最新一小时内的）
message real_time_charge_ask
{
	optional common.common_ask_header    ask_header    = 1;    // 通用的公共请求字段(比如回复的主题)
}

message real_time_charge_ans
{
    repeated charge_info        info      = 1; //实时充值
    optional common.errorinfo   error     = 2; //错误代码
}

// 10 当天交易笔数(每次抛送48个时间点数据,每隔半小时统计一次，当前24小时之内的数据)
message cur_trading_count_ask
{
	optional  bytes start_datetime  				   = 1;    //开始日期2015-07-21 HH:MM:00
    optional  bytes end_datetime        			   = 2;    //结束日期2015-07-21 HH:MM:00
	optional common.common_ask_header    ask_header    = 3;    // 通用的公共请求字段(比如回复的主题)
}
message cur_trading_count_ans
{
    repeated cur_trading_count info       = 1; //当天交易笔数
    optional common.errorinfo   error     = 2; //错误代码
}

// 11 月交易量(每个月一个刻度，历史数据9个月,预测未来3个月(下发12个月))
message month_trading_ask
{
	optional  bytes start_date 						   = 1;    //开始日期2015-07-01
    optional  bytes end_date   						   = 2;    //结束日期2015-07-01
	optional common.common_ask_header    ask_header    = 3;    // 通用的公共请求字段(比如回复的主题)
}

message month_trading_ans
{
    repeated month_trading_volume info      = 1;              //月交易量
    optional common.errorinfo   error       = 2;              //错误代码
}



//////////////////////////////////////////////////////////    —— 其它

// 12 实时资金流水明细监控
message cur_fund_detail_ask
{
	optional common.common_ask_header    ask_header    = 1;    // 通用的公共请求字段(比如回复的主题)
}

// 返回当天所有的数据统计以及最新30条数据详情
message cur_fund_detail_ans
{
    optional float cur_pay_amount               = 1;   // 当天充值总额
    optional float cur_withdraw_amount          = 2;   // 当天提现总额
    optional float cur_invest_amount            = 3;   // 当天投资总额
    optional float cur_guarantee_amount         = 4;   // 当天担保总额
    optional float cur_borrow_amount            = 5;   // 当天借款总额
    optional float cur_repayment_amount         = 6;   // 当天还款总额
    optional float cur_overdue_amount           = 7;   // 当天逾期总额
    repeated real_fund_detail detail            = 8;   // 数据详情  最新的30条数据
    optional common.errorinfo   error           = 9;   // 错误代码
}


// 13 历史资金流水明细(列表)
message history_fund_detail_ask
{
    optional bytes start_date                  		   = 1;      // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    		   = 2;      // 结束日期(yyyymmddHHMMSSmmmuuu)
    optional bytes key_info                    		   = 3;      // 关键字(模糊查询搜索范围： 手机号/身份证号)
	optional bytes flow_type						   = 4;		 // 资金流水类型(下拉框，从后台查)
    optional int32 page_num                    		   = 5;      // 请求页面数量
    optional int32 cur_page                    		   = 6;      // 当前请求页面
	optional common.common_ask_header    ask_header    = 7;      // 通用的公共请求字段(比如回复的主题
}

message history_fund_detail_ans
{
  	optional int32            total_number     = 1;        // 总条数
    repeated real_fund_detail detail           = 2;        // 数据详情
    optional common.errorinfo   error          = 3;        // 错误代码

}

//13.1 历史资金流水标题请求(下拉框)
message history_fund_flow_type_ask
{
	optional common.common_ask_header    ask_header    = 1;    // 通用的公共请求字段(比如回复的主题)
}


message history_fund_flow_type_ans
{
	repeated  fund_flow_type 	fundtype		= 1;		//历史资金流水类型
	optional common.errorinfo   error           = 2;   		// 错误代码
}

// 14 终端版本分布
//TOP10版本趋势图  最新10个APP版本(折线图)
message client_versions_tendency_ask
{
    optional int32 os_type                     		   = 1;   // OS类型  0表示所有 1表示安卓  2表示IOS
	optional bytes start_date                  		   = 2;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    		   = 3;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional int32 request_type                		   = 4;   // 请求类型 0表示新增用户  1表示活跃用户  2表示启动次数
	optional common.common_ask_header    ask_header    = 5;    // 通用的公共请求字段(比如回复的主题)
}

message client_versions_tendency_ans
{
	repeated  top_ten_user_acount_info info    = 1;    // TOP10终端用户数量或启动次数
	optional  common.errorinfo   error         = 2;   // 错误代码
}

// 15 终端版本统计 所有(列表)    ????
message client_versions_distribution_ask
{
	optional int32 os_type       			  		  = 1;   // OS类型  0表示IOS  1表示安卓
	optional bytes start_date    					  = 2;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date      					  = 3;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional int32 page_num      					  = 4;   // 请求页面数量
    optional int32 cur_page      					  = 5;   // 当前请求页面
	optional common.common_ask_header    ask_header   = 6;   // 通用的公共请求字段(比如回复的主题)
}

message client_versions_distribution_ans
{
	optional int32            total_number     = 1;   // 总条数
	repeated app_version_statistics info       = 2;   // 终端版本统计数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

// 16 终端版本详情 在统计列表中选中某一行进入(折线图)
message client_versions_distribution_detail_ask
{
	optional bytes start_date                 		   = 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                   		   = 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                 		   = 3;   // OS版本
	optional bytes app_version                		   = 4;   // 终端APP版本
	optional int32 request_type                		   = 5;   // 请求类型 0表示新增用户  1表示活跃用户  2表示启动次数 3表示升级用户
	optional common.common_ask_header    ask_header    = 6;   // 通用的公共请求字段(比如回复的主题)
}

message client_versions_distribution_detail_ans
{
	repeated user_acount_info info             = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 17 每个终端版本详情(列表)
message client_versions_distribution_detail_list_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional bytes app_version                 			= 4;   // 终端APP版本
	optional int32 page_num                    			= 5;   // 请求页面数量
    optional int32 cur_page                    			= 6;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 7;   // 通用的公共请求字段(比如回复的主题)
}

message client_versions_distribution_detail_list_ans
{
	optional int32            total_number     = 1;   // 总条数
	repeated app_version_detail info           = 2;   // 每个终端版本详细数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

// 18 启动次数分析折线图
message start_count_analyze_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 0表示按小时、1表示按日、2表示按周、3表示按月
	optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message start_count_analyze_ans
{
	repeated start_count_info info             = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 19 启动次数分析列表
message start_count_analyze_list_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 0表示按小时、1表示按日、2表示按周、3表示按月
	optional int32 page_num                    			= 5;   // 请求页面数量
    optional int32 cur_page                    			= 6;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 7;   // 通用的公共请求字段(比如回复的主题)
}

message start_count_analyze_list_ans
{
	optional int32            total_number     = 1;   // 总条数
	repeated start_count_info info             = 2;   // 数据
    optional common.errorinfo   error          = 3;   // 错误代码
}


// 20 新增用户分析折线图
message new_add_user_analyze_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 0表示按小时、1表示按日、2表示按周、3表示按月
	optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message new_add_user_analyze_ans
{
	repeated user_analyze_info info            = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 21 新增用户分析列表
message new_add_user_analyze_list_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 0表示按小时、1表示按日、2表示按周、3表示按月
	optional int32 page_num                    			= 5;   // 请求页面数量
    optional int32 cur_page                    			= 6;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 7;   // 通用的公共请求字段(比如回复的主题)
}

message new_add_user_analyze_list_ans
{
	optional int32            total_number     = 1;   // 总条数
	repeated user_analyze_info info            = 2;   // 数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

// 22 活跃用户分析折线图
message active_user_analyze_ask
{
	optional bytes start_date                   		= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                     		= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                   		= 3;   // OS版本
	optional int32 request_type                 		= 4;   // 请求类型 1表示按日、2表示按周
	optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message active_user_analyze_ans
{
	repeated user_analyze_info info             = 1;   // 数据
    optional common.errorinfo   error           = 2;   // 错误代码
}

// 23 活跃用户分析列表
message active_user_analyze_list_ask
{
	optional bytes start_date                   		= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                     		= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                   		= 3;   // OS版本
	optional int32 request_type                 		= 4;   // 请求类型 1表示按日、2表示按周
	optional int32 page_num                     		= 5;   // 请求页面数量
    optional int32 cur_page                     		= 6;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 7;   // 通用的公共请求字段(比如回复的主题)
}

message active_user_analyze_list_ans
{
	optional int32            total_number      = 1;   // 总条数
	repeated user_analyze_info info             = 2;   // 数据
    optional common.errorinfo   error           = 3;   // 错误代码
}

// 24 用户新鲜度分析柱状图
message user_freshness_analyze_ask
{
    optional bytes start_date                   		= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                     		= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
    optional bytes os_version                   		= 3;   // OS版本
    optional int32 request_type                 		= 4;   // 请求类型 1表示按日、2表示按周、3表示按月
    optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message user_freshness_analyze_ans
{
	repeated user_freshness_info info          = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 25 用户新鲜度分析列表
message user_freshness_analyze_list_ask
{
    optional bytes start_date                   		= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                     		= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
    optional bytes os_version                   		= 3;   // OS版本
    optional int32 request_type                 		= 4;   // 请求类型 1表示按日、2表示按周、3表示按月
    optional int32 page_num                     		= 5;   // 请求页面数量
    optional int32 cur_page                     		= 6;   // 当前请求页面
    optional common.common_ask_header    ask_header     = 7;   // 通用的公共请求字段(比如回复的主题)
}

message user_freshness_analyze_list_ans
{
	optional int32            total_number     = 1;   // 总条数
	repeated user_freshness_info info          = 2;   // 数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

// 26 用户留存分析列表
message user_retain_analyze_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 1表示按日、2表示按周、3表示按月
	optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message user_retain_analyze_ans
{
	repeated user_retain_info info             = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 27 用户参与度
//使用时长分布
message use_time_analyze_ask
{
	optional bytes start_date                  			= 1;   // 日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 2;   // OS版本
	optional int32 request_type                			= 3;   // 请求类型 0表示单次、1表示日
	optional common.common_ask_header    ask_header     = 4;   // 通用的公共请求字段(比如回复的主题)
}

message use_time_analyze_ans
{
	repeated use_time_info info                = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 28 使用频率分布
message use_count_analyze_ask
{
	optional bytes start_date                 			= 1;   // 日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 2;   // OS版本
	optional int32 request_type                			= 3;   // 请求类型 1表示日、2表示周、3表示月
	optional common.common_ask_header    ask_header     = 4;   // 通用的公共请求字段(比如回复的主题)
}

message use_count_analyze_ans
{
	repeated use_count_info info               = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 29 使用间隔分布
message use_interval_analyze_ask
{
	optional bytes end_date                    			= 1;   // 日期(yyyymmddHHMMSSmmmuuu) (过去30天)
	optional bytes os_version                  			= 2;   // OS版本
	optional common.common_ask_header    ask_header     = 3;   // 通用的公共请求字段(比如回复的主题)
}

message use_interval_analyze_ans
{
	repeated use_interval_info info            = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 30 下载渠道分析  TOP10渠道
message download_src_analyze_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 request_type                			= 4;   // 请求类型 0表示新增用户、1表示活跃用户
	optional common.common_ask_header    ask_header     = 5;   // 通用的公共请求字段(比如回复的主题)
}

message download_src_analyze_ans
{
	repeated download_src_user_acount_info info            = 1;   // 数据
    optional common.errorinfo   error                      = 2;   // 错误代码
}

// 31 下载渠道分析详细
message download_src_analyze_detail_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 page_num                    			= 4;   // 请求页面数量
    optional int32 cur_page                    			= 5;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 6;   // 通用的公共请求字段(比如回复的主题)
}

message download_src_analyze_detail_ans
{
	optional int32 total_number                = 1;   // 总条数
	repeated download_src_detail info          = 2;   // 数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

// 32 TOP10第三方登录列表柱状图统计
message third_party_login_analyze_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional common.common_ask_header    ask_header     = 4;   // 通用的公共请求字段(比如回复的主题)
}

message third_party_login_analyze_ans
{
	repeated third_party_login_info info       = 1;   // 数据
    optional common.errorinfo   error          = 2;   // 错误代码
}

// 33 第三方登录列表
message third_party_login_analyze_list_ask
{
	optional bytes start_date                  			= 1;   // 开始日期(yyyymmddHHMMSSmmmuuu)
    optional bytes end_date                    			= 2;   // 结束日期(yyyymmddHHMMSSmmmuuu)
	optional bytes os_version                  			= 3;   // OS版本
	optional int32 page_num                    			= 4;   // 请求页面数量
    optional int32 cur_page                    			= 5;   // 当前请求页面
	optional common.common_ask_header    ask_header     = 6;   // 通用的公共请求字段(比如回复的主题)
}

message third_party_login_analyze_list_ans
{
	optional int32 total_number                = 1;   // 总条数
	repeated third_party_login_info info       = 2;   // 数据
    optional common.errorinfo   error          = 3;   // 错误代码
}

//运营报告(最近一天/一周/一月)
message operation_report_ask{
	optional common.common_ask_header                   ask_header    = 1;       // 通用的公共请求字段(比如回复的主题)

}
message operation_report_info
{
	optional bytes report_item       = 1; //概况项名称
	optional int32 total_num         = 2; //数量
}
//运营报告
message operation_report_ans
{
	repeated operation_report_info  list     = 1;//概况列表
	optional common.errorinfo       error    = 2;//错误代码
}



/// 32用户认证分析

// 用户认证分析文案每一行
message doc_row
{
	repeated bytes value 			= 1;		//数值
}

// 用户认证分析表格每一行
message user_certification_list_row
{
	optional bytes name 			= 1;		// 名称
	optional bytes page2 			= 2;		// 二级页面							(空表示页面不存在)
	optional bytes page3 			= 3;		// 三级页面							(空表示页面不存在)
	optional int32 access_count		= 4;		// 访问人数							(-1显示表示没有，不显示)
	optional int32 submit_count		= 5;        // 资料提交人数						(-1显示表示没有，不显示)
	optional float percent1			= 6;        // 实际填写该项占访问该项比例		(-1显示表示没有，不显示)
	optional float percent2 		= 7;        // 实际填写该项占获取额度人数比例	(-1显示表示没有，不显示)
	optional float percent3 		= 8;        // 实际填写该项占申请身份人数比例	(-1显示表示没有，不显示)
	optional float percent4 		= 9;        // 实际填写占总注册人数比例			(-1显示表示没有，不显示)
}

// 用户认证分析请求
message user_certification_ask
{
   optional common.common_ask_header	ask_header  		= 1;    // 通用的公共请求字段(比如回复的主题)
   optional int32 						certification_type	= 2;	// 户认证类型(1=全部, 2=借款人, 3=担保人)
   optional bytes 						begin_time			= 3;	// 开始时间(yyyymmddHHMMSSmmmuuu)			
   optional bytes 						end_time			= 4;	// 结束时间(yyyymmddHHMMSSmmmuuu)		
}

// 用户认证分析响应
message user_certification_ans
{   
   repeated doc_row 						row		= 1;		// 文案数值
   repeated user_certification_list_row 	list	= 2; 		// 表格
   optional common.result_info       		result  = 3;  		// 错误代码
}


