// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CCS_IMP.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CCS_IMP.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CCS_IMP {

namespace {

const ::google::protobuf::Descriptor* credit_line_statistics_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_line_statistics_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_line_model_detail_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_line_model_detail_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_detail_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_detail_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_line_statistics_ask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_line_statistics_ask_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_line_statistics_ans_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_line_statistics_ans_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_detail_ask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_detail_ask_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_detail_ans_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_detail_ans_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_type_detail_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_type_detail_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_detail_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_detail_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_detail_load_ask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_detail_load_ask_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_detail_load_ans_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_detail_load_ans_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_detail_save_ask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_detail_save_ask_reflection_ = NULL;
const ::google::protobuf::Descriptor* credit_model_detail_save_ans_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  credit_model_detail_save_ans_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CCS_5fIMP_2eproto() {
  protobuf_AddDesc_CCS_5fIMP_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CCS_IMP.proto");
  GOOGLE_CHECK(file != NULL);
  credit_line_statistics_info_descriptor_ = file->message_type(0);
  static const int credit_line_statistics_info_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_info, line_interval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_info, total_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_info, value_),
  };
  credit_line_statistics_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_line_statistics_info_descriptor_,
      credit_line_statistics_info::default_instance_,
      credit_line_statistics_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_line_statistics_info));
  credit_line_model_detail_info_descriptor_ = file->message_type(1);
  static const int credit_line_model_detail_info_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_model_detail_info, model_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_model_detail_info, percent_),
  };
  credit_line_model_detail_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_line_model_detail_info_descriptor_,
      credit_line_model_detail_info::default_instance_,
      credit_line_model_detail_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_model_detail_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_model_detail_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_line_model_detail_info));
  credit_detail_info_descriptor_ = file->message_type(2);
  static const int credit_detail_info_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, real_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, mobile_phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, id_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, line_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, list_),
  };
  credit_detail_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_detail_info_descriptor_,
      credit_detail_info::default_instance_,
      credit_detail_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_detail_info));
  credit_line_statistics_ask_descriptor_ = file->message_type(3);
  static const int credit_line_statistics_ask_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, credit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, user_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, model_no_),
  };
  credit_line_statistics_ask_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_line_statistics_ask_descriptor_,
      credit_line_statistics_ask::default_instance_,
      credit_line_statistics_ask_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ask, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_line_statistics_ask));
  credit_line_statistics_ans_descriptor_ = file->message_type(4);
  static const int credit_line_statistics_ans_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ans, list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ans, error_),
  };
  credit_line_statistics_ans_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_line_statistics_ans_descriptor_,
      credit_line_statistics_ans::default_instance_,
      credit_line_statistics_ans_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ans, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_line_statistics_ans, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_line_statistics_ans));
  credit_detail_ask_descriptor_ = file->message_type(5);
  static const int credit_detail_ask_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, credit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, user_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, page_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, cur_page_),
  };
  credit_detail_ask_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_detail_ask_descriptor_,
      credit_detail_ask::default_instance_,
      credit_detail_ask_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ask, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_detail_ask));
  credit_detail_ans_descriptor_ = file->message_type(6);
  static const int credit_detail_ans_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ans, list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ans, total_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ans, error_),
  };
  credit_detail_ans_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_detail_ans_descriptor_,
      credit_detail_ans::default_instance_,
      credit_detail_ans_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ans, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_detail_ans, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_detail_ans));
  credit_model_type_detail_info_descriptor_ = file->message_type(7);
  static const int credit_model_type_detail_info_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, param3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, param4_),
  };
  credit_model_type_detail_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_type_detail_info_descriptor_,
      credit_model_type_detail_info::default_instance_,
      credit_model_type_detail_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_type_detail_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_type_detail_info));
  credit_model_detail_info_descriptor_ = file->message_type(8);
  static const int credit_model_detail_info_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, credit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, user_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, model_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, list_),
  };
  credit_model_detail_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_detail_info_descriptor_,
      credit_model_detail_info::default_instance_,
      credit_model_detail_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_detail_info));
  credit_model_detail_load_ask_descriptor_ = file->message_type(9);
  static const int credit_model_detail_load_ask_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ask, info_),
  };
  credit_model_detail_load_ask_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_detail_load_ask_descriptor_,
      credit_model_detail_load_ask::default_instance_,
      credit_model_detail_load_ask_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ask, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ask, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_detail_load_ask));
  credit_model_detail_load_ans_descriptor_ = file->message_type(10);
  static const int credit_model_detail_load_ans_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ans, list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ans, error_),
  };
  credit_model_detail_load_ans_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_detail_load_ans_descriptor_,
      credit_model_detail_load_ans::default_instance_,
      credit_model_detail_load_ans_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ans, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_load_ans, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_detail_load_ans));
  credit_model_detail_save_ask_descriptor_ = file->message_type(11);
  static const int credit_model_detail_save_ask_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ask, list_),
  };
  credit_model_detail_save_ask_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_detail_save_ask_descriptor_,
      credit_model_detail_save_ask::default_instance_,
      credit_model_detail_save_ask_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ask, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ask, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_detail_save_ask));
  credit_model_detail_save_ans_descriptor_ = file->message_type(12);
  static const int credit_model_detail_save_ans_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ans, error_),
  };
  credit_model_detail_save_ans_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      credit_model_detail_save_ans_descriptor_,
      credit_model_detail_save_ans::default_instance_,
      credit_model_detail_save_ans_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ans, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(credit_model_detail_save_ans, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(credit_model_detail_save_ans));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CCS_5fIMP_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_line_statistics_info_descriptor_, &credit_line_statistics_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_line_model_detail_info_descriptor_, &credit_line_model_detail_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_detail_info_descriptor_, &credit_detail_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_line_statistics_ask_descriptor_, &credit_line_statistics_ask::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_line_statistics_ans_descriptor_, &credit_line_statistics_ans::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_detail_ask_descriptor_, &credit_detail_ask::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_detail_ans_descriptor_, &credit_detail_ans::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_type_detail_info_descriptor_, &credit_model_type_detail_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_detail_info_descriptor_, &credit_model_detail_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_detail_load_ask_descriptor_, &credit_model_detail_load_ask::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_detail_load_ans_descriptor_, &credit_model_detail_load_ans::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_detail_save_ask_descriptor_, &credit_model_detail_save_ask::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    credit_model_detail_save_ans_descriptor_, &credit_model_detail_save_ans::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CCS_5fIMP_2eproto() {
  delete credit_line_statistics_info::default_instance_;
  delete credit_line_statistics_info_reflection_;
  delete credit_line_model_detail_info::default_instance_;
  delete credit_line_model_detail_info_reflection_;
  delete credit_detail_info::default_instance_;
  delete credit_detail_info_reflection_;
  delete credit_line_statistics_ask::default_instance_;
  delete credit_line_statistics_ask_reflection_;
  delete credit_line_statistics_ans::default_instance_;
  delete credit_line_statistics_ans_reflection_;
  delete credit_detail_ask::default_instance_;
  delete credit_detail_ask_reflection_;
  delete credit_detail_ans::default_instance_;
  delete credit_detail_ans_reflection_;
  delete credit_model_type_detail_info::default_instance_;
  delete credit_model_type_detail_info_reflection_;
  delete credit_model_detail_info::default_instance_;
  delete credit_model_detail_info_reflection_;
  delete credit_model_detail_load_ask::default_instance_;
  delete credit_model_detail_load_ask_reflection_;
  delete credit_model_detail_load_ans::default_instance_;
  delete credit_model_detail_load_ans_reflection_;
  delete credit_model_detail_save_ask::default_instance_;
  delete credit_model_detail_save_ask_reflection_;
  delete credit_model_detail_save_ans::default_instance_;
  delete credit_model_detail_save_ans_reflection_;
}

void protobuf_AddDesc_CCS_5fIMP_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::common::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rCCS_IMP.proto\022\007CCS_IMP\032\014common.proto\"Y"
    "\n\033credit_line_statistics_info\022\025\n\rline_in"
    "terval\030\001 \001(\014\022\024\n\014total_number\030\002 \001(\005\022\r\n\005va"
    "lue\030\003 \001(\002\"B\n\035credit_line_model_detail_in"
    "fo\022\020\n\010model_no\030\001 \001(\014\022\017\n\007percent\030\002 \001(\002\"\224\001"
    "\n\022credit_detail_info\022\021\n\treal_name\030\001 \001(\014\022"
    "\024\n\014mobile_phone\030\002 \001(\014\022\r\n\005id_no\030\003 \001(\014\022\020\n\010"
    "line_val\030\004 \001(\014\0224\n\004list\030\005 \003(\0132&.CCS_IMP.c"
    "redit_line_model_detail_info\"|\n\032credit_l"
    "ine_statistics_ask\022\023\n\013credit_type\030\001 \001(\014\022"
    "\021\n\tuser_type\030\002 \001(\014\022\022\n\nstart_date\030\003 \001(\014\022\020"
    "\n\010end_date\030\004 \001(\014\022\020\n\010model_no\030\005 \001(\014\"r\n\032cr"
    "edit_line_statistics_ans\0222\n\004list\030\001 \003(\0132$"
    ".CCS_IMP.credit_line_statistics_info\022 \n\005"
    "error\030\002 \001(\0132\021.common.errorinfo\"\205\001\n\021credi"
    "t_detail_ask\022\023\n\013credit_type\030\001 \001(\014\022\021\n\tuse"
    "r_type\030\002 \001(\014\022\022\n\nstart_date\030\003 \001(\014\022\020\n\010end_"
    "date\030\004 \001(\014\022\020\n\010page_num\030\005 \001(\005\022\020\n\010cur_page"
    "\030\006 \001(\005\"v\n\021credit_detail_ans\022)\n\004list\030\001 \003("
    "\0132\033.CCS_IMP.credit_detail_info\022\024\n\014total_"
    "number\030\002 \001(\005\022 \n\005error\030\003 \001(\0132\021.common.err"
    "orinfo\"m\n\035credit_model_type_detail_info\022"
    "\014\n\004type\030\001 \001(\014\022\016\n\006param1\030\002 \001(\002\022\016\n\006param2\030"
    "\003 \001(\002\022\016\n\006param3\030\004 \001(\002\022\016\n\006param4\030\005 \001(\002\"\212\001"
    "\n\030credit_model_detail_info\022\023\n\013credit_typ"
    "e\030\001 \001(\014\022\021\n\tuser_type\030\002 \001(\014\022\020\n\010model_no\030\003"
    " \001(\014\0224\n\004list\030\004 \003(\0132&.CCS_IMP.credit_mode"
    "l_type_detail_info\"O\n\034credit_model_detai"
    "l_load_ask\022/\n\004info\030\001 \001(\0132!.CCS_IMP.credi"
    "t_model_detail_info\"q\n\034credit_model_deta"
    "il_load_ans\022/\n\004list\030\001 \003(\0132!.CCS_IMP.cred"
    "it_model_detail_info\022 \n\005error\030\002 \001(\0132\021.co"
    "mmon.errorinfo\"O\n\034credit_model_detail_sa"
    "ve_ask\022/\n\004list\030\001 \003(\0132!.CCS_IMP.credit_mo"
    "del_detail_info\"@\n\034credit_model_detail_s"
    "ave_ans\022 \n\005error\030\001 \001(\0132\021.common.errorinf"
    "o", 1441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CCS_IMP.proto", &protobuf_RegisterTypes);
  credit_line_statistics_info::default_instance_ = new credit_line_statistics_info();
  credit_line_model_detail_info::default_instance_ = new credit_line_model_detail_info();
  credit_detail_info::default_instance_ = new credit_detail_info();
  credit_line_statistics_ask::default_instance_ = new credit_line_statistics_ask();
  credit_line_statistics_ans::default_instance_ = new credit_line_statistics_ans();
  credit_detail_ask::default_instance_ = new credit_detail_ask();
  credit_detail_ans::default_instance_ = new credit_detail_ans();
  credit_model_type_detail_info::default_instance_ = new credit_model_type_detail_info();
  credit_model_detail_info::default_instance_ = new credit_model_detail_info();
  credit_model_detail_load_ask::default_instance_ = new credit_model_detail_load_ask();
  credit_model_detail_load_ans::default_instance_ = new credit_model_detail_load_ans();
  credit_model_detail_save_ask::default_instance_ = new credit_model_detail_save_ask();
  credit_model_detail_save_ans::default_instance_ = new credit_model_detail_save_ans();
  credit_line_statistics_info::default_instance_->InitAsDefaultInstance();
  credit_line_model_detail_info::default_instance_->InitAsDefaultInstance();
  credit_detail_info::default_instance_->InitAsDefaultInstance();
  credit_line_statistics_ask::default_instance_->InitAsDefaultInstance();
  credit_line_statistics_ans::default_instance_->InitAsDefaultInstance();
  credit_detail_ask::default_instance_->InitAsDefaultInstance();
  credit_detail_ans::default_instance_->InitAsDefaultInstance();
  credit_model_type_detail_info::default_instance_->InitAsDefaultInstance();
  credit_model_detail_info::default_instance_->InitAsDefaultInstance();
  credit_model_detail_load_ask::default_instance_->InitAsDefaultInstance();
  credit_model_detail_load_ans::default_instance_->InitAsDefaultInstance();
  credit_model_detail_save_ask::default_instance_->InitAsDefaultInstance();
  credit_model_detail_save_ans::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CCS_5fIMP_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CCS_5fIMP_2eproto {
  StaticDescriptorInitializer_CCS_5fIMP_2eproto() {
    protobuf_AddDesc_CCS_5fIMP_2eproto();
  }
} static_descriptor_initializer_CCS_5fIMP_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int credit_line_statistics_info::kLineIntervalFieldNumber;
const int credit_line_statistics_info::kTotalNumberFieldNumber;
const int credit_line_statistics_info::kValueFieldNumber;
#endif  // !_MSC_VER

credit_line_statistics_info::credit_line_statistics_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_line_statistics_info)
}

void credit_line_statistics_info::InitAsDefaultInstance() {
}

credit_line_statistics_info::credit_line_statistics_info(const credit_line_statistics_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_line_statistics_info)
}

void credit_line_statistics_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  line_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_number_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_line_statistics_info::~credit_line_statistics_info() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_line_statistics_info)
  SharedDtor();
}

void credit_line_statistics_info::SharedDtor() {
  if (line_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete line_interval_;
  }
  if (this != default_instance_) {
  }
}

void credit_line_statistics_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_line_statistics_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_line_statistics_info_descriptor_;
}

const credit_line_statistics_info& credit_line_statistics_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_line_statistics_info* credit_line_statistics_info::default_instance_ = NULL;

credit_line_statistics_info* credit_line_statistics_info::New() const {
  return new credit_line_statistics_info;
}

void credit_line_statistics_info::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<credit_line_statistics_info*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(total_number_, value_);
    if (has_line_interval()) {
      if (line_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        line_interval_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_line_statistics_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_line_statistics_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes line_interval = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_total_number;
        break;
      }

      // optional int32 total_number = 2;
      case 2: {
        if (tag == 16) {
         parse_total_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_number_)));
          set_has_total_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_value;
        break;
      }

      // optional float value = 3;
      case 3: {
        if (tag == 29) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_line_statistics_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_line_statistics_info)
  return false;
#undef DO_
}

void credit_line_statistics_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_line_statistics_info)
  // optional bytes line_interval = 1;
  if (has_line_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->line_interval(), output);
  }

  // optional int32 total_number = 2;
  if (has_total_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_number(), output);
  }

  // optional float value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_line_statistics_info)
}

::google::protobuf::uint8* credit_line_statistics_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_line_statistics_info)
  // optional bytes line_interval = 1;
  if (has_line_interval()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->line_interval(), target);
  }

  // optional int32 total_number = 2;
  if (has_total_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_number(), target);
  }

  // optional float value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_line_statistics_info)
  return target;
}

int credit_line_statistics_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes line_interval = 1;
    if (has_line_interval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->line_interval());
    }

    // optional int32 total_number = 2;
    if (has_total_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_number());
    }

    // optional float value = 3;
    if (has_value()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_line_statistics_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_line_statistics_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_line_statistics_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_line_statistics_info::MergeFrom(const credit_line_statistics_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_line_interval()) {
      set_line_interval(from.line_interval());
    }
    if (from.has_total_number()) {
      set_total_number(from.total_number());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_line_statistics_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_line_statistics_info::CopyFrom(const credit_line_statistics_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_line_statistics_info::IsInitialized() const {

  return true;
}

void credit_line_statistics_info::Swap(credit_line_statistics_info* other) {
  if (other != this) {
    std::swap(line_interval_, other->line_interval_);
    std::swap(total_number_, other->total_number_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_line_statistics_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_line_statistics_info_descriptor_;
  metadata.reflection = credit_line_statistics_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_line_model_detail_info::kModelNoFieldNumber;
const int credit_line_model_detail_info::kPercentFieldNumber;
#endif  // !_MSC_VER

credit_line_model_detail_info::credit_line_model_detail_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_line_model_detail_info)
}

void credit_line_model_detail_info::InitAsDefaultInstance() {
}

credit_line_model_detail_info::credit_line_model_detail_info(const credit_line_model_detail_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_line_model_detail_info)
}

void credit_line_model_detail_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  model_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  percent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_line_model_detail_info::~credit_line_model_detail_info() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_line_model_detail_info)
  SharedDtor();
}

void credit_line_model_detail_info::SharedDtor() {
  if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_no_;
  }
  if (this != default_instance_) {
  }
}

void credit_line_model_detail_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_line_model_detail_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_line_model_detail_info_descriptor_;
}

const credit_line_model_detail_info& credit_line_model_detail_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_line_model_detail_info* credit_line_model_detail_info::default_instance_ = NULL;

credit_line_model_detail_info* credit_line_model_detail_info::New() const {
  return new credit_line_model_detail_info;
}

void credit_line_model_detail_info::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_model_no()) {
      if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        model_no_->clear();
      }
    }
    percent_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_line_model_detail_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_line_model_detail_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes model_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_model_no()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_percent;
        break;
      }

      // optional float percent = 2;
      case 2: {
        if (tag == 21) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &percent_)));
          set_has_percent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_line_model_detail_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_line_model_detail_info)
  return false;
#undef DO_
}

void credit_line_model_detail_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_line_model_detail_info)
  // optional bytes model_no = 1;
  if (has_model_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->model_no(), output);
  }

  // optional float percent = 2;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->percent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_line_model_detail_info)
}

::google::protobuf::uint8* credit_line_model_detail_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_line_model_detail_info)
  // optional bytes model_no = 1;
  if (has_model_no()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->model_no(), target);
  }

  // optional float percent = 2;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->percent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_line_model_detail_info)
  return target;
}

int credit_line_model_detail_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes model_no = 1;
    if (has_model_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->model_no());
    }

    // optional float percent = 2;
    if (has_percent()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_line_model_detail_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_line_model_detail_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_line_model_detail_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_line_model_detail_info::MergeFrom(const credit_line_model_detail_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_model_no()) {
      set_model_no(from.model_no());
    }
    if (from.has_percent()) {
      set_percent(from.percent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_line_model_detail_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_line_model_detail_info::CopyFrom(const credit_line_model_detail_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_line_model_detail_info::IsInitialized() const {

  return true;
}

void credit_line_model_detail_info::Swap(credit_line_model_detail_info* other) {
  if (other != this) {
    std::swap(model_no_, other->model_no_);
    std::swap(percent_, other->percent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_line_model_detail_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_line_model_detail_info_descriptor_;
  metadata.reflection = credit_line_model_detail_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_detail_info::kRealNameFieldNumber;
const int credit_detail_info::kMobilePhoneFieldNumber;
const int credit_detail_info::kIdNoFieldNumber;
const int credit_detail_info::kLineValFieldNumber;
const int credit_detail_info::kListFieldNumber;
#endif  // !_MSC_VER

credit_detail_info::credit_detail_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_detail_info)
}

void credit_detail_info::InitAsDefaultInstance() {
}

credit_detail_info::credit_detail_info(const credit_detail_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_detail_info)
}

void credit_detail_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_val_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_detail_info::~credit_detail_info() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_detail_info)
  SharedDtor();
}

void credit_detail_info::SharedDtor() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (mobile_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_phone_;
  }
  if (id_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_no_;
  }
  if (line_val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete line_val_;
  }
  if (this != default_instance_) {
  }
}

void credit_detail_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_detail_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_detail_info_descriptor_;
}

const credit_detail_info& credit_detail_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_detail_info* credit_detail_info::default_instance_ = NULL;

credit_detail_info* credit_detail_info::New() const {
  return new credit_detail_info;
}

void credit_detail_info::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_real_name()) {
      if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        real_name_->clear();
      }
    }
    if (has_mobile_phone()) {
      if (mobile_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mobile_phone_->clear();
      }
    }
    if (has_id_no()) {
      if (id_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_no_->clear();
      }
    }
    if (has_line_val()) {
      if (line_val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        line_val_->clear();
      }
    }
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_detail_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_detail_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes real_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_real_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mobile_phone;
        break;
      }

      // optional bytes mobile_phone = 2;
      case 2: {
        if (tag == 18) {
         parse_mobile_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mobile_phone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_id_no;
        break;
      }

      // optional bytes id_no = 3;
      case 3: {
        if (tag == 26) {
         parse_id_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id_no()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_line_val;
        break;
      }

      // optional bytes line_val = 4;
      case 4: {
        if (tag == 34) {
         parse_line_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_list;
        break;
      }

      // repeated .CCS_IMP.credit_line_model_detail_info list = 5;
      case 5: {
        if (tag == 42) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_detail_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_detail_info)
  return false;
#undef DO_
}

void credit_detail_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_detail_info)
  // optional bytes real_name = 1;
  if (has_real_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->real_name(), output);
  }

  // optional bytes mobile_phone = 2;
  if (has_mobile_phone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mobile_phone(), output);
  }

  // optional bytes id_no = 3;
  if (has_id_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->id_no(), output);
  }

  // optional bytes line_val = 4;
  if (has_line_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->line_val(), output);
  }

  // repeated .CCS_IMP.credit_line_model_detail_info list = 5;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_detail_info)
}

::google::protobuf::uint8* credit_detail_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_detail_info)
  // optional bytes real_name = 1;
  if (has_real_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->real_name(), target);
  }

  // optional bytes mobile_phone = 2;
  if (has_mobile_phone()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mobile_phone(), target);
  }

  // optional bytes id_no = 3;
  if (has_id_no()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->id_no(), target);
  }

  // optional bytes line_val = 4;
  if (has_line_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->line_val(), target);
  }

  // repeated .CCS_IMP.credit_line_model_detail_info list = 5;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_detail_info)
  return target;
}

int credit_detail_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes real_name = 1;
    if (has_real_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->real_name());
    }

    // optional bytes mobile_phone = 2;
    if (has_mobile_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mobile_phone());
    }

    // optional bytes id_no = 3;
    if (has_id_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id_no());
    }

    // optional bytes line_val = 4;
    if (has_line_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->line_val());
    }

  }
  // repeated .CCS_IMP.credit_line_model_detail_info list = 5;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_detail_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_detail_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_detail_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_detail_info::MergeFrom(const credit_detail_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_real_name()) {
      set_real_name(from.real_name());
    }
    if (from.has_mobile_phone()) {
      set_mobile_phone(from.mobile_phone());
    }
    if (from.has_id_no()) {
      set_id_no(from.id_no());
    }
    if (from.has_line_val()) {
      set_line_val(from.line_val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_detail_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_detail_info::CopyFrom(const credit_detail_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_detail_info::IsInitialized() const {

  return true;
}

void credit_detail_info::Swap(credit_detail_info* other) {
  if (other != this) {
    std::swap(real_name_, other->real_name_);
    std::swap(mobile_phone_, other->mobile_phone_);
    std::swap(id_no_, other->id_no_);
    std::swap(line_val_, other->line_val_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_detail_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_detail_info_descriptor_;
  metadata.reflection = credit_detail_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_line_statistics_ask::kCreditTypeFieldNumber;
const int credit_line_statistics_ask::kUserTypeFieldNumber;
const int credit_line_statistics_ask::kStartDateFieldNumber;
const int credit_line_statistics_ask::kEndDateFieldNumber;
const int credit_line_statistics_ask::kModelNoFieldNumber;
#endif  // !_MSC_VER

credit_line_statistics_ask::credit_line_statistics_ask()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_line_statistics_ask)
}

void credit_line_statistics_ask::InitAsDefaultInstance() {
}

credit_line_statistics_ask::credit_line_statistics_ask(const credit_line_statistics_ask& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_line_statistics_ask)
}

void credit_line_statistics_ask::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  credit_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_line_statistics_ask::~credit_line_statistics_ask() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_line_statistics_ask)
  SharedDtor();
}

void credit_line_statistics_ask::SharedDtor() {
  if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete credit_type_;
  }
  if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_type_;
  }
  if (start_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete start_date_;
  }
  if (end_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete end_date_;
  }
  if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_no_;
  }
  if (this != default_instance_) {
  }
}

void credit_line_statistics_ask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_line_statistics_ask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_line_statistics_ask_descriptor_;
}

const credit_line_statistics_ask& credit_line_statistics_ask::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_line_statistics_ask* credit_line_statistics_ask::default_instance_ = NULL;

credit_line_statistics_ask* credit_line_statistics_ask::New() const {
  return new credit_line_statistics_ask;
}

void credit_line_statistics_ask::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_credit_type()) {
      if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        credit_type_->clear();
      }
    }
    if (has_user_type()) {
      if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_type_->clear();
      }
    }
    if (has_start_date()) {
      if (start_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        start_date_->clear();
      }
    }
    if (has_end_date()) {
      if (end_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        end_date_->clear();
      }
    }
    if (has_model_no()) {
      if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        model_no_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_line_statistics_ask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_line_statistics_ask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes credit_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_credit_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_type;
        break;
      }

      // optional bytes user_type = 2;
      case 2: {
        if (tag == 18) {
         parse_user_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_start_date;
        break;
      }

      // optional bytes start_date = 3;
      case 3: {
        if (tag == 26) {
         parse_start_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_end_date;
        break;
      }

      // optional bytes end_date = 4;
      case 4: {
        if (tag == 34) {
         parse_end_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_model_no;
        break;
      }

      // optional bytes model_no = 5;
      case 5: {
        if (tag == 42) {
         parse_model_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_model_no()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_line_statistics_ask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_line_statistics_ask)
  return false;
#undef DO_
}

void credit_line_statistics_ask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_line_statistics_ask)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->credit_type(), output);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->user_type(), output);
  }

  // optional bytes start_date = 3;
  if (has_start_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->start_date(), output);
  }

  // optional bytes end_date = 4;
  if (has_end_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_date(), output);
  }

  // optional bytes model_no = 5;
  if (has_model_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->model_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_line_statistics_ask)
}

::google::protobuf::uint8* credit_line_statistics_ask::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_line_statistics_ask)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->credit_type(), target);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->user_type(), target);
  }

  // optional bytes start_date = 3;
  if (has_start_date()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->start_date(), target);
  }

  // optional bytes end_date = 4;
  if (has_end_date()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_date(), target);
  }

  // optional bytes model_no = 5;
  if (has_model_no()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->model_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_line_statistics_ask)
  return target;
}

int credit_line_statistics_ask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes credit_type = 1;
    if (has_credit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->credit_type());
    }

    // optional bytes user_type = 2;
    if (has_user_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_type());
    }

    // optional bytes start_date = 3;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_date());
    }

    // optional bytes end_date = 4;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_date());
    }

    // optional bytes model_no = 5;
    if (has_model_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->model_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_line_statistics_ask::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_line_statistics_ask* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_line_statistics_ask*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_line_statistics_ask::MergeFrom(const credit_line_statistics_ask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_credit_type()) {
      set_credit_type(from.credit_type());
    }
    if (from.has_user_type()) {
      set_user_type(from.user_type());
    }
    if (from.has_start_date()) {
      set_start_date(from.start_date());
    }
    if (from.has_end_date()) {
      set_end_date(from.end_date());
    }
    if (from.has_model_no()) {
      set_model_no(from.model_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_line_statistics_ask::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_line_statistics_ask::CopyFrom(const credit_line_statistics_ask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_line_statistics_ask::IsInitialized() const {

  return true;
}

void credit_line_statistics_ask::Swap(credit_line_statistics_ask* other) {
  if (other != this) {
    std::swap(credit_type_, other->credit_type_);
    std::swap(user_type_, other->user_type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(model_no_, other->model_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_line_statistics_ask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_line_statistics_ask_descriptor_;
  metadata.reflection = credit_line_statistics_ask_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_line_statistics_ans::kListFieldNumber;
const int credit_line_statistics_ans::kErrorFieldNumber;
#endif  // !_MSC_VER

credit_line_statistics_ans::credit_line_statistics_ans()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_line_statistics_ans)
}

void credit_line_statistics_ans::InitAsDefaultInstance() {
  error_ = const_cast< ::common::errorinfo*>(&::common::errorinfo::default_instance());
}

credit_line_statistics_ans::credit_line_statistics_ans(const credit_line_statistics_ans& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_line_statistics_ans)
}

void credit_line_statistics_ans::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_line_statistics_ans::~credit_line_statistics_ans() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_line_statistics_ans)
  SharedDtor();
}

void credit_line_statistics_ans::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void credit_line_statistics_ans::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_line_statistics_ans::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_line_statistics_ans_descriptor_;
}

const credit_line_statistics_ans& credit_line_statistics_ans::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_line_statistics_ans* credit_line_statistics_ans::default_instance_ = NULL;

credit_line_statistics_ans* credit_line_statistics_ans::New() const {
  return new credit_line_statistics_ans;
}

void credit_line_statistics_ans::Clear() {
  if (has_error()) {
    if (error_ != NULL) error_->::common::errorinfo::Clear();
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_line_statistics_ans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_line_statistics_ans)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCS_IMP.credit_line_statistics_info list = 1;
      case 1: {
        if (tag == 10) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .common.errorinfo error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_line_statistics_ans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_line_statistics_ans)
  return false;
#undef DO_
}

void credit_line_statistics_ans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_line_statistics_ans)
  // repeated .CCS_IMP.credit_line_statistics_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // optional .common.errorinfo error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_line_statistics_ans)
}

::google::protobuf::uint8* credit_line_statistics_ans::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_line_statistics_ans)
  // repeated .CCS_IMP.credit_line_statistics_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // optional .common.errorinfo error = 2;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_line_statistics_ans)
  return target;
}

int credit_line_statistics_ans::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .common.errorinfo error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

  }
  // repeated .CCS_IMP.credit_line_statistics_info list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_line_statistics_ans::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_line_statistics_ans* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_line_statistics_ans*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_line_statistics_ans::MergeFrom(const credit_line_statistics_ans& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_error()) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_line_statistics_ans::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_line_statistics_ans::CopyFrom(const credit_line_statistics_ans& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_line_statistics_ans::IsInitialized() const {

  return true;
}

void credit_line_statistics_ans::Swap(credit_line_statistics_ans* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_line_statistics_ans::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_line_statistics_ans_descriptor_;
  metadata.reflection = credit_line_statistics_ans_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_detail_ask::kCreditTypeFieldNumber;
const int credit_detail_ask::kUserTypeFieldNumber;
const int credit_detail_ask::kStartDateFieldNumber;
const int credit_detail_ask::kEndDateFieldNumber;
const int credit_detail_ask::kPageNumFieldNumber;
const int credit_detail_ask::kCurPageFieldNumber;
#endif  // !_MSC_VER

credit_detail_ask::credit_detail_ask()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_detail_ask)
}

void credit_detail_ask::InitAsDefaultInstance() {
}

credit_detail_ask::credit_detail_ask(const credit_detail_ask& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_detail_ask)
}

void credit_detail_ask::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  credit_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_num_ = 0;
  cur_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_detail_ask::~credit_detail_ask() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_detail_ask)
  SharedDtor();
}

void credit_detail_ask::SharedDtor() {
  if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete credit_type_;
  }
  if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_type_;
  }
  if (start_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete start_date_;
  }
  if (end_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete end_date_;
  }
  if (this != default_instance_) {
  }
}

void credit_detail_ask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_detail_ask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_detail_ask_descriptor_;
}

const credit_detail_ask& credit_detail_ask::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_detail_ask* credit_detail_ask::default_instance_ = NULL;

credit_detail_ask* credit_detail_ask::New() const {
  return new credit_detail_ask;
}

void credit_detail_ask::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<credit_detail_ask*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(page_num_, cur_page_);
    if (has_credit_type()) {
      if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        credit_type_->clear();
      }
    }
    if (has_user_type()) {
      if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_type_->clear();
      }
    }
    if (has_start_date()) {
      if (start_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        start_date_->clear();
      }
    }
    if (has_end_date()) {
      if (end_date_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        end_date_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_detail_ask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_detail_ask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes credit_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_credit_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_type;
        break;
      }

      // optional bytes user_type = 2;
      case 2: {
        if (tag == 18) {
         parse_user_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_start_date;
        break;
      }

      // optional bytes start_date = 3;
      case 3: {
        if (tag == 26) {
         parse_start_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_end_date;
        break;
      }

      // optional bytes end_date = 4;
      case 4: {
        if (tag == 34) {
         parse_end_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_page_num;
        break;
      }

      // optional int32 page_num = 5;
      case 5: {
        if (tag == 40) {
         parse_page_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_num_)));
          set_has_page_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_cur_page;
        break;
      }

      // optional int32 cur_page = 6;
      case 6: {
        if (tag == 48) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_detail_ask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_detail_ask)
  return false;
#undef DO_
}

void credit_detail_ask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_detail_ask)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->credit_type(), output);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->user_type(), output);
  }

  // optional bytes start_date = 3;
  if (has_start_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->start_date(), output);
  }

  // optional bytes end_date = 4;
  if (has_end_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_date(), output);
  }

  // optional int32 page_num = 5;
  if (has_page_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->page_num(), output);
  }

  // optional int32 cur_page = 6;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cur_page(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_detail_ask)
}

::google::protobuf::uint8* credit_detail_ask::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_detail_ask)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->credit_type(), target);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->user_type(), target);
  }

  // optional bytes start_date = 3;
  if (has_start_date()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->start_date(), target);
  }

  // optional bytes end_date = 4;
  if (has_end_date()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_date(), target);
  }

  // optional int32 page_num = 5;
  if (has_page_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->page_num(), target);
  }

  // optional int32 cur_page = 6;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cur_page(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_detail_ask)
  return target;
}

int credit_detail_ask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes credit_type = 1;
    if (has_credit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->credit_type());
    }

    // optional bytes user_type = 2;
    if (has_user_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_type());
    }

    // optional bytes start_date = 3;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->start_date());
    }

    // optional bytes end_date = 4;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->end_date());
    }

    // optional int32 page_num = 5;
    if (has_page_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_num());
    }

    // optional int32 cur_page = 6;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_detail_ask::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_detail_ask* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_detail_ask*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_detail_ask::MergeFrom(const credit_detail_ask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_credit_type()) {
      set_credit_type(from.credit_type());
    }
    if (from.has_user_type()) {
      set_user_type(from.user_type());
    }
    if (from.has_start_date()) {
      set_start_date(from.start_date());
    }
    if (from.has_end_date()) {
      set_end_date(from.end_date());
    }
    if (from.has_page_num()) {
      set_page_num(from.page_num());
    }
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_detail_ask::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_detail_ask::CopyFrom(const credit_detail_ask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_detail_ask::IsInitialized() const {

  return true;
}

void credit_detail_ask::Swap(credit_detail_ask* other) {
  if (other != this) {
    std::swap(credit_type_, other->credit_type_);
    std::swap(user_type_, other->user_type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(page_num_, other->page_num_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_detail_ask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_detail_ask_descriptor_;
  metadata.reflection = credit_detail_ask_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_detail_ans::kListFieldNumber;
const int credit_detail_ans::kTotalNumberFieldNumber;
const int credit_detail_ans::kErrorFieldNumber;
#endif  // !_MSC_VER

credit_detail_ans::credit_detail_ans()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_detail_ans)
}

void credit_detail_ans::InitAsDefaultInstance() {
  error_ = const_cast< ::common::errorinfo*>(&::common::errorinfo::default_instance());
}

credit_detail_ans::credit_detail_ans(const credit_detail_ans& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_detail_ans)
}

void credit_detail_ans::SharedCtor() {
  _cached_size_ = 0;
  total_number_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_detail_ans::~credit_detail_ans() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_detail_ans)
  SharedDtor();
}

void credit_detail_ans::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void credit_detail_ans::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_detail_ans::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_detail_ans_descriptor_;
}

const credit_detail_ans& credit_detail_ans::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_detail_ans* credit_detail_ans::default_instance_ = NULL;

credit_detail_ans* credit_detail_ans::New() const {
  return new credit_detail_ans;
}

void credit_detail_ans::Clear() {
  if (_has_bits_[0 / 32] & 6) {
    total_number_ = 0;
    if (has_error()) {
      if (error_ != NULL) error_->::common::errorinfo::Clear();
    }
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_detail_ans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_detail_ans)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCS_IMP.credit_detail_info list = 1;
      case 1: {
        if (tag == 10) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectTag(16)) goto parse_total_number;
        break;
      }

      // optional int32 total_number = 2;
      case 2: {
        if (tag == 16) {
         parse_total_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_number_)));
          set_has_total_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional .common.errorinfo error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_detail_ans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_detail_ans)
  return false;
#undef DO_
}

void credit_detail_ans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_detail_ans)
  // repeated .CCS_IMP.credit_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // optional int32 total_number = 2;
  if (has_total_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_number(), output);
  }

  // optional .common.errorinfo error = 3;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_detail_ans)
}

::google::protobuf::uint8* credit_detail_ans::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_detail_ans)
  // repeated .CCS_IMP.credit_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // optional int32 total_number = 2;
  if (has_total_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_number(), target);
  }

  // optional .common.errorinfo error = 3;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_detail_ans)
  return target;
}

int credit_detail_ans::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 total_number = 2;
    if (has_total_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_number());
    }

    // optional .common.errorinfo error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

  }
  // repeated .CCS_IMP.credit_detail_info list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_detail_ans::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_detail_ans* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_detail_ans*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_detail_ans::MergeFrom(const credit_detail_ans& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_total_number()) {
      set_total_number(from.total_number());
    }
    if (from.has_error()) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_detail_ans::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_detail_ans::CopyFrom(const credit_detail_ans& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_detail_ans::IsInitialized() const {

  return true;
}

void credit_detail_ans::Swap(credit_detail_ans* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(total_number_, other->total_number_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_detail_ans::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_detail_ans_descriptor_;
  metadata.reflection = credit_detail_ans_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_type_detail_info::kTypeFieldNumber;
const int credit_model_type_detail_info::kParam1FieldNumber;
const int credit_model_type_detail_info::kParam2FieldNumber;
const int credit_model_type_detail_info::kParam3FieldNumber;
const int credit_model_type_detail_info::kParam4FieldNumber;
#endif  // !_MSC_VER

credit_model_type_detail_info::credit_model_type_detail_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_type_detail_info)
}

void credit_model_type_detail_info::InitAsDefaultInstance() {
}

credit_model_type_detail_info::credit_model_type_detail_info(const credit_model_type_detail_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_type_detail_info)
}

void credit_model_type_detail_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_ = 0;
  param2_ = 0;
  param3_ = 0;
  param4_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_type_detail_info::~credit_model_type_detail_info() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_type_detail_info)
  SharedDtor();
}

void credit_model_type_detail_info::SharedDtor() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void credit_model_type_detail_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_type_detail_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_type_detail_info_descriptor_;
}

const credit_model_type_detail_info& credit_model_type_detail_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_type_detail_info* credit_model_type_detail_info::default_instance_ = NULL;

credit_model_type_detail_info* credit_model_type_detail_info::New() const {
  return new credit_model_type_detail_info;
}

void credit_model_type_detail_info::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<credit_model_type_detail_info*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(param1_, param4_);
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_type_detail_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_type_detail_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_param1;
        break;
      }

      // optional float param1 = 2;
      case 2: {
        if (tag == 21) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_param2;
        break;
      }

      // optional float param2 = 3;
      case 3: {
        if (tag == 29) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_param3;
        break;
      }

      // optional float param3 = 4;
      case 4: {
        if (tag == 37) {
         parse_param3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param3_)));
          set_has_param3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_param4;
        break;
      }

      // optional float param4 = 5;
      case 5: {
        if (tag == 45) {
         parse_param4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param4_)));
          set_has_param4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_type_detail_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_type_detail_info)
  return false;
#undef DO_
}

void credit_model_type_detail_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_type_detail_info)
  // optional bytes type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->type(), output);
  }

  // optional float param1 = 2;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->param1(), output);
  }

  // optional float param2 = 3;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->param2(), output);
  }

  // optional float param3 = 4;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->param3(), output);
  }

  // optional float param4 = 5;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->param4(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_type_detail_info)
}

::google::protobuf::uint8* credit_model_type_detail_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_type_detail_info)
  // optional bytes type = 1;
  if (has_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->type(), target);
  }

  // optional float param1 = 2;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->param1(), target);
  }

  // optional float param2 = 3;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->param2(), target);
  }

  // optional float param3 = 4;
  if (has_param3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->param3(), target);
  }

  // optional float param4 = 5;
  if (has_param4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->param4(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_type_detail_info)
  return target;
}

int credit_model_type_detail_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->type());
    }

    // optional float param1 = 2;
    if (has_param1()) {
      total_size += 1 + 4;
    }

    // optional float param2 = 3;
    if (has_param2()) {
      total_size += 1 + 4;
    }

    // optional float param3 = 4;
    if (has_param3()) {
      total_size += 1 + 4;
    }

    // optional float param4 = 5;
    if (has_param4()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_type_detail_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_type_detail_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_type_detail_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_type_detail_info::MergeFrom(const credit_model_type_detail_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
    if (from.has_param3()) {
      set_param3(from.param3());
    }
    if (from.has_param4()) {
      set_param4(from.param4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_type_detail_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_type_detail_info::CopyFrom(const credit_model_type_detail_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_type_detail_info::IsInitialized() const {

  return true;
}

void credit_model_type_detail_info::Swap(credit_model_type_detail_info* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(param3_, other->param3_);
    std::swap(param4_, other->param4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_type_detail_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_type_detail_info_descriptor_;
  metadata.reflection = credit_model_type_detail_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_detail_info::kCreditTypeFieldNumber;
const int credit_model_detail_info::kUserTypeFieldNumber;
const int credit_model_detail_info::kModelNoFieldNumber;
const int credit_model_detail_info::kListFieldNumber;
#endif  // !_MSC_VER

credit_model_detail_info::credit_model_detail_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_detail_info)
}

void credit_model_detail_info::InitAsDefaultInstance() {
}

credit_model_detail_info::credit_model_detail_info(const credit_model_detail_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_detail_info)
}

void credit_model_detail_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  credit_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_detail_info::~credit_model_detail_info() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_detail_info)
  SharedDtor();
}

void credit_model_detail_info::SharedDtor() {
  if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete credit_type_;
  }
  if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_type_;
  }
  if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_no_;
  }
  if (this != default_instance_) {
  }
}

void credit_model_detail_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_detail_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_detail_info_descriptor_;
}

const credit_model_detail_info& credit_model_detail_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_detail_info* credit_model_detail_info::default_instance_ = NULL;

credit_model_detail_info* credit_model_detail_info::New() const {
  return new credit_model_detail_info;
}

void credit_model_detail_info::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_credit_type()) {
      if (credit_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        credit_type_->clear();
      }
    }
    if (has_user_type()) {
      if (user_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_type_->clear();
      }
    }
    if (has_model_no()) {
      if (model_no_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        model_no_->clear();
      }
    }
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_detail_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_detail_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes credit_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_credit_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_type;
        break;
      }

      // optional bytes user_type = 2;
      case 2: {
        if (tag == 18) {
         parse_user_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_model_no;
        break;
      }

      // optional bytes model_no = 3;
      case 3: {
        if (tag == 26) {
         parse_model_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_model_no()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_list;
        break;
      }

      // repeated .CCS_IMP.credit_model_type_detail_info list = 4;
      case 4: {
        if (tag == 34) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_detail_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_detail_info)
  return false;
#undef DO_
}

void credit_model_detail_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_detail_info)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->credit_type(), output);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->user_type(), output);
  }

  // optional bytes model_no = 3;
  if (has_model_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->model_no(), output);
  }

  // repeated .CCS_IMP.credit_model_type_detail_info list = 4;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_detail_info)
}

::google::protobuf::uint8* credit_model_detail_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_detail_info)
  // optional bytes credit_type = 1;
  if (has_credit_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->credit_type(), target);
  }

  // optional bytes user_type = 2;
  if (has_user_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->user_type(), target);
  }

  // optional bytes model_no = 3;
  if (has_model_no()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->model_no(), target);
  }

  // repeated .CCS_IMP.credit_model_type_detail_info list = 4;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_detail_info)
  return target;
}

int credit_model_detail_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes credit_type = 1;
    if (has_credit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->credit_type());
    }

    // optional bytes user_type = 2;
    if (has_user_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_type());
    }

    // optional bytes model_no = 3;
    if (has_model_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->model_no());
    }

  }
  // repeated .CCS_IMP.credit_model_type_detail_info list = 4;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_detail_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_detail_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_detail_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_detail_info::MergeFrom(const credit_model_detail_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_credit_type()) {
      set_credit_type(from.credit_type());
    }
    if (from.has_user_type()) {
      set_user_type(from.user_type());
    }
    if (from.has_model_no()) {
      set_model_no(from.model_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_detail_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_detail_info::CopyFrom(const credit_model_detail_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_detail_info::IsInitialized() const {

  return true;
}

void credit_model_detail_info::Swap(credit_model_detail_info* other) {
  if (other != this) {
    std::swap(credit_type_, other->credit_type_);
    std::swap(user_type_, other->user_type_);
    std::swap(model_no_, other->model_no_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_detail_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_detail_info_descriptor_;
  metadata.reflection = credit_model_detail_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_detail_load_ask::kInfoFieldNumber;
#endif  // !_MSC_VER

credit_model_detail_load_ask::credit_model_detail_load_ask()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_detail_load_ask)
}

void credit_model_detail_load_ask::InitAsDefaultInstance() {
  info_ = const_cast< ::CCS_IMP::credit_model_detail_info*>(&::CCS_IMP::credit_model_detail_info::default_instance());
}

credit_model_detail_load_ask::credit_model_detail_load_ask(const credit_model_detail_load_ask& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_detail_load_ask)
}

void credit_model_detail_load_ask::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_detail_load_ask::~credit_model_detail_load_ask() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_detail_load_ask)
  SharedDtor();
}

void credit_model_detail_load_ask::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void credit_model_detail_load_ask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_detail_load_ask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_detail_load_ask_descriptor_;
}

const credit_model_detail_load_ask& credit_model_detail_load_ask::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_detail_load_ask* credit_model_detail_load_ask::default_instance_ = NULL;

credit_model_detail_load_ask* credit_model_detail_load_ask::New() const {
  return new credit_model_detail_load_ask;
}

void credit_model_detail_load_ask::Clear() {
  if (has_info()) {
    if (info_ != NULL) info_->::CCS_IMP::credit_model_detail_info::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_detail_load_ask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_detail_load_ask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CCS_IMP.credit_model_detail_info info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_detail_load_ask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_detail_load_ask)
  return false;
#undef DO_
}

void credit_model_detail_load_ask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_detail_load_ask)
  // optional .CCS_IMP.credit_model_detail_info info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_detail_load_ask)
}

::google::protobuf::uint8* credit_model_detail_load_ask::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_detail_load_ask)
  // optional .CCS_IMP.credit_model_detail_info info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_detail_load_ask)
  return target;
}

int credit_model_detail_load_ask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CCS_IMP.credit_model_detail_info info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_detail_load_ask::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_detail_load_ask* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_detail_load_ask*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_detail_load_ask::MergeFrom(const credit_model_detail_load_ask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::CCS_IMP::credit_model_detail_info::MergeFrom(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_detail_load_ask::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_detail_load_ask::CopyFrom(const credit_model_detail_load_ask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_detail_load_ask::IsInitialized() const {

  return true;
}

void credit_model_detail_load_ask::Swap(credit_model_detail_load_ask* other) {
  if (other != this) {
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_detail_load_ask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_detail_load_ask_descriptor_;
  metadata.reflection = credit_model_detail_load_ask_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_detail_load_ans::kListFieldNumber;
const int credit_model_detail_load_ans::kErrorFieldNumber;
#endif  // !_MSC_VER

credit_model_detail_load_ans::credit_model_detail_load_ans()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_detail_load_ans)
}

void credit_model_detail_load_ans::InitAsDefaultInstance() {
  error_ = const_cast< ::common::errorinfo*>(&::common::errorinfo::default_instance());
}

credit_model_detail_load_ans::credit_model_detail_load_ans(const credit_model_detail_load_ans& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_detail_load_ans)
}

void credit_model_detail_load_ans::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_detail_load_ans::~credit_model_detail_load_ans() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_detail_load_ans)
  SharedDtor();
}

void credit_model_detail_load_ans::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void credit_model_detail_load_ans::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_detail_load_ans::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_detail_load_ans_descriptor_;
}

const credit_model_detail_load_ans& credit_model_detail_load_ans::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_detail_load_ans* credit_model_detail_load_ans::default_instance_ = NULL;

credit_model_detail_load_ans* credit_model_detail_load_ans::New() const {
  return new credit_model_detail_load_ans;
}

void credit_model_detail_load_ans::Clear() {
  if (has_error()) {
    if (error_ != NULL) error_->::common::errorinfo::Clear();
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_detail_load_ans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_detail_load_ans)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCS_IMP.credit_model_detail_info list = 1;
      case 1: {
        if (tag == 10) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .common.errorinfo error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_detail_load_ans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_detail_load_ans)
  return false;
#undef DO_
}

void credit_model_detail_load_ans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_detail_load_ans)
  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // optional .common.errorinfo error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_detail_load_ans)
}

::google::protobuf::uint8* credit_model_detail_load_ans::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_detail_load_ans)
  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // optional .common.errorinfo error = 2;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_detail_load_ans)
  return target;
}

int credit_model_detail_load_ans::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .common.errorinfo error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

  }
  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_detail_load_ans::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_detail_load_ans* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_detail_load_ans*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_detail_load_ans::MergeFrom(const credit_model_detail_load_ans& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_error()) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_detail_load_ans::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_detail_load_ans::CopyFrom(const credit_model_detail_load_ans& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_detail_load_ans::IsInitialized() const {

  return true;
}

void credit_model_detail_load_ans::Swap(credit_model_detail_load_ans* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_detail_load_ans::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_detail_load_ans_descriptor_;
  metadata.reflection = credit_model_detail_load_ans_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_detail_save_ask::kListFieldNumber;
#endif  // !_MSC_VER

credit_model_detail_save_ask::credit_model_detail_save_ask()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_detail_save_ask)
}

void credit_model_detail_save_ask::InitAsDefaultInstance() {
}

credit_model_detail_save_ask::credit_model_detail_save_ask(const credit_model_detail_save_ask& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_detail_save_ask)
}

void credit_model_detail_save_ask::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_detail_save_ask::~credit_model_detail_save_ask() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_detail_save_ask)
  SharedDtor();
}

void credit_model_detail_save_ask::SharedDtor() {
  if (this != default_instance_) {
  }
}

void credit_model_detail_save_ask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_detail_save_ask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_detail_save_ask_descriptor_;
}

const credit_model_detail_save_ask& credit_model_detail_save_ask::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_detail_save_ask* credit_model_detail_save_ask::default_instance_ = NULL;

credit_model_detail_save_ask* credit_model_detail_save_ask::New() const {
  return new credit_model_detail_save_ask;
}

void credit_model_detail_save_ask::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_detail_save_ask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_detail_save_ask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCS_IMP.credit_model_detail_info list = 1;
      case 1: {
        if (tag == 10) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_detail_save_ask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_detail_save_ask)
  return false;
#undef DO_
}

void credit_model_detail_save_ask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_detail_save_ask)
  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_detail_save_ask)
}

::google::protobuf::uint8* credit_model_detail_save_ask::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_detail_save_ask)
  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_detail_save_ask)
  return target;
}

int credit_model_detail_save_ask::ByteSize() const {
  int total_size = 0;

  // repeated .CCS_IMP.credit_model_detail_info list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_detail_save_ask::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_detail_save_ask* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_detail_save_ask*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_detail_save_ask::MergeFrom(const credit_model_detail_save_ask& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_detail_save_ask::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_detail_save_ask::CopyFrom(const credit_model_detail_save_ask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_detail_save_ask::IsInitialized() const {

  return true;
}

void credit_model_detail_save_ask::Swap(credit_model_detail_save_ask* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_detail_save_ask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_detail_save_ask_descriptor_;
  metadata.reflection = credit_model_detail_save_ask_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int credit_model_detail_save_ans::kErrorFieldNumber;
#endif  // !_MSC_VER

credit_model_detail_save_ans::credit_model_detail_save_ans()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCS_IMP.credit_model_detail_save_ans)
}

void credit_model_detail_save_ans::InitAsDefaultInstance() {
  error_ = const_cast< ::common::errorinfo*>(&::common::errorinfo::default_instance());
}

credit_model_detail_save_ans::credit_model_detail_save_ans(const credit_model_detail_save_ans& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCS_IMP.credit_model_detail_save_ans)
}

void credit_model_detail_save_ans::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

credit_model_detail_save_ans::~credit_model_detail_save_ans() {
  // @@protoc_insertion_point(destructor:CCS_IMP.credit_model_detail_save_ans)
  SharedDtor();
}

void credit_model_detail_save_ans::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
  }
}

void credit_model_detail_save_ans::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* credit_model_detail_save_ans::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return credit_model_detail_save_ans_descriptor_;
}

const credit_model_detail_save_ans& credit_model_detail_save_ans::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CCS_5fIMP_2eproto();
  return *default_instance_;
}

credit_model_detail_save_ans* credit_model_detail_save_ans::default_instance_ = NULL;

credit_model_detail_save_ans* credit_model_detail_save_ans::New() const {
  return new credit_model_detail_save_ans;
}

void credit_model_detail_save_ans::Clear() {
  if (has_error()) {
    if (error_ != NULL) error_->::common::errorinfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool credit_model_detail_save_ans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCS_IMP.credit_model_detail_save_ans)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCS_IMP.credit_model_detail_save_ans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCS_IMP.credit_model_detail_save_ans)
  return false;
#undef DO_
}

void credit_model_detail_save_ans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCS_IMP.credit_model_detail_save_ans)
  // optional .common.errorinfo error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCS_IMP.credit_model_detail_save_ans)
}

::google::protobuf::uint8* credit_model_detail_save_ans::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCS_IMP.credit_model_detail_save_ans)
  // optional .common.errorinfo error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCS_IMP.credit_model_detail_save_ans)
  return target;
}

int credit_model_detail_save_ans::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .common.errorinfo error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void credit_model_detail_save_ans::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const credit_model_detail_save_ans* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const credit_model_detail_save_ans*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void credit_model_detail_save_ans::MergeFrom(const credit_model_detail_save_ans& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void credit_model_detail_save_ans::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void credit_model_detail_save_ans::CopyFrom(const credit_model_detail_save_ans& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool credit_model_detail_save_ans::IsInitialized() const {

  return true;
}

void credit_model_detail_save_ans::Swap(credit_model_detail_save_ans* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata credit_model_detail_save_ans::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = credit_model_detail_save_ans_descriptor_;
  metadata.reflection = credit_model_detail_save_ans_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CCS_IMP

// @@protoc_insertion_point(global_scope)
