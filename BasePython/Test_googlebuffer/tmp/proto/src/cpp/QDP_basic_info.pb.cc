// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QDP_basic_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "QDP_basic_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QDP_basic_info {

namespace {

const ::google::protobuf::Descriptor* control_service_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  control_service_reflection_ = NULL;
const ::google::protobuf::Descriptor* user_basic_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  user_basic_info_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* degree_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* control_code_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_QDP_5fbasic_5finfo_2eproto() {
  protobuf_AddDesc_QDP_5fbasic_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "QDP_basic_info.proto");
  GOOGLE_CHECK(file != NULL);
  control_service_descriptor_ = file->message_type(0);
  static const int control_service_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(control_service, control_),
  };
  control_service_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      control_service_descriptor_,
      control_service::default_instance_,
      control_service_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(control_service, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(control_service, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(control_service));
  user_basic_info_descriptor_ = file->message_type(1);
  static const int user_basic_info_offsets_[93] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, identity_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, real_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, user_nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, mobile_phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, bank_cart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, collegename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, eductiondegree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, educationcategory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, graduateyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, enrollmentyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, blackbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, is_prove_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, transdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, transamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, idno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, idtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, reasonno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, weibono_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, weixinno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, qqno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, taobaono_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, jdno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, amazonno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, yhdno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, home_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, biz_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, per_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, apply_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, tel_biz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, tel_home_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, educationallevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, marriage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, income_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, biz_workfor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, apply_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, apply_product_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, refund_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, applyquota_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, apply_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loanperiod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, bank_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, linkman_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, linkman_cell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, linkman_rela_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, token_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, user_agent_cust_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, refer_cust_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, card_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, cc_bin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, pay_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, pay_method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, account_login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, customername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, papernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, applyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loantype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loanmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, currencyanrong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loantimelimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, assuretype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, applydate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, creditaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, applyresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, applyresulttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loanaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, creditstartdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, creditenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, loanperiods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, backmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, isclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, nbsmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, nbmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, cleandate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, overduestartdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, overdueenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, overduereason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, overduestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, relation_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, relation_phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, trading_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, business_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, levelno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, requestfilelist_),
  };
  user_basic_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      user_basic_info_descriptor_,
      user_basic_info::default_instance_,
      user_basic_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user_basic_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(user_basic_info));
  degree_descriptor_ = file->enum_type(0);
  control_code_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_QDP_5fbasic_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    control_service_descriptor_, &control_service::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    user_basic_info_descriptor_, &user_basic_info::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_QDP_5fbasic_5finfo_2eproto() {
  delete control_service::default_instance_;
  delete control_service_reflection_;
  delete user_basic_info::default_instance_;
  delete user_basic_info_reflection_;
}

void protobuf_AddDesc_QDP_5fbasic_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024QDP_basic_info.proto\022\016QDP_basic_info\"G"
    "\n\017control_service\0224\n\007control\030\001 \001(\0162\034.QDP"
    "_basic_info.control_code:\005start\"\326\016\n\017user"
    "_basic_info\022\017\n\007user_id\030\001 \001(\014\022\025\n\ridentity"
    "_card\030\002 \001(\014\022\021\n\treal_name\030\003 \001(\014\022\025\n\ruser_n"
    "ickname\030\004 \001(\014\022\024\n\014mobile_phone\030\005 \001(\014\022\r\n\005e"
    "mail\030\006 \001(\014\022\017\n\007address\030\007 \001(\014\022\021\n\tbank_cart"
    "\030\010 \001(\014\022\n\n\002ip\030\t \001(\014\022\013\n\003mac\030\n \001(\014\022\014\n\004imei\030"
    "\013 \001(\014\022\023\n\013collegeName\030\014 \001(\014\022.\n\016eductionDe"
    "gree\030\r \001(\0162\026.QDP_basic_info.degree\022\031\n\021ed"
    "ucationCategory\030\016 \001(\014\022\024\n\014graduateYear\030\017 "
    "\001(\014\022\026\n\016enrollmentYear\030\020 \001(\014\022\020\n\010blackBox\030"
    "\021 \001(\014\022\020\n\010password\030\022 \001(\014\022\020\n\010is_prove\030\023 \001("
    "\010\022\021\n\ttransDate\030\024 \001(\014\022\020\n\010currency\030\025 \001(\014\022\023"
    "\n\013transAmount\030\026 \001(\014\022\014\n\004idNo\030\027 \001(\014\022\016\n\006idT"
    "ype\030\030 \001(\014\022\014\n\004name\030\031 \001(\014\022\020\n\010reasonNo\030\032 \001("
    "\014\022\017\n\007weiboNo\030\033 \001(\014\022\020\n\010weixinNo\030\034 \001(\014\022\014\n\004"
    "qqNo\030\035 \001(\014\022\020\n\010taobaoNo\030\036 \001(\014\022\014\n\004jdNo\030\037 \001"
    "(\014\022\020\n\010amazonNo\030  \001(\014\022\r\n\005yhdNo\030! \001(\014\022\021\n\th"
    "ome_addr\030\" \001(\014\022\020\n\010biz_addr\030# \001(\014\022\020\n\010per_"
    "addr\030$ \001(\014\022\022\n\napply_addr\030% \001(\014\022\017\n\007tel_bi"
    "z\030& \001(\014\022\020\n\010tel_home\030\' \001(\014\022\030\n\020educational"
    "level\030( \001(\014\022\020\n\010marriage\030) \001(\014\022\016\n\006income\030"
    "* \001(\014\022\023\n\013biz_workfor\030+ \001(\014\022\024\n\014apply_sour"
    "ce\030, \001(\014\022\025\n\rapply_product\030- \001(\014\022\023\n\013refun"
    "d_type\030. \001(\014\022\022\n\napplyQuota\030/ \001(\014\022\022\n\nappl"
    "y_time\0300 \001(\014\022\022\n\nloanPeriod\0301 \001(\014\022\017\n\007bank"
    "_id\0302 \001(\014\022\024\n\014linkman_name\0303 \001(\014\022\024\n\014linkm"
    "an_cell\0304 \001(\014\022\024\n\014linkman_rela\0305 \001(\014\022\020\n\010t"
    "oken_id\0306 \001(\014\022\027\n\017user_agent_cust\0307 \001(\014\022\022"
    "\n\nrefer_cust\0308 \001(\014\022\r\n\005state\0309 \001(\014\022\023\n\013car"
    "d_number\030: \001(\014\022\016\n\006cc_bin\030; \001(\014\022\022\n\npay_am"
    "ount\030< \001(\014\022\022\n\npay_method\030= \001(\014\022\025\n\raccoun"
    "t_login\030> \001(\014\022\024\n\014customerName\030\? \001(\014\022\023\n\013p"
    "aperNumber\030@ \001(\014\022\017\n\007applyId\030A \001(\014\022\020\n\010loa"
    "nType\030B \001(\014\022\021\n\tloanMoney\030C \001(\001\022\026\n\016curren"
    "cyAnRong\030D \001(\014\022\025\n\rloanTimeLimit\030E \001(\005\022\022\n"
    "\nassureType\030F \001(\014\022\021\n\tapplyDate\030G \001(\014\022\025\n\r"
    "creditAddress\030H \001(\014\022\023\n\013applyResult\030I \001(\014"
    "\022\027\n\017applyResultTime\030J \001(\014\022\023\n\013loanAccount"
    "\030K \001(\014\022\027\n\017creditStartDate\030L \001(\014\022\025\n\rcredi"
    "tEndDate\030M \001(\014\022\023\n\013loanPeriods\030N \001(\005\022\021\n\tb"
    "ackMoney\030O \001(\001\022\017\n\007isClear\030P \001(\014\022\020\n\010nbsMo"
    "ney\030Q \001(\001\022\017\n\007nbMoney\030R \001(\001\022\021\n\tcleanDate\030"
    "S \001(\014\022\030\n\020overdueStartDate\030T \001(\014\022\026\n\016overd"
    "ueEndDate\030U \001(\014\022\025\n\roverdueReason\030V \001(\014\022\024"
    "\n\014overdueState\030W \001(\014\022\025\n\rrelation_name\030X "
    "\001(\014\022\026\n\016relation_phone\030Y \001(\014\022\027\n\017trading_a"
    "ddress\030Z \001(\014\022\020\n\010business\030[ \001(\014\022\017\n\007levelN"
    "o\030\\ \001(\014\022\027\n\017requestFileList\030] \001(\014*A\n\006degr"
    "ee\022\007\n\003low\020\001\022\t\n\005major\020\002\022\013\n\007college\020\003\022\n\n\006m"
    "aster\020\004\022\n\n\006doctor\020\005*#\n\014control_code\022\t\n\005s"
    "tart\020\000\022\010\n\004stop\020\001", 2096);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "QDP_basic_info.proto", &protobuf_RegisterTypes);
  control_service::default_instance_ = new control_service();
  user_basic_info::default_instance_ = new user_basic_info();
  control_service::default_instance_->InitAsDefaultInstance();
  user_basic_info::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_QDP_5fbasic_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_QDP_5fbasic_5finfo_2eproto {
  StaticDescriptorInitializer_QDP_5fbasic_5finfo_2eproto() {
    protobuf_AddDesc_QDP_5fbasic_5finfo_2eproto();
  }
} static_descriptor_initializer_QDP_5fbasic_5finfo_2eproto_;
const ::google::protobuf::EnumDescriptor* degree_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return degree_descriptor_;
}
bool degree_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* control_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return control_code_descriptor_;
}
bool control_code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int control_service::kControlFieldNumber;
#endif  // !_MSC_VER

control_service::control_service()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QDP_basic_info.control_service)
}

void control_service::InitAsDefaultInstance() {
}

control_service::control_service(const control_service& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QDP_basic_info.control_service)
}

void control_service::SharedCtor() {
  _cached_size_ = 0;
  control_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

control_service::~control_service() {
  // @@protoc_insertion_point(destructor:QDP_basic_info.control_service)
  SharedDtor();
}

void control_service::SharedDtor() {
  if (this != default_instance_) {
  }
}

void control_service::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* control_service::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return control_service_descriptor_;
}

const control_service& control_service::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_QDP_5fbasic_5finfo_2eproto();
  return *default_instance_;
}

control_service* control_service::default_instance_ = NULL;

control_service* control_service::New() const {
  return new control_service;
}

void control_service::Clear() {
  control_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool control_service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QDP_basic_info.control_service)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .QDP_basic_info.control_code control = 1 [default = start];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::QDP_basic_info::control_code_IsValid(value)) {
            set_control(static_cast< ::QDP_basic_info::control_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QDP_basic_info.control_service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QDP_basic_info.control_service)
  return false;
#undef DO_
}

void control_service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QDP_basic_info.control_service)
  // optional .QDP_basic_info.control_code control = 1 [default = start];
  if (has_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->control(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QDP_basic_info.control_service)
}

::google::protobuf::uint8* control_service::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QDP_basic_info.control_service)
  // optional .QDP_basic_info.control_code control = 1 [default = start];
  if (has_control()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->control(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QDP_basic_info.control_service)
  return target;
}

int control_service::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .QDP_basic_info.control_code control = 1 [default = start];
    if (has_control()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void control_service::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const control_service* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const control_service*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void control_service::MergeFrom(const control_service& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_control()) {
      set_control(from.control());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void control_service::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void control_service::CopyFrom(const control_service& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool control_service::IsInitialized() const {

  return true;
}

void control_service::Swap(control_service* other) {
  if (other != this) {
    std::swap(control_, other->control_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata control_service::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = control_service_descriptor_;
  metadata.reflection = control_service_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int user_basic_info::kUserIdFieldNumber;
const int user_basic_info::kIdentityCardFieldNumber;
const int user_basic_info::kRealNameFieldNumber;
const int user_basic_info::kUserNicknameFieldNumber;
const int user_basic_info::kMobilePhoneFieldNumber;
const int user_basic_info::kEmailFieldNumber;
const int user_basic_info::kAddressFieldNumber;
const int user_basic_info::kBankCartFieldNumber;
const int user_basic_info::kIpFieldNumber;
const int user_basic_info::kMacFieldNumber;
const int user_basic_info::kImeiFieldNumber;
const int user_basic_info::kCollegeNameFieldNumber;
const int user_basic_info::kEductionDegreeFieldNumber;
const int user_basic_info::kEducationCategoryFieldNumber;
const int user_basic_info::kGraduateYearFieldNumber;
const int user_basic_info::kEnrollmentYearFieldNumber;
const int user_basic_info::kBlackBoxFieldNumber;
const int user_basic_info::kPasswordFieldNumber;
const int user_basic_info::kIsProveFieldNumber;
const int user_basic_info::kTransDateFieldNumber;
const int user_basic_info::kCurrencyFieldNumber;
const int user_basic_info::kTransAmountFieldNumber;
const int user_basic_info::kIdNoFieldNumber;
const int user_basic_info::kIdTypeFieldNumber;
const int user_basic_info::kNameFieldNumber;
const int user_basic_info::kReasonNoFieldNumber;
const int user_basic_info::kWeiboNoFieldNumber;
const int user_basic_info::kWeixinNoFieldNumber;
const int user_basic_info::kQqNoFieldNumber;
const int user_basic_info::kTaobaoNoFieldNumber;
const int user_basic_info::kJdNoFieldNumber;
const int user_basic_info::kAmazonNoFieldNumber;
const int user_basic_info::kYhdNoFieldNumber;
const int user_basic_info::kHomeAddrFieldNumber;
const int user_basic_info::kBizAddrFieldNumber;
const int user_basic_info::kPerAddrFieldNumber;
const int user_basic_info::kApplyAddrFieldNumber;
const int user_basic_info::kTelBizFieldNumber;
const int user_basic_info::kTelHomeFieldNumber;
const int user_basic_info::kEducationallevelFieldNumber;
const int user_basic_info::kMarriageFieldNumber;
const int user_basic_info::kIncomeFieldNumber;
const int user_basic_info::kBizWorkforFieldNumber;
const int user_basic_info::kApplySourceFieldNumber;
const int user_basic_info::kApplyProductFieldNumber;
const int user_basic_info::kRefundTypeFieldNumber;
const int user_basic_info::kApplyQuotaFieldNumber;
const int user_basic_info::kApplyTimeFieldNumber;
const int user_basic_info::kLoanPeriodFieldNumber;
const int user_basic_info::kBankIdFieldNumber;
const int user_basic_info::kLinkmanNameFieldNumber;
const int user_basic_info::kLinkmanCellFieldNumber;
const int user_basic_info::kLinkmanRelaFieldNumber;
const int user_basic_info::kTokenIdFieldNumber;
const int user_basic_info::kUserAgentCustFieldNumber;
const int user_basic_info::kReferCustFieldNumber;
const int user_basic_info::kStateFieldNumber;
const int user_basic_info::kCardNumberFieldNumber;
const int user_basic_info::kCcBinFieldNumber;
const int user_basic_info::kPayAmountFieldNumber;
const int user_basic_info::kPayMethodFieldNumber;
const int user_basic_info::kAccountLoginFieldNumber;
const int user_basic_info::kCustomerNameFieldNumber;
const int user_basic_info::kPaperNumberFieldNumber;
const int user_basic_info::kApplyIdFieldNumber;
const int user_basic_info::kLoanTypeFieldNumber;
const int user_basic_info::kLoanMoneyFieldNumber;
const int user_basic_info::kCurrencyAnRongFieldNumber;
const int user_basic_info::kLoanTimeLimitFieldNumber;
const int user_basic_info::kAssureTypeFieldNumber;
const int user_basic_info::kApplyDateFieldNumber;
const int user_basic_info::kCreditAddressFieldNumber;
const int user_basic_info::kApplyResultFieldNumber;
const int user_basic_info::kApplyResultTimeFieldNumber;
const int user_basic_info::kLoanAccountFieldNumber;
const int user_basic_info::kCreditStartDateFieldNumber;
const int user_basic_info::kCreditEndDateFieldNumber;
const int user_basic_info::kLoanPeriodsFieldNumber;
const int user_basic_info::kBackMoneyFieldNumber;
const int user_basic_info::kIsClearFieldNumber;
const int user_basic_info::kNbsMoneyFieldNumber;
const int user_basic_info::kNbMoneyFieldNumber;
const int user_basic_info::kCleanDateFieldNumber;
const int user_basic_info::kOverdueStartDateFieldNumber;
const int user_basic_info::kOverdueEndDateFieldNumber;
const int user_basic_info::kOverdueReasonFieldNumber;
const int user_basic_info::kOverdueStateFieldNumber;
const int user_basic_info::kRelationNameFieldNumber;
const int user_basic_info::kRelationPhoneFieldNumber;
const int user_basic_info::kTradingAddressFieldNumber;
const int user_basic_info::kBusinessFieldNumber;
const int user_basic_info::kLevelNoFieldNumber;
const int user_basic_info::kRequestFileListFieldNumber;
#endif  // !_MSC_VER

user_basic_info::user_basic_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QDP_basic_info.user_basic_info)
}

void user_basic_info::InitAsDefaultInstance() {
}

user_basic_info::user_basic_info(const user_basic_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QDP_basic_info.user_basic_info)
}

void user_basic_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_card_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_cart_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collegename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eductiondegree_ = 1;
  educationcategory_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graduateyear_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enrollmentyear_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blackbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_prove_ = false;
  transdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transamount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reasonno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibono_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weixinno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qqno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taobaono_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jdno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amazonno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  yhdno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  home_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  per_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apply_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_biz_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_home_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  educationallevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marriage_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  income_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_workfor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apply_source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apply_product_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refund_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applyquota_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apply_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loanperiod_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkman_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkman_cell_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linkman_rela_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_cust_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refer_cust_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cc_bin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_amount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_method_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_login_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  papernumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applyid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loantype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loanmoney_ = 0;
  currencyanrong_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loantimelimit_ = 0;
  assuretype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applydate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applyresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applyresulttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loanaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditstartdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loanperiods_ = 0;
  backmoney_ = 0;
  isclear_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbsmoney_ = 0;
  nbmoney_ = 0;
  cleandate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overduestartdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overdueenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overduereason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overduestate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestfilelist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

user_basic_info::~user_basic_info() {
  // @@protoc_insertion_point(destructor:QDP_basic_info.user_basic_info)
  SharedDtor();
}

void user_basic_info::SharedDtor() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (identity_card_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete identity_card_;
  }
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (user_nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_nickname_;
  }
  if (mobile_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_phone_;
  }
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (bank_cart_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bank_cart_;
  }
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imei_;
  }
  if (collegename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete collegename_;
  }
  if (educationcategory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete educationcategory_;
  }
  if (graduateyear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete graduateyear_;
  }
  if (enrollmentyear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enrollmentyear_;
  }
  if (blackbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete blackbox_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (transdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transdate_;
  }
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_;
  }
  if (transamount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transamount_;
  }
  if (idno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete idno_;
  }
  if (idtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete idtype_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (reasonno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reasonno_;
  }
  if (weibono_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete weibono_;
  }
  if (weixinno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete weixinno_;
  }
  if (qqno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete qqno_;
  }
  if (taobaono_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete taobaono_;
  }
  if (jdno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jdno_;
  }
  if (amazonno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete amazonno_;
  }
  if (yhdno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete yhdno_;
  }
  if (home_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete home_addr_;
  }
  if (biz_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete biz_addr_;
  }
  if (per_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete per_addr_;
  }
  if (apply_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apply_addr_;
  }
  if (tel_biz_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_biz_;
  }
  if (tel_home_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_home_;
  }
  if (educationallevel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete educationallevel_;
  }
  if (marriage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete marriage_;
  }
  if (income_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete income_;
  }
  if (biz_workfor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete biz_workfor_;
  }
  if (apply_source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apply_source_;
  }
  if (apply_product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apply_product_;
  }
  if (refund_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete refund_type_;
  }
  if (applyquota_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete applyquota_;
  }
  if (apply_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apply_time_;
  }
  if (loanperiod_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loanperiod_;
  }
  if (bank_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bank_id_;
  }
  if (linkman_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete linkman_name_;
  }
  if (linkman_cell_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete linkman_cell_;
  }
  if (linkman_rela_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete linkman_rela_;
  }
  if (token_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_id_;
  }
  if (user_agent_cust_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_agent_cust_;
  }
  if (refer_cust_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete refer_cust_;
  }
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (card_number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete card_number_;
  }
  if (cc_bin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cc_bin_;
  }
  if (pay_amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pay_amount_;
  }
  if (pay_method_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pay_method_;
  }
  if (account_login_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_login_;
  }
  if (customername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customername_;
  }
  if (papernumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete papernumber_;
  }
  if (applyid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete applyid_;
  }
  if (loantype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loantype_;
  }
  if (currencyanrong_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currencyanrong_;
  }
  if (assuretype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete assuretype_;
  }
  if (applydate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete applydate_;
  }
  if (creditaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creditaddress_;
  }
  if (applyresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete applyresult_;
  }
  if (applyresulttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete applyresulttime_;
  }
  if (loanaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loanaccount_;
  }
  if (creditstartdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creditstartdate_;
  }
  if (creditenddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creditenddate_;
  }
  if (isclear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete isclear_;
  }
  if (cleandate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cleandate_;
  }
  if (overduestartdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete overduestartdate_;
  }
  if (overdueenddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete overdueenddate_;
  }
  if (overduereason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete overduereason_;
  }
  if (overduestate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete overduestate_;
  }
  if (relation_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete relation_name_;
  }
  if (relation_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete relation_phone_;
  }
  if (trading_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trading_address_;
  }
  if (business_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete business_;
  }
  if (levelno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete levelno_;
  }
  if (requestfilelist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requestfilelist_;
  }
  if (this != default_instance_) {
  }
}

void user_basic_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user_basic_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return user_basic_info_descriptor_;
}

const user_basic_info& user_basic_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_QDP_5fbasic_5finfo_2eproto();
  return *default_instance_;
}

user_basic_info* user_basic_info::default_instance_ = NULL;

user_basic_info* user_basic_info::New() const {
  return new user_basic_info;
}

void user_basic_info::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<user_basic_info*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    if (has_user_id()) {
      if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_id_->clear();
      }
    }
    if (has_identity_card()) {
      if (identity_card_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        identity_card_->clear();
      }
    }
    if (has_real_name()) {
      if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        real_name_->clear();
      }
    }
    if (has_user_nickname()) {
      if (user_nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_nickname_->clear();
      }
    }
    if (has_mobile_phone()) {
      if (mobile_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mobile_phone_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        address_->clear();
      }
    }
    if (has_bank_cart()) {
      if (bank_cart_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bank_cart_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_mac()) {
      if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mac_->clear();
      }
    }
    if (has_imei()) {
      if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        imei_->clear();
      }
    }
    if (has_collegename()) {
      if (collegename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        collegename_->clear();
      }
    }
    eductiondegree_ = 1;
    if (has_educationcategory()) {
      if (educationcategory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        educationcategory_->clear();
      }
    }
    if (has_graduateyear()) {
      if (graduateyear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        graduateyear_->clear();
      }
    }
    if (has_enrollmentyear()) {
      if (enrollmentyear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        enrollmentyear_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 16711680) {
    if (has_blackbox()) {
      if (blackbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        blackbox_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    is_prove_ = false;
    if (has_transdate()) {
      if (transdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transdate_->clear();
      }
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currency_->clear();
      }
    }
    if (has_transamount()) {
      if (transamount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transamount_->clear();
      }
    }
    if (has_idno()) {
      if (idno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        idno_->clear();
      }
    }
    if (has_idtype()) {
      if (idtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        idtype_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_reasonno()) {
      if (reasonno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reasonno_->clear();
      }
    }
    if (has_weibono()) {
      if (weibono_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        weibono_->clear();
      }
    }
    if (has_weixinno()) {
      if (weixinno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        weixinno_->clear();
      }
    }
    if (has_qqno()) {
      if (qqno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        qqno_->clear();
      }
    }
    if (has_taobaono()) {
      if (taobaono_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        taobaono_->clear();
      }
    }
    if (has_jdno()) {
      if (jdno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        jdno_->clear();
      }
    }
    if (has_amazonno()) {
      if (amazonno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        amazonno_->clear();
      }
    }
  }
  if (_has_bits_[32 / 32] & 255) {
    if (has_yhdno()) {
      if (yhdno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        yhdno_->clear();
      }
    }
    if (has_home_addr()) {
      if (home_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        home_addr_->clear();
      }
    }
    if (has_biz_addr()) {
      if (biz_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        biz_addr_->clear();
      }
    }
    if (has_per_addr()) {
      if (per_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        per_addr_->clear();
      }
    }
    if (has_apply_addr()) {
      if (apply_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        apply_addr_->clear();
      }
    }
    if (has_tel_biz()) {
      if (tel_biz_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tel_biz_->clear();
      }
    }
    if (has_tel_home()) {
      if (tel_home_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tel_home_->clear();
      }
    }
    if (has_educationallevel()) {
      if (educationallevel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        educationallevel_->clear();
      }
    }
  }
  if (_has_bits_[40 / 32] & 65280) {
    if (has_marriage()) {
      if (marriage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        marriage_->clear();
      }
    }
    if (has_income()) {
      if (income_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        income_->clear();
      }
    }
    if (has_biz_workfor()) {
      if (biz_workfor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        biz_workfor_->clear();
      }
    }
    if (has_apply_source()) {
      if (apply_source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        apply_source_->clear();
      }
    }
    if (has_apply_product()) {
      if (apply_product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        apply_product_->clear();
      }
    }
    if (has_refund_type()) {
      if (refund_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        refund_type_->clear();
      }
    }
    if (has_applyquota()) {
      if (applyquota_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        applyquota_->clear();
      }
    }
    if (has_apply_time()) {
      if (apply_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        apply_time_->clear();
      }
    }
  }
  if (_has_bits_[48 / 32] & 16711680) {
    if (has_loanperiod()) {
      if (loanperiod_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loanperiod_->clear();
      }
    }
    if (has_bank_id()) {
      if (bank_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bank_id_->clear();
      }
    }
    if (has_linkman_name()) {
      if (linkman_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        linkman_name_->clear();
      }
    }
    if (has_linkman_cell()) {
      if (linkman_cell_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        linkman_cell_->clear();
      }
    }
    if (has_linkman_rela()) {
      if (linkman_rela_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        linkman_rela_->clear();
      }
    }
    if (has_token_id()) {
      if (token_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        token_id_->clear();
      }
    }
    if (has_user_agent_cust()) {
      if (user_agent_cust_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_agent_cust_->clear();
      }
    }
    if (has_refer_cust()) {
      if (refer_cust_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        refer_cust_->clear();
      }
    }
  }
  if (_has_bits_[56 / 32] & 4278190080) {
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        state_->clear();
      }
    }
    if (has_card_number()) {
      if (card_number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        card_number_->clear();
      }
    }
    if (has_cc_bin()) {
      if (cc_bin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cc_bin_->clear();
      }
    }
    if (has_pay_amount()) {
      if (pay_amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pay_amount_->clear();
      }
    }
    if (has_pay_method()) {
      if (pay_method_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pay_method_->clear();
      }
    }
    if (has_account_login()) {
      if (account_login_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        account_login_->clear();
      }
    }
    if (has_customername()) {
      if (customername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        customername_->clear();
      }
    }
    if (has_papernumber()) {
      if (papernumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        papernumber_->clear();
      }
    }
  }
  if (_has_bits_[64 / 32] & 255) {
    if (has_applyid()) {
      if (applyid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        applyid_->clear();
      }
    }
    if (has_loantype()) {
      if (loantype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loantype_->clear();
      }
    }
    loanmoney_ = 0;
    if (has_currencyanrong()) {
      if (currencyanrong_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currencyanrong_->clear();
      }
    }
    loantimelimit_ = 0;
    if (has_assuretype()) {
      if (assuretype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        assuretype_->clear();
      }
    }
    if (has_applydate()) {
      if (applydate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        applydate_->clear();
      }
    }
    if (has_creditaddress()) {
      if (creditaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        creditaddress_->clear();
      }
    }
  }
  if (_has_bits_[72 / 32] & 65280) {
    if (has_applyresult()) {
      if (applyresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        applyresult_->clear();
      }
    }
    if (has_applyresulttime()) {
      if (applyresulttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        applyresulttime_->clear();
      }
    }
    if (has_loanaccount()) {
      if (loanaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loanaccount_->clear();
      }
    }
    if (has_creditstartdate()) {
      if (creditstartdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        creditstartdate_->clear();
      }
    }
    if (has_creditenddate()) {
      if (creditenddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        creditenddate_->clear();
      }
    }
    loanperiods_ = 0;
    backmoney_ = 0;
    if (has_isclear()) {
      if (isclear_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        isclear_->clear();
      }
    }
  }
  if (_has_bits_[80 / 32] & 16711680) {
    ZR_(nbsmoney_, nbmoney_);
    if (has_cleandate()) {
      if (cleandate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cleandate_->clear();
      }
    }
    if (has_overduestartdate()) {
      if (overduestartdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        overduestartdate_->clear();
      }
    }
    if (has_overdueenddate()) {
      if (overdueenddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        overdueenddate_->clear();
      }
    }
    if (has_overduereason()) {
      if (overduereason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        overduereason_->clear();
      }
    }
    if (has_overduestate()) {
      if (overduestate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        overduestate_->clear();
      }
    }
    if (has_relation_name()) {
      if (relation_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        relation_name_->clear();
      }
    }
  }
  if (_has_bits_[88 / 32] & 520093696) {
    if (has_relation_phone()) {
      if (relation_phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        relation_phone_->clear();
      }
    }
    if (has_trading_address()) {
      if (trading_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        trading_address_->clear();
      }
    }
    if (has_business()) {
      if (business_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        business_->clear();
      }
    }
    if (has_levelno()) {
      if (levelno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        levelno_->clear();
      }
    }
    if (has_requestfilelist()) {
      if (requestfilelist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        requestfilelist_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool user_basic_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QDP_basic_info.user_basic_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_identity_card;
        break;
      }

      // optional bytes identity_card = 2;
      case 2: {
        if (tag == 18) {
         parse_identity_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_identity_card()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_real_name;
        break;
      }

      // optional bytes real_name = 3;
      case 3: {
        if (tag == 26) {
         parse_real_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_real_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user_nickname;
        break;
      }

      // optional bytes user_nickname = 4;
      case 4: {
        if (tag == 34) {
         parse_user_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_nickname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_mobile_phone;
        break;
      }

      // optional bytes mobile_phone = 5;
      case 5: {
        if (tag == 42) {
         parse_mobile_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mobile_phone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_email;
        break;
      }

      // optional bytes email = 6;
      case 6: {
        if (tag == 50) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_address;
        break;
      }

      // optional bytes address = 7;
      case 7: {
        if (tag == 58) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_bank_cart;
        break;
      }

      // optional bytes bank_cart = 8;
      case 8: {
        if (tag == 66) {
         parse_bank_cart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bank_cart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ip;
        break;
      }

      // optional bytes ip = 9;
      case 9: {
        if (tag == 74) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_mac;
        break;
      }

      // optional bytes mac = 10;
      case 10: {
        if (tag == 82) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_imei;
        break;
      }

      // optional bytes imei = 11;
      case 11: {
        if (tag == 90) {
         parse_imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imei()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_collegeName;
        break;
      }

      // optional bytes collegeName = 12;
      case 12: {
        if (tag == 98) {
         parse_collegeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_collegename()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_eductionDegree;
        break;
      }

      // optional .QDP_basic_info.degree eductionDegree = 13;
      case 13: {
        if (tag == 104) {
         parse_eductionDegree:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::QDP_basic_info::degree_IsValid(value)) {
            set_eductiondegree(static_cast< ::QDP_basic_info::degree >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_educationCategory;
        break;
      }

      // optional bytes educationCategory = 14;
      case 14: {
        if (tag == 114) {
         parse_educationCategory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_educationcategory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_graduateYear;
        break;
      }

      // optional bytes graduateYear = 15;
      case 15: {
        if (tag == 122) {
         parse_graduateYear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_graduateyear()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_enrollmentYear;
        break;
      }

      // optional bytes enrollmentYear = 16;
      case 16: {
        if (tag == 130) {
         parse_enrollmentYear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_enrollmentyear()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_blackBox;
        break;
      }

      // optional bytes blackBox = 17;
      case 17: {
        if (tag == 138) {
         parse_blackBox:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blackbox()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_password;
        break;
      }

      // optional bytes password = 18;
      case 18: {
        if (tag == 146) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_is_prove;
        break;
      }

      // optional bool is_prove = 19;
      case 19: {
        if (tag == 152) {
         parse_is_prove:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_prove_)));
          set_has_is_prove();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_transDate;
        break;
      }

      // optional bytes transDate = 20;
      case 20: {
        if (tag == 162) {
         parse_transDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transdate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_currency;
        break;
      }

      // optional bytes currency = 21;
      case 21: {
        if (tag == 170) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_currency()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_transAmount;
        break;
      }

      // optional bytes transAmount = 22;
      case 22: {
        if (tag == 178) {
         parse_transAmount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transamount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_idNo;
        break;
      }

      // optional bytes idNo = 23;
      case 23: {
        if (tag == 186) {
         parse_idNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_idno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_idType;
        break;
      }

      // optional bytes idType = 24;
      case 24: {
        if (tag == 194) {
         parse_idType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_idtype()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_name;
        break;
      }

      // optional bytes name = 25;
      case 25: {
        if (tag == 202) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_reasonNo;
        break;
      }

      // optional bytes reasonNo = 26;
      case 26: {
        if (tag == 210) {
         parse_reasonNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reasonno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_weiboNo;
        break;
      }

      // optional bytes weiboNo = 27;
      case 27: {
        if (tag == 218) {
         parse_weiboNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_weibono()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_weixinNo;
        break;
      }

      // optional bytes weixinNo = 28;
      case 28: {
        if (tag == 226) {
         parse_weixinNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_weixinno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_qqNo;
        break;
      }

      // optional bytes qqNo = 29;
      case 29: {
        if (tag == 234) {
         parse_qqNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qqno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_taobaoNo;
        break;
      }

      // optional bytes taobaoNo = 30;
      case 30: {
        if (tag == 242) {
         parse_taobaoNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_taobaono()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_jdNo;
        break;
      }

      // optional bytes jdNo = 31;
      case 31: {
        if (tag == 250) {
         parse_jdNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jdno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_amazonNo;
        break;
      }

      // optional bytes amazonNo = 32;
      case 32: {
        if (tag == 258) {
         parse_amazonNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_amazonno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_yhdNo;
        break;
      }

      // optional bytes yhdNo = 33;
      case 33: {
        if (tag == 266) {
         parse_yhdNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_yhdno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_home_addr;
        break;
      }

      // optional bytes home_addr = 34;
      case 34: {
        if (tag == 274) {
         parse_home_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_home_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_biz_addr;
        break;
      }

      // optional bytes biz_addr = 35;
      case 35: {
        if (tag == 282) {
         parse_biz_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_biz_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_per_addr;
        break;
      }

      // optional bytes per_addr = 36;
      case 36: {
        if (tag == 290) {
         parse_per_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_per_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_apply_addr;
        break;
      }

      // optional bytes apply_addr = 37;
      case 37: {
        if (tag == 298) {
         parse_apply_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apply_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_tel_biz;
        break;
      }

      // optional bytes tel_biz = 38;
      case 38: {
        if (tag == 306) {
         parse_tel_biz:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tel_biz()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_tel_home;
        break;
      }

      // optional bytes tel_home = 39;
      case 39: {
        if (tag == 314) {
         parse_tel_home:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tel_home()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_educationallevel;
        break;
      }

      // optional bytes educationallevel = 40;
      case 40: {
        if (tag == 322) {
         parse_educationallevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_educationallevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_marriage;
        break;
      }

      // optional bytes marriage = 41;
      case 41: {
        if (tag == 330) {
         parse_marriage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_marriage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_income;
        break;
      }

      // optional bytes income = 42;
      case 42: {
        if (tag == 338) {
         parse_income:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_income()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_biz_workfor;
        break;
      }

      // optional bytes biz_workfor = 43;
      case 43: {
        if (tag == 346) {
         parse_biz_workfor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_biz_workfor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_apply_source;
        break;
      }

      // optional bytes apply_source = 44;
      case 44: {
        if (tag == 354) {
         parse_apply_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apply_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_apply_product;
        break;
      }

      // optional bytes apply_product = 45;
      case 45: {
        if (tag == 362) {
         parse_apply_product:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apply_product()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_refund_type;
        break;
      }

      // optional bytes refund_type = 46;
      case 46: {
        if (tag == 370) {
         parse_refund_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_refund_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_applyQuota;
        break;
      }

      // optional bytes applyQuota = 47;
      case 47: {
        if (tag == 378) {
         parse_applyQuota:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_applyquota()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_apply_time;
        break;
      }

      // optional bytes apply_time = 48;
      case 48: {
        if (tag == 386) {
         parse_apply_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apply_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_loanPeriod;
        break;
      }

      // optional bytes loanPeriod = 49;
      case 49: {
        if (tag == 394) {
         parse_loanPeriod:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loanperiod()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_bank_id;
        break;
      }

      // optional bytes bank_id = 50;
      case 50: {
        if (tag == 402) {
         parse_bank_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bank_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_linkman_name;
        break;
      }

      // optional bytes linkman_name = 51;
      case 51: {
        if (tag == 410) {
         parse_linkman_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_linkman_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_linkman_cell;
        break;
      }

      // optional bytes linkman_cell = 52;
      case 52: {
        if (tag == 418) {
         parse_linkman_cell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_linkman_cell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_linkman_rela;
        break;
      }

      // optional bytes linkman_rela = 53;
      case 53: {
        if (tag == 426) {
         parse_linkman_rela:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_linkman_rela()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_token_id;
        break;
      }

      // optional bytes token_id = 54;
      case 54: {
        if (tag == 434) {
         parse_token_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_user_agent_cust;
        break;
      }

      // optional bytes user_agent_cust = 55;
      case 55: {
        if (tag == 442) {
         parse_user_agent_cust:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_agent_cust()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_refer_cust;
        break;
      }

      // optional bytes refer_cust = 56;
      case 56: {
        if (tag == 450) {
         parse_refer_cust:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_refer_cust()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_state;
        break;
      }

      // optional bytes state = 57;
      case 57: {
        if (tag == 458) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_card_number;
        break;
      }

      // optional bytes card_number = 58;
      case 58: {
        if (tag == 466) {
         parse_card_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_card_number()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_cc_bin;
        break;
      }

      // optional bytes cc_bin = 59;
      case 59: {
        if (tag == 474) {
         parse_cc_bin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cc_bin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_pay_amount;
        break;
      }

      // optional bytes pay_amount = 60;
      case 60: {
        if (tag == 482) {
         parse_pay_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pay_amount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_pay_method;
        break;
      }

      // optional bytes pay_method = 61;
      case 61: {
        if (tag == 490) {
         parse_pay_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pay_method()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(498)) goto parse_account_login;
        break;
      }

      // optional bytes account_login = 62;
      case 62: {
        if (tag == 498) {
         parse_account_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(506)) goto parse_customerName;
        break;
      }

      // optional bytes customerName = 63;
      case 63: {
        if (tag == 506) {
         parse_customerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_customername()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(514)) goto parse_paperNumber;
        break;
      }

      // optional bytes paperNumber = 64;
      case 64: {
        if (tag == 514) {
         parse_paperNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_papernumber()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(522)) goto parse_applyId;
        break;
      }

      // optional bytes applyId = 65;
      case 65: {
        if (tag == 522) {
         parse_applyId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_applyid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(530)) goto parse_loanType;
        break;
      }

      // optional bytes loanType = 66;
      case 66: {
        if (tag == 530) {
         parse_loanType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loantype()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(537)) goto parse_loanMoney;
        break;
      }

      // optional double loanMoney = 67;
      case 67: {
        if (tag == 537) {
         parse_loanMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &loanmoney_)));
          set_has_loanmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(546)) goto parse_currencyAnRong;
        break;
      }

      // optional bytes currencyAnRong = 68;
      case 68: {
        if (tag == 546) {
         parse_currencyAnRong:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_currencyanrong()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(552)) goto parse_loanTimeLimit;
        break;
      }

      // optional int32 loanTimeLimit = 69;
      case 69: {
        if (tag == 552) {
         parse_loanTimeLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loantimelimit_)));
          set_has_loantimelimit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(562)) goto parse_assureType;
        break;
      }

      // optional bytes assureType = 70;
      case 70: {
        if (tag == 562) {
         parse_assureType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_assuretype()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(570)) goto parse_applyDate;
        break;
      }

      // optional bytes applyDate = 71;
      case 71: {
        if (tag == 570) {
         parse_applyDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_applydate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(578)) goto parse_creditAddress;
        break;
      }

      // optional bytes creditAddress = 72;
      case 72: {
        if (tag == 578) {
         parse_creditAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_creditaddress()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(586)) goto parse_applyResult;
        break;
      }

      // optional bytes applyResult = 73;
      case 73: {
        if (tag == 586) {
         parse_applyResult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_applyresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(594)) goto parse_applyResultTime;
        break;
      }

      // optional bytes applyResultTime = 74;
      case 74: {
        if (tag == 594) {
         parse_applyResultTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_applyresulttime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(602)) goto parse_loanAccount;
        break;
      }

      // optional bytes loanAccount = 75;
      case 75: {
        if (tag == 602) {
         parse_loanAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loanaccount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(610)) goto parse_creditStartDate;
        break;
      }

      // optional bytes creditStartDate = 76;
      case 76: {
        if (tag == 610) {
         parse_creditStartDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_creditstartdate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(618)) goto parse_creditEndDate;
        break;
      }

      // optional bytes creditEndDate = 77;
      case 77: {
        if (tag == 618) {
         parse_creditEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_creditenddate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(624)) goto parse_loanPeriods;
        break;
      }

      // optional int32 loanPeriods = 78;
      case 78: {
        if (tag == 624) {
         parse_loanPeriods:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loanperiods_)));
          set_has_loanperiods();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(633)) goto parse_backMoney;
        break;
      }

      // optional double backMoney = 79;
      case 79: {
        if (tag == 633) {
         parse_backMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &backmoney_)));
          set_has_backmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(642)) goto parse_isClear;
        break;
      }

      // optional bytes isClear = 80;
      case 80: {
        if (tag == 642) {
         parse_isClear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_isclear()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(649)) goto parse_nbsMoney;
        break;
      }

      // optional double nbsMoney = 81;
      case 81: {
        if (tag == 649) {
         parse_nbsMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nbsmoney_)));
          set_has_nbsmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(657)) goto parse_nbMoney;
        break;
      }

      // optional double nbMoney = 82;
      case 82: {
        if (tag == 657) {
         parse_nbMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nbmoney_)));
          set_has_nbmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(666)) goto parse_cleanDate;
        break;
      }

      // optional bytes cleanDate = 83;
      case 83: {
        if (tag == 666) {
         parse_cleanDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cleandate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_overdueStartDate;
        break;
      }

      // optional bytes overdueStartDate = 84;
      case 84: {
        if (tag == 674) {
         parse_overdueStartDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_overduestartdate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_overdueEndDate;
        break;
      }

      // optional bytes overdueEndDate = 85;
      case 85: {
        if (tag == 682) {
         parse_overdueEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_overdueenddate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(690)) goto parse_overdueReason;
        break;
      }

      // optional bytes overdueReason = 86;
      case 86: {
        if (tag == 690) {
         parse_overdueReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_overduereason()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(698)) goto parse_overdueState;
        break;
      }

      // optional bytes overdueState = 87;
      case 87: {
        if (tag == 698) {
         parse_overdueState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_overduestate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(706)) goto parse_relation_name;
        break;
      }

      // optional bytes relation_name = 88;
      case 88: {
        if (tag == 706) {
         parse_relation_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relation_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(714)) goto parse_relation_phone;
        break;
      }

      // optional bytes relation_phone = 89;
      case 89: {
        if (tag == 714) {
         parse_relation_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relation_phone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(722)) goto parse_trading_address;
        break;
      }

      // optional bytes trading_address = 90;
      case 90: {
        if (tag == 722) {
         parse_trading_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_trading_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_business;
        break;
      }

      // optional bytes business = 91;
      case 91: {
        if (tag == 730) {
         parse_business:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_business()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_levelNo;
        break;
      }

      // optional bytes levelNo = 92;
      case 92: {
        if (tag == 738) {
         parse_levelNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_levelno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(746)) goto parse_requestFileList;
        break;
      }

      // optional bytes requestFileList = 93;
      case 93: {
        if (tag == 746) {
         parse_requestFileList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_requestfilelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QDP_basic_info.user_basic_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QDP_basic_info.user_basic_info)
  return false;
#undef DO_
}

void user_basic_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QDP_basic_info.user_basic_info)
  // optional bytes user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->user_id(), output);
  }

  // optional bytes identity_card = 2;
  if (has_identity_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->identity_card(), output);
  }

  // optional bytes real_name = 3;
  if (has_real_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->real_name(), output);
  }

  // optional bytes user_nickname = 4;
  if (has_user_nickname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->user_nickname(), output);
  }

  // optional bytes mobile_phone = 5;
  if (has_mobile_phone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->mobile_phone(), output);
  }

  // optional bytes email = 6;
  if (has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->email(), output);
  }

  // optional bytes address = 7;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->address(), output);
  }

  // optional bytes bank_cart = 8;
  if (has_bank_cart()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->bank_cart(), output);
  }

  // optional bytes ip = 9;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->ip(), output);
  }

  // optional bytes mac = 10;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->mac(), output);
  }

  // optional bytes imei = 11;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->imei(), output);
  }

  // optional bytes collegeName = 12;
  if (has_collegename()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->collegename(), output);
  }

  // optional .QDP_basic_info.degree eductionDegree = 13;
  if (has_eductiondegree()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->eductiondegree(), output);
  }

  // optional bytes educationCategory = 14;
  if (has_educationcategory()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->educationcategory(), output);
  }

  // optional bytes graduateYear = 15;
  if (has_graduateyear()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->graduateyear(), output);
  }

  // optional bytes enrollmentYear = 16;
  if (has_enrollmentyear()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->enrollmentyear(), output);
  }

  // optional bytes blackBox = 17;
  if (has_blackbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->blackbox(), output);
  }

  // optional bytes password = 18;
  if (has_password()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->password(), output);
  }

  // optional bool is_prove = 19;
  if (has_is_prove()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->is_prove(), output);
  }

  // optional bytes transDate = 20;
  if (has_transdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->transdate(), output);
  }

  // optional bytes currency = 21;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      21, this->currency(), output);
  }

  // optional bytes transAmount = 22;
  if (has_transamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->transamount(), output);
  }

  // optional bytes idNo = 23;
  if (has_idno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->idno(), output);
  }

  // optional bytes idType = 24;
  if (has_idtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->idtype(), output);
  }

  // optional bytes name = 25;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      25, this->name(), output);
  }

  // optional bytes reasonNo = 26;
  if (has_reasonno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      26, this->reasonno(), output);
  }

  // optional bytes weiboNo = 27;
  if (has_weibono()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      27, this->weibono(), output);
  }

  // optional bytes weixinNo = 28;
  if (has_weixinno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      28, this->weixinno(), output);
  }

  // optional bytes qqNo = 29;
  if (has_qqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->qqno(), output);
  }

  // optional bytes taobaoNo = 30;
  if (has_taobaono()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->taobaono(), output);
  }

  // optional bytes jdNo = 31;
  if (has_jdno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->jdno(), output);
  }

  // optional bytes amazonNo = 32;
  if (has_amazonno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->amazonno(), output);
  }

  // optional bytes yhdNo = 33;
  if (has_yhdno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      33, this->yhdno(), output);
  }

  // optional bytes home_addr = 34;
  if (has_home_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      34, this->home_addr(), output);
  }

  // optional bytes biz_addr = 35;
  if (has_biz_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      35, this->biz_addr(), output);
  }

  // optional bytes per_addr = 36;
  if (has_per_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      36, this->per_addr(), output);
  }

  // optional bytes apply_addr = 37;
  if (has_apply_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      37, this->apply_addr(), output);
  }

  // optional bytes tel_biz = 38;
  if (has_tel_biz()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      38, this->tel_biz(), output);
  }

  // optional bytes tel_home = 39;
  if (has_tel_home()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      39, this->tel_home(), output);
  }

  // optional bytes educationallevel = 40;
  if (has_educationallevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->educationallevel(), output);
  }

  // optional bytes marriage = 41;
  if (has_marriage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      41, this->marriage(), output);
  }

  // optional bytes income = 42;
  if (has_income()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      42, this->income(), output);
  }

  // optional bytes biz_workfor = 43;
  if (has_biz_workfor()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      43, this->biz_workfor(), output);
  }

  // optional bytes apply_source = 44;
  if (has_apply_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      44, this->apply_source(), output);
  }

  // optional bytes apply_product = 45;
  if (has_apply_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      45, this->apply_product(), output);
  }

  // optional bytes refund_type = 46;
  if (has_refund_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      46, this->refund_type(), output);
  }

  // optional bytes applyQuota = 47;
  if (has_applyquota()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      47, this->applyquota(), output);
  }

  // optional bytes apply_time = 48;
  if (has_apply_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      48, this->apply_time(), output);
  }

  // optional bytes loanPeriod = 49;
  if (has_loanperiod()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      49, this->loanperiod(), output);
  }

  // optional bytes bank_id = 50;
  if (has_bank_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->bank_id(), output);
  }

  // optional bytes linkman_name = 51;
  if (has_linkman_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->linkman_name(), output);
  }

  // optional bytes linkman_cell = 52;
  if (has_linkman_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      52, this->linkman_cell(), output);
  }

  // optional bytes linkman_rela = 53;
  if (has_linkman_rela()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      53, this->linkman_rela(), output);
  }

  // optional bytes token_id = 54;
  if (has_token_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      54, this->token_id(), output);
  }

  // optional bytes user_agent_cust = 55;
  if (has_user_agent_cust()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      55, this->user_agent_cust(), output);
  }

  // optional bytes refer_cust = 56;
  if (has_refer_cust()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      56, this->refer_cust(), output);
  }

  // optional bytes state = 57;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      57, this->state(), output);
  }

  // optional bytes card_number = 58;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      58, this->card_number(), output);
  }

  // optional bytes cc_bin = 59;
  if (has_cc_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      59, this->cc_bin(), output);
  }

  // optional bytes pay_amount = 60;
  if (has_pay_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->pay_amount(), output);
  }

  // optional bytes pay_method = 61;
  if (has_pay_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      61, this->pay_method(), output);
  }

  // optional bytes account_login = 62;
  if (has_account_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      62, this->account_login(), output);
  }

  // optional bytes customerName = 63;
  if (has_customername()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      63, this->customername(), output);
  }

  // optional bytes paperNumber = 64;
  if (has_papernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      64, this->papernumber(), output);
  }

  // optional bytes applyId = 65;
  if (has_applyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      65, this->applyid(), output);
  }

  // optional bytes loanType = 66;
  if (has_loantype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      66, this->loantype(), output);
  }

  // optional double loanMoney = 67;
  if (has_loanmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(67, this->loanmoney(), output);
  }

  // optional bytes currencyAnRong = 68;
  if (has_currencyanrong()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      68, this->currencyanrong(), output);
  }

  // optional int32 loanTimeLimit = 69;
  if (has_loantimelimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(69, this->loantimelimit(), output);
  }

  // optional bytes assureType = 70;
  if (has_assuretype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->assuretype(), output);
  }

  // optional bytes applyDate = 71;
  if (has_applydate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      71, this->applydate(), output);
  }

  // optional bytes creditAddress = 72;
  if (has_creditaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      72, this->creditaddress(), output);
  }

  // optional bytes applyResult = 73;
  if (has_applyresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      73, this->applyresult(), output);
  }

  // optional bytes applyResultTime = 74;
  if (has_applyresulttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      74, this->applyresulttime(), output);
  }

  // optional bytes loanAccount = 75;
  if (has_loanaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      75, this->loanaccount(), output);
  }

  // optional bytes creditStartDate = 76;
  if (has_creditstartdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      76, this->creditstartdate(), output);
  }

  // optional bytes creditEndDate = 77;
  if (has_creditenddate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      77, this->creditenddate(), output);
  }

  // optional int32 loanPeriods = 78;
  if (has_loanperiods()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(78, this->loanperiods(), output);
  }

  // optional double backMoney = 79;
  if (has_backmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(79, this->backmoney(), output);
  }

  // optional bytes isClear = 80;
  if (has_isclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->isclear(), output);
  }

  // optional double nbsMoney = 81;
  if (has_nbsmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(81, this->nbsmoney(), output);
  }

  // optional double nbMoney = 82;
  if (has_nbmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(82, this->nbmoney(), output);
  }

  // optional bytes cleanDate = 83;
  if (has_cleandate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      83, this->cleandate(), output);
  }

  // optional bytes overdueStartDate = 84;
  if (has_overduestartdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      84, this->overduestartdate(), output);
  }

  // optional bytes overdueEndDate = 85;
  if (has_overdueenddate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      85, this->overdueenddate(), output);
  }

  // optional bytes overdueReason = 86;
  if (has_overduereason()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      86, this->overduereason(), output);
  }

  // optional bytes overdueState = 87;
  if (has_overduestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      87, this->overduestate(), output);
  }

  // optional bytes relation_name = 88;
  if (has_relation_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      88, this->relation_name(), output);
  }

  // optional bytes relation_phone = 89;
  if (has_relation_phone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      89, this->relation_phone(), output);
  }

  // optional bytes trading_address = 90;
  if (has_trading_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      90, this->trading_address(), output);
  }

  // optional bytes business = 91;
  if (has_business()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      91, this->business(), output);
  }

  // optional bytes levelNo = 92;
  if (has_levelno()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      92, this->levelno(), output);
  }

  // optional bytes requestFileList = 93;
  if (has_requestfilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      93, this->requestfilelist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QDP_basic_info.user_basic_info)
}

::google::protobuf::uint8* user_basic_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QDP_basic_info.user_basic_info)
  // optional bytes user_id = 1;
  if (has_user_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->user_id(), target);
  }

  // optional bytes identity_card = 2;
  if (has_identity_card()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->identity_card(), target);
  }

  // optional bytes real_name = 3;
  if (has_real_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->real_name(), target);
  }

  // optional bytes user_nickname = 4;
  if (has_user_nickname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->user_nickname(), target);
  }

  // optional bytes mobile_phone = 5;
  if (has_mobile_phone()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->mobile_phone(), target);
  }

  // optional bytes email = 6;
  if (has_email()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->email(), target);
  }

  // optional bytes address = 7;
  if (has_address()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->address(), target);
  }

  // optional bytes bank_cart = 8;
  if (has_bank_cart()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->bank_cart(), target);
  }

  // optional bytes ip = 9;
  if (has_ip()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->ip(), target);
  }

  // optional bytes mac = 10;
  if (has_mac()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->mac(), target);
  }

  // optional bytes imei = 11;
  if (has_imei()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->imei(), target);
  }

  // optional bytes collegeName = 12;
  if (has_collegename()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->collegename(), target);
  }

  // optional .QDP_basic_info.degree eductionDegree = 13;
  if (has_eductiondegree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->eductiondegree(), target);
  }

  // optional bytes educationCategory = 14;
  if (has_educationcategory()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->educationcategory(), target);
  }

  // optional bytes graduateYear = 15;
  if (has_graduateyear()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->graduateyear(), target);
  }

  // optional bytes enrollmentYear = 16;
  if (has_enrollmentyear()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->enrollmentyear(), target);
  }

  // optional bytes blackBox = 17;
  if (has_blackbox()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->blackbox(), target);
  }

  // optional bytes password = 18;
  if (has_password()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->password(), target);
  }

  // optional bool is_prove = 19;
  if (has_is_prove()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->is_prove(), target);
  }

  // optional bytes transDate = 20;
  if (has_transdate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->transdate(), target);
  }

  // optional bytes currency = 21;
  if (has_currency()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        21, this->currency(), target);
  }

  // optional bytes transAmount = 22;
  if (has_transamount()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->transamount(), target);
  }

  // optional bytes idNo = 23;
  if (has_idno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->idno(), target);
  }

  // optional bytes idType = 24;
  if (has_idtype()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->idtype(), target);
  }

  // optional bytes name = 25;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        25, this->name(), target);
  }

  // optional bytes reasonNo = 26;
  if (has_reasonno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        26, this->reasonno(), target);
  }

  // optional bytes weiboNo = 27;
  if (has_weibono()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        27, this->weibono(), target);
  }

  // optional bytes weixinNo = 28;
  if (has_weixinno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        28, this->weixinno(), target);
  }

  // optional bytes qqNo = 29;
  if (has_qqno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->qqno(), target);
  }

  // optional bytes taobaoNo = 30;
  if (has_taobaono()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->taobaono(), target);
  }

  // optional bytes jdNo = 31;
  if (has_jdno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->jdno(), target);
  }

  // optional bytes amazonNo = 32;
  if (has_amazonno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->amazonno(), target);
  }

  // optional bytes yhdNo = 33;
  if (has_yhdno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        33, this->yhdno(), target);
  }

  // optional bytes home_addr = 34;
  if (has_home_addr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        34, this->home_addr(), target);
  }

  // optional bytes biz_addr = 35;
  if (has_biz_addr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        35, this->biz_addr(), target);
  }

  // optional bytes per_addr = 36;
  if (has_per_addr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        36, this->per_addr(), target);
  }

  // optional bytes apply_addr = 37;
  if (has_apply_addr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        37, this->apply_addr(), target);
  }

  // optional bytes tel_biz = 38;
  if (has_tel_biz()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        38, this->tel_biz(), target);
  }

  // optional bytes tel_home = 39;
  if (has_tel_home()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        39, this->tel_home(), target);
  }

  // optional bytes educationallevel = 40;
  if (has_educationallevel()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->educationallevel(), target);
  }

  // optional bytes marriage = 41;
  if (has_marriage()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        41, this->marriage(), target);
  }

  // optional bytes income = 42;
  if (has_income()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        42, this->income(), target);
  }

  // optional bytes biz_workfor = 43;
  if (has_biz_workfor()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        43, this->biz_workfor(), target);
  }

  // optional bytes apply_source = 44;
  if (has_apply_source()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        44, this->apply_source(), target);
  }

  // optional bytes apply_product = 45;
  if (has_apply_product()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        45, this->apply_product(), target);
  }

  // optional bytes refund_type = 46;
  if (has_refund_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        46, this->refund_type(), target);
  }

  // optional bytes applyQuota = 47;
  if (has_applyquota()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        47, this->applyquota(), target);
  }

  // optional bytes apply_time = 48;
  if (has_apply_time()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        48, this->apply_time(), target);
  }

  // optional bytes loanPeriod = 49;
  if (has_loanperiod()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        49, this->loanperiod(), target);
  }

  // optional bytes bank_id = 50;
  if (has_bank_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->bank_id(), target);
  }

  // optional bytes linkman_name = 51;
  if (has_linkman_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->linkman_name(), target);
  }

  // optional bytes linkman_cell = 52;
  if (has_linkman_cell()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        52, this->linkman_cell(), target);
  }

  // optional bytes linkman_rela = 53;
  if (has_linkman_rela()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        53, this->linkman_rela(), target);
  }

  // optional bytes token_id = 54;
  if (has_token_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        54, this->token_id(), target);
  }

  // optional bytes user_agent_cust = 55;
  if (has_user_agent_cust()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        55, this->user_agent_cust(), target);
  }

  // optional bytes refer_cust = 56;
  if (has_refer_cust()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        56, this->refer_cust(), target);
  }

  // optional bytes state = 57;
  if (has_state()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        57, this->state(), target);
  }

  // optional bytes card_number = 58;
  if (has_card_number()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        58, this->card_number(), target);
  }

  // optional bytes cc_bin = 59;
  if (has_cc_bin()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        59, this->cc_bin(), target);
  }

  // optional bytes pay_amount = 60;
  if (has_pay_amount()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->pay_amount(), target);
  }

  // optional bytes pay_method = 61;
  if (has_pay_method()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        61, this->pay_method(), target);
  }

  // optional bytes account_login = 62;
  if (has_account_login()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        62, this->account_login(), target);
  }

  // optional bytes customerName = 63;
  if (has_customername()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        63, this->customername(), target);
  }

  // optional bytes paperNumber = 64;
  if (has_papernumber()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        64, this->papernumber(), target);
  }

  // optional bytes applyId = 65;
  if (has_applyid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        65, this->applyid(), target);
  }

  // optional bytes loanType = 66;
  if (has_loantype()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        66, this->loantype(), target);
  }

  // optional double loanMoney = 67;
  if (has_loanmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(67, this->loanmoney(), target);
  }

  // optional bytes currencyAnRong = 68;
  if (has_currencyanrong()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        68, this->currencyanrong(), target);
  }

  // optional int32 loanTimeLimit = 69;
  if (has_loantimelimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(69, this->loantimelimit(), target);
  }

  // optional bytes assureType = 70;
  if (has_assuretype()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->assuretype(), target);
  }

  // optional bytes applyDate = 71;
  if (has_applydate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        71, this->applydate(), target);
  }

  // optional bytes creditAddress = 72;
  if (has_creditaddress()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        72, this->creditaddress(), target);
  }

  // optional bytes applyResult = 73;
  if (has_applyresult()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        73, this->applyresult(), target);
  }

  // optional bytes applyResultTime = 74;
  if (has_applyresulttime()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        74, this->applyresulttime(), target);
  }

  // optional bytes loanAccount = 75;
  if (has_loanaccount()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        75, this->loanaccount(), target);
  }

  // optional bytes creditStartDate = 76;
  if (has_creditstartdate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        76, this->creditstartdate(), target);
  }

  // optional bytes creditEndDate = 77;
  if (has_creditenddate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        77, this->creditenddate(), target);
  }

  // optional int32 loanPeriods = 78;
  if (has_loanperiods()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(78, this->loanperiods(), target);
  }

  // optional double backMoney = 79;
  if (has_backmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(79, this->backmoney(), target);
  }

  // optional bytes isClear = 80;
  if (has_isclear()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->isclear(), target);
  }

  // optional double nbsMoney = 81;
  if (has_nbsmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(81, this->nbsmoney(), target);
  }

  // optional double nbMoney = 82;
  if (has_nbmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(82, this->nbmoney(), target);
  }

  // optional bytes cleanDate = 83;
  if (has_cleandate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        83, this->cleandate(), target);
  }

  // optional bytes overdueStartDate = 84;
  if (has_overduestartdate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        84, this->overduestartdate(), target);
  }

  // optional bytes overdueEndDate = 85;
  if (has_overdueenddate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        85, this->overdueenddate(), target);
  }

  // optional bytes overdueReason = 86;
  if (has_overduereason()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        86, this->overduereason(), target);
  }

  // optional bytes overdueState = 87;
  if (has_overduestate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        87, this->overduestate(), target);
  }

  // optional bytes relation_name = 88;
  if (has_relation_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        88, this->relation_name(), target);
  }

  // optional bytes relation_phone = 89;
  if (has_relation_phone()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        89, this->relation_phone(), target);
  }

  // optional bytes trading_address = 90;
  if (has_trading_address()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        90, this->trading_address(), target);
  }

  // optional bytes business = 91;
  if (has_business()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        91, this->business(), target);
  }

  // optional bytes levelNo = 92;
  if (has_levelno()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        92, this->levelno(), target);
  }

  // optional bytes requestFileList = 93;
  if (has_requestfilelist()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        93, this->requestfilelist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QDP_basic_info.user_basic_info)
  return target;
}

int user_basic_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_id());
    }

    // optional bytes identity_card = 2;
    if (has_identity_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->identity_card());
    }

    // optional bytes real_name = 3;
    if (has_real_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->real_name());
    }

    // optional bytes user_nickname = 4;
    if (has_user_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_nickname());
    }

    // optional bytes mobile_phone = 5;
    if (has_mobile_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mobile_phone());
    }

    // optional bytes email = 6;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->email());
    }

    // optional bytes address = 7;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->address());
    }

    // optional bytes bank_cart = 8;
    if (has_bank_cart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bank_cart());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes ip = 9;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ip());
    }

    // optional bytes mac = 10;
    if (has_mac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mac());
    }

    // optional bytes imei = 11;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->imei());
    }

    // optional bytes collegeName = 12;
    if (has_collegename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->collegename());
    }

    // optional .QDP_basic_info.degree eductionDegree = 13;
    if (has_eductiondegree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eductiondegree());
    }

    // optional bytes educationCategory = 14;
    if (has_educationcategory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->educationcategory());
    }

    // optional bytes graduateYear = 15;
    if (has_graduateyear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->graduateyear());
    }

    // optional bytes enrollmentYear = 16;
    if (has_enrollmentyear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->enrollmentyear());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional bytes blackBox = 17;
    if (has_blackbox()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->blackbox());
    }

    // optional bytes password = 18;
    if (has_password()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->password());
    }

    // optional bool is_prove = 19;
    if (has_is_prove()) {
      total_size += 2 + 1;
    }

    // optional bytes transDate = 20;
    if (has_transdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transdate());
    }

    // optional bytes currency = 21;
    if (has_currency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->currency());
    }

    // optional bytes transAmount = 22;
    if (has_transamount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transamount());
    }

    // optional bytes idNo = 23;
    if (has_idno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->idno());
    }

    // optional bytes idType = 24;
    if (has_idtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->idtype());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional bytes name = 25;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes reasonNo = 26;
    if (has_reasonno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reasonno());
    }

    // optional bytes weiboNo = 27;
    if (has_weibono()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->weibono());
    }

    // optional bytes weixinNo = 28;
    if (has_weixinno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->weixinno());
    }

    // optional bytes qqNo = 29;
    if (has_qqno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->qqno());
    }

    // optional bytes taobaoNo = 30;
    if (has_taobaono()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->taobaono());
    }

    // optional bytes jdNo = 31;
    if (has_jdno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->jdno());
    }

    // optional bytes amazonNo = 32;
    if (has_amazonno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->amazonno());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional bytes yhdNo = 33;
    if (has_yhdno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->yhdno());
    }

    // optional bytes home_addr = 34;
    if (has_home_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->home_addr());
    }

    // optional bytes biz_addr = 35;
    if (has_biz_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->biz_addr());
    }

    // optional bytes per_addr = 36;
    if (has_per_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->per_addr());
    }

    // optional bytes apply_addr = 37;
    if (has_apply_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->apply_addr());
    }

    // optional bytes tel_biz = 38;
    if (has_tel_biz()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tel_biz());
    }

    // optional bytes tel_home = 39;
    if (has_tel_home()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tel_home());
    }

    // optional bytes educationallevel = 40;
    if (has_educationallevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->educationallevel());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional bytes marriage = 41;
    if (has_marriage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->marriage());
    }

    // optional bytes income = 42;
    if (has_income()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->income());
    }

    // optional bytes biz_workfor = 43;
    if (has_biz_workfor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->biz_workfor());
    }

    // optional bytes apply_source = 44;
    if (has_apply_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->apply_source());
    }

    // optional bytes apply_product = 45;
    if (has_apply_product()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->apply_product());
    }

    // optional bytes refund_type = 46;
    if (has_refund_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->refund_type());
    }

    // optional bytes applyQuota = 47;
    if (has_applyquota()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->applyquota());
    }

    // optional bytes apply_time = 48;
    if (has_apply_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->apply_time());
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional bytes loanPeriod = 49;
    if (has_loanperiod()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->loanperiod());
    }

    // optional bytes bank_id = 50;
    if (has_bank_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bank_id());
    }

    // optional bytes linkman_name = 51;
    if (has_linkman_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->linkman_name());
    }

    // optional bytes linkman_cell = 52;
    if (has_linkman_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->linkman_cell());
    }

    // optional bytes linkman_rela = 53;
    if (has_linkman_rela()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->linkman_rela());
    }

    // optional bytes token_id = 54;
    if (has_token_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token_id());
    }

    // optional bytes user_agent_cust = 55;
    if (has_user_agent_cust()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_agent_cust());
    }

    // optional bytes refer_cust = 56;
    if (has_refer_cust()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->refer_cust());
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional bytes state = 57;
    if (has_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->state());
    }

    // optional bytes card_number = 58;
    if (has_card_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->card_number());
    }

    // optional bytes cc_bin = 59;
    if (has_cc_bin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cc_bin());
    }

    // optional bytes pay_amount = 60;
    if (has_pay_amount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pay_amount());
    }

    // optional bytes pay_method = 61;
    if (has_pay_method()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pay_method());
    }

    // optional bytes account_login = 62;
    if (has_account_login()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account_login());
    }

    // optional bytes customerName = 63;
    if (has_customername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->customername());
    }

    // optional bytes paperNumber = 64;
    if (has_papernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->papernumber());
    }

  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional bytes applyId = 65;
    if (has_applyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->applyid());
    }

    // optional bytes loanType = 66;
    if (has_loantype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->loantype());
    }

    // optional double loanMoney = 67;
    if (has_loanmoney()) {
      total_size += 2 + 8;
    }

    // optional bytes currencyAnRong = 68;
    if (has_currencyanrong()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->currencyanrong());
    }

    // optional int32 loanTimeLimit = 69;
    if (has_loantimelimit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loantimelimit());
    }

    // optional bytes assureType = 70;
    if (has_assuretype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->assuretype());
    }

    // optional bytes applyDate = 71;
    if (has_applydate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->applydate());
    }

    // optional bytes creditAddress = 72;
    if (has_creditaddress()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->creditaddress());
    }

  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    // optional bytes applyResult = 73;
    if (has_applyresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->applyresult());
    }

    // optional bytes applyResultTime = 74;
    if (has_applyresulttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->applyresulttime());
    }

    // optional bytes loanAccount = 75;
    if (has_loanaccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->loanaccount());
    }

    // optional bytes creditStartDate = 76;
    if (has_creditstartdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->creditstartdate());
    }

    // optional bytes creditEndDate = 77;
    if (has_creditenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->creditenddate());
    }

    // optional int32 loanPeriods = 78;
    if (has_loanperiods()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loanperiods());
    }

    // optional double backMoney = 79;
    if (has_backmoney()) {
      total_size += 2 + 8;
    }

    // optional bytes isClear = 80;
    if (has_isclear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->isclear());
    }

  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    // optional double nbsMoney = 81;
    if (has_nbsmoney()) {
      total_size += 2 + 8;
    }

    // optional double nbMoney = 82;
    if (has_nbmoney()) {
      total_size += 2 + 8;
    }

    // optional bytes cleanDate = 83;
    if (has_cleandate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cleandate());
    }

    // optional bytes overdueStartDate = 84;
    if (has_overduestartdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->overduestartdate());
    }

    // optional bytes overdueEndDate = 85;
    if (has_overdueenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->overdueenddate());
    }

    // optional bytes overdueReason = 86;
    if (has_overduereason()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->overduereason());
    }

    // optional bytes overdueState = 87;
    if (has_overduestate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->overduestate());
    }

    // optional bytes relation_name = 88;
    if (has_relation_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->relation_name());
    }

  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    // optional bytes relation_phone = 89;
    if (has_relation_phone()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->relation_phone());
    }

    // optional bytes trading_address = 90;
    if (has_trading_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->trading_address());
    }

    // optional bytes business = 91;
    if (has_business()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->business());
    }

    // optional bytes levelNo = 92;
    if (has_levelno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->levelno());
    }

    // optional bytes requestFileList = 93;
    if (has_requestfilelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->requestfilelist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user_basic_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const user_basic_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const user_basic_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void user_basic_info::MergeFrom(const user_basic_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_identity_card()) {
      set_identity_card(from.identity_card());
    }
    if (from.has_real_name()) {
      set_real_name(from.real_name());
    }
    if (from.has_user_nickname()) {
      set_user_nickname(from.user_nickname());
    }
    if (from.has_mobile_phone()) {
      set_mobile_phone(from.mobile_phone());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_bank_cart()) {
      set_bank_cart(from.bank_cart());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_mac()) {
      set_mac(from.mac());
    }
    if (from.has_imei()) {
      set_imei(from.imei());
    }
    if (from.has_collegename()) {
      set_collegename(from.collegename());
    }
    if (from.has_eductiondegree()) {
      set_eductiondegree(from.eductiondegree());
    }
    if (from.has_educationcategory()) {
      set_educationcategory(from.educationcategory());
    }
    if (from.has_graduateyear()) {
      set_graduateyear(from.graduateyear());
    }
    if (from.has_enrollmentyear()) {
      set_enrollmentyear(from.enrollmentyear());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_blackbox()) {
      set_blackbox(from.blackbox());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_is_prove()) {
      set_is_prove(from.is_prove());
    }
    if (from.has_transdate()) {
      set_transdate(from.transdate());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_transamount()) {
      set_transamount(from.transamount());
    }
    if (from.has_idno()) {
      set_idno(from.idno());
    }
    if (from.has_idtype()) {
      set_idtype(from.idtype());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_reasonno()) {
      set_reasonno(from.reasonno());
    }
    if (from.has_weibono()) {
      set_weibono(from.weibono());
    }
    if (from.has_weixinno()) {
      set_weixinno(from.weixinno());
    }
    if (from.has_qqno()) {
      set_qqno(from.qqno());
    }
    if (from.has_taobaono()) {
      set_taobaono(from.taobaono());
    }
    if (from.has_jdno()) {
      set_jdno(from.jdno());
    }
    if (from.has_amazonno()) {
      set_amazonno(from.amazonno());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_yhdno()) {
      set_yhdno(from.yhdno());
    }
    if (from.has_home_addr()) {
      set_home_addr(from.home_addr());
    }
    if (from.has_biz_addr()) {
      set_biz_addr(from.biz_addr());
    }
    if (from.has_per_addr()) {
      set_per_addr(from.per_addr());
    }
    if (from.has_apply_addr()) {
      set_apply_addr(from.apply_addr());
    }
    if (from.has_tel_biz()) {
      set_tel_biz(from.tel_biz());
    }
    if (from.has_tel_home()) {
      set_tel_home(from.tel_home());
    }
    if (from.has_educationallevel()) {
      set_educationallevel(from.educationallevel());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_marriage()) {
      set_marriage(from.marriage());
    }
    if (from.has_income()) {
      set_income(from.income());
    }
    if (from.has_biz_workfor()) {
      set_biz_workfor(from.biz_workfor());
    }
    if (from.has_apply_source()) {
      set_apply_source(from.apply_source());
    }
    if (from.has_apply_product()) {
      set_apply_product(from.apply_product());
    }
    if (from.has_refund_type()) {
      set_refund_type(from.refund_type());
    }
    if (from.has_applyquota()) {
      set_applyquota(from.applyquota());
    }
    if (from.has_apply_time()) {
      set_apply_time(from.apply_time());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_loanperiod()) {
      set_loanperiod(from.loanperiod());
    }
    if (from.has_bank_id()) {
      set_bank_id(from.bank_id());
    }
    if (from.has_linkman_name()) {
      set_linkman_name(from.linkman_name());
    }
    if (from.has_linkman_cell()) {
      set_linkman_cell(from.linkman_cell());
    }
    if (from.has_linkman_rela()) {
      set_linkman_rela(from.linkman_rela());
    }
    if (from.has_token_id()) {
      set_token_id(from.token_id());
    }
    if (from.has_user_agent_cust()) {
      set_user_agent_cust(from.user_agent_cust());
    }
    if (from.has_refer_cust()) {
      set_refer_cust(from.refer_cust());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_card_number()) {
      set_card_number(from.card_number());
    }
    if (from.has_cc_bin()) {
      set_cc_bin(from.cc_bin());
    }
    if (from.has_pay_amount()) {
      set_pay_amount(from.pay_amount());
    }
    if (from.has_pay_method()) {
      set_pay_method(from.pay_method());
    }
    if (from.has_account_login()) {
      set_account_login(from.account_login());
    }
    if (from.has_customername()) {
      set_customername(from.customername());
    }
    if (from.has_papernumber()) {
      set_papernumber(from.papernumber());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_applyid()) {
      set_applyid(from.applyid());
    }
    if (from.has_loantype()) {
      set_loantype(from.loantype());
    }
    if (from.has_loanmoney()) {
      set_loanmoney(from.loanmoney());
    }
    if (from.has_currencyanrong()) {
      set_currencyanrong(from.currencyanrong());
    }
    if (from.has_loantimelimit()) {
      set_loantimelimit(from.loantimelimit());
    }
    if (from.has_assuretype()) {
      set_assuretype(from.assuretype());
    }
    if (from.has_applydate()) {
      set_applydate(from.applydate());
    }
    if (from.has_creditaddress()) {
      set_creditaddress(from.creditaddress());
    }
  }
  if (from._has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    if (from.has_applyresult()) {
      set_applyresult(from.applyresult());
    }
    if (from.has_applyresulttime()) {
      set_applyresulttime(from.applyresulttime());
    }
    if (from.has_loanaccount()) {
      set_loanaccount(from.loanaccount());
    }
    if (from.has_creditstartdate()) {
      set_creditstartdate(from.creditstartdate());
    }
    if (from.has_creditenddate()) {
      set_creditenddate(from.creditenddate());
    }
    if (from.has_loanperiods()) {
      set_loanperiods(from.loanperiods());
    }
    if (from.has_backmoney()) {
      set_backmoney(from.backmoney());
    }
    if (from.has_isclear()) {
      set_isclear(from.isclear());
    }
  }
  if (from._has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    if (from.has_nbsmoney()) {
      set_nbsmoney(from.nbsmoney());
    }
    if (from.has_nbmoney()) {
      set_nbmoney(from.nbmoney());
    }
    if (from.has_cleandate()) {
      set_cleandate(from.cleandate());
    }
    if (from.has_overduestartdate()) {
      set_overduestartdate(from.overduestartdate());
    }
    if (from.has_overdueenddate()) {
      set_overdueenddate(from.overdueenddate());
    }
    if (from.has_overduereason()) {
      set_overduereason(from.overduereason());
    }
    if (from.has_overduestate()) {
      set_overduestate(from.overduestate());
    }
    if (from.has_relation_name()) {
      set_relation_name(from.relation_name());
    }
  }
  if (from._has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    if (from.has_relation_phone()) {
      set_relation_phone(from.relation_phone());
    }
    if (from.has_trading_address()) {
      set_trading_address(from.trading_address());
    }
    if (from.has_business()) {
      set_business(from.business());
    }
    if (from.has_levelno()) {
      set_levelno(from.levelno());
    }
    if (from.has_requestfilelist()) {
      set_requestfilelist(from.requestfilelist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void user_basic_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_basic_info::CopyFrom(const user_basic_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_basic_info::IsInitialized() const {

  return true;
}

void user_basic_info::Swap(user_basic_info* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(identity_card_, other->identity_card_);
    std::swap(real_name_, other->real_name_);
    std::swap(user_nickname_, other->user_nickname_);
    std::swap(mobile_phone_, other->mobile_phone_);
    std::swap(email_, other->email_);
    std::swap(address_, other->address_);
    std::swap(bank_cart_, other->bank_cart_);
    std::swap(ip_, other->ip_);
    std::swap(mac_, other->mac_);
    std::swap(imei_, other->imei_);
    std::swap(collegename_, other->collegename_);
    std::swap(eductiondegree_, other->eductiondegree_);
    std::swap(educationcategory_, other->educationcategory_);
    std::swap(graduateyear_, other->graduateyear_);
    std::swap(enrollmentyear_, other->enrollmentyear_);
    std::swap(blackbox_, other->blackbox_);
    std::swap(password_, other->password_);
    std::swap(is_prove_, other->is_prove_);
    std::swap(transdate_, other->transdate_);
    std::swap(currency_, other->currency_);
    std::swap(transamount_, other->transamount_);
    std::swap(idno_, other->idno_);
    std::swap(idtype_, other->idtype_);
    std::swap(name_, other->name_);
    std::swap(reasonno_, other->reasonno_);
    std::swap(weibono_, other->weibono_);
    std::swap(weixinno_, other->weixinno_);
    std::swap(qqno_, other->qqno_);
    std::swap(taobaono_, other->taobaono_);
    std::swap(jdno_, other->jdno_);
    std::swap(amazonno_, other->amazonno_);
    std::swap(yhdno_, other->yhdno_);
    std::swap(home_addr_, other->home_addr_);
    std::swap(biz_addr_, other->biz_addr_);
    std::swap(per_addr_, other->per_addr_);
    std::swap(apply_addr_, other->apply_addr_);
    std::swap(tel_biz_, other->tel_biz_);
    std::swap(tel_home_, other->tel_home_);
    std::swap(educationallevel_, other->educationallevel_);
    std::swap(marriage_, other->marriage_);
    std::swap(income_, other->income_);
    std::swap(biz_workfor_, other->biz_workfor_);
    std::swap(apply_source_, other->apply_source_);
    std::swap(apply_product_, other->apply_product_);
    std::swap(refund_type_, other->refund_type_);
    std::swap(applyquota_, other->applyquota_);
    std::swap(apply_time_, other->apply_time_);
    std::swap(loanperiod_, other->loanperiod_);
    std::swap(bank_id_, other->bank_id_);
    std::swap(linkman_name_, other->linkman_name_);
    std::swap(linkman_cell_, other->linkman_cell_);
    std::swap(linkman_rela_, other->linkman_rela_);
    std::swap(token_id_, other->token_id_);
    std::swap(user_agent_cust_, other->user_agent_cust_);
    std::swap(refer_cust_, other->refer_cust_);
    std::swap(state_, other->state_);
    std::swap(card_number_, other->card_number_);
    std::swap(cc_bin_, other->cc_bin_);
    std::swap(pay_amount_, other->pay_amount_);
    std::swap(pay_method_, other->pay_method_);
    std::swap(account_login_, other->account_login_);
    std::swap(customername_, other->customername_);
    std::swap(papernumber_, other->papernumber_);
    std::swap(applyid_, other->applyid_);
    std::swap(loantype_, other->loantype_);
    std::swap(loanmoney_, other->loanmoney_);
    std::swap(currencyanrong_, other->currencyanrong_);
    std::swap(loantimelimit_, other->loantimelimit_);
    std::swap(assuretype_, other->assuretype_);
    std::swap(applydate_, other->applydate_);
    std::swap(creditaddress_, other->creditaddress_);
    std::swap(applyresult_, other->applyresult_);
    std::swap(applyresulttime_, other->applyresulttime_);
    std::swap(loanaccount_, other->loanaccount_);
    std::swap(creditstartdate_, other->creditstartdate_);
    std::swap(creditenddate_, other->creditenddate_);
    std::swap(loanperiods_, other->loanperiods_);
    std::swap(backmoney_, other->backmoney_);
    std::swap(isclear_, other->isclear_);
    std::swap(nbsmoney_, other->nbsmoney_);
    std::swap(nbmoney_, other->nbmoney_);
    std::swap(cleandate_, other->cleandate_);
    std::swap(overduestartdate_, other->overduestartdate_);
    std::swap(overdueenddate_, other->overdueenddate_);
    std::swap(overduereason_, other->overduereason_);
    std::swap(overduestate_, other->overduestate_);
    std::swap(relation_name_, other->relation_name_);
    std::swap(relation_phone_, other->relation_phone_);
    std::swap(trading_address_, other->trading_address_);
    std::swap(business_, other->business_);
    std::swap(levelno_, other->levelno_);
    std::swap(requestfilelist_, other->requestfilelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata user_basic_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = user_basic_info_descriptor_;
  metadata.reflection = user_basic_info_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QDP_basic_info

// @@protoc_insertion_point(global_scope)
