syntax = "proto2";
package DW_Location;

import "common.proto";
import "UBAS_niiwoo.proto";


enum DW_ask_type
{
    batch_user_info                                    = 1; // 批量用户逾期批量查询
    user_location_track                                = 2; // 用户位置信息追踪
    user_basic_info_                                   = 3; // 用户基本信息查询
    user_load_days                                     = 4; //用户登陆天数
}

// 批量用户请求接口
message user_identification_list
{
    repeated common.user_basic_identification          user_info_list       = 1;
}

// 用户逾期信息
message user_overdue_info
{
    optional common.user_basic_identification           user_info           = 1;    // 用户标识
    optional bool                                       is_loan_overdue     = 2;    // 是否有借款逾期情况
    optional bool                                       is_assure_overdue   = 3;    // 是否担保逾期未垫付情况
}

// 设备中历史登陆用户
message LandedAccount
{
    optional bytes                                      mobilephone         = 1;  // 历史登陆人的手机号
    optional bytes                                      identity_card       = 2;  // 身份证
    optional bytes                                      real_name           = 3;  // 真实姓名
    optional bytes                                      last_login_time     = 4;  // 最近一次登陆时间
}

//预留普通用户信息
message yuliu_common_user_info
{
	optional bytes 				name 	  = 1; //姓名
	optional bytes 			    phone_num = 2; //手机号
	optional bytes 				relation  = 3; //关系
	
}

//预留平台用户信息
message yuliu_platform_user_info
{
	optional bytes  avatar                       = 1; //头像URL连接
	optional bytes 	user_nickname                = 2;  //用户昵称
	optional bytes 	real_name                    = 3;  //账号名字
	optional common.sex  sex_type                = 4; // 性别
	optional overdue_type  type					 = 5; //逾期状态
	optional float   chonghe_rate				 = 6; //重合度大小定义，比如50%
	optional bool 	 is_in_adressbook			 = 7; //是否在通讯中
	optional bytes   adressbook_remark_name	     = 8; //通讯录备注名
	optional yuliu_common_user_info comm_info 	 = 9; //包括 普通预留用户信息
}

//平台类型
enum platform_type
{
	niiwoo_type			= 1; //你我金融
	tuandai_type		= 2; //团贷网
	both_type			= 3; //你我金融和团贷网
	neither_type		= 4; //两个都不是
}

//平台注册用户
message platform_register_user_info
{
	optional bytes 					adressbook_name   		= 1; //通讯录名字
	optional bytes 					phone_num 				= 2; //电话号码
	optional platform_type          platfom_type_enum 		= 3; //平台类型
	optional overdue_type			overdue_type_enum 		= 4;  //逾期类型		
}
// 设备关联的联系人列表
message TerminalContactList
{
    optional bytes                                      imei                = 1;  // 设备唯一号
    optional bytes                                      mobile_brand        = 2;  // 手机品牌
    optional int32                                      iscommon            = 3;  // 是否常用手机
    repeated UBAS_niiwoo.user_contact_t                 constacts           = 4;  // 通讯录列表
    repeated LandedAccount                              landed_account      = 5;  // 该设备登陆过的人的信息
	repeated platform_register_user_info				platform_register_user = 6 ; //平台注册用户
}

//性别比例
message sex_proportion
{
    optional int32                                      male_num            =1;  //男用户数
	optional int32                                      girl_num            =2;  //女用户数
	optional int32                                      nuknow_num          =3;  //未知
}

//学历分布
message degree_proportion
{
    optional int32                                      technical_num       =1;  // 中专及以下用户数
	optional int32                                      college_num         =2;  // 大专用户数
	optional int32                                      university_num      =3;  // 本科用户数
    optional int32                                      graduate_num        =4;  // 研究生用户数
	optional int32                                      doctor_num          =5;  // 博士及以上用户数
}

//邮箱分布
message email_proportion
{
    optional bytes                                      email               = 1;   //邮件名（如：163.com)
	optional int32                                      email_num           = 2;   //邮件数
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                            //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum overdue_type
{
	borrow_overdue_type				= 1; //借款逾期
	dianfu_overdue_type				= 2; //垫付逾期
	both_overdue					= 3; //两个都逾期
	not_overdue						= 4; //没逾期
}

// 该账号登陆的设备中,其他的登陆手机号
message MobilePhoneListExt_ask
{
    optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
    optional bytes                                      identity_card       = 2;  // 身份证号码
    optional bytes                                      mobile_phone        = 3;  // 登陆人的手机号
}

message MobilePhoneListExt_ans
{
	optional common.errorinfo                           result              = 1;  // 返回码
    optional common.user_info                           user_info_          = 2;  // 用户基本信息
    repeated TerminalContactList                        terminal_contacts   = 3;  // 账户所有的联系人列表
    optional overdue_type								type 				= 4;  //逾期类型				
	repeated yuliu_common_user_info						yuliu_common_user	= 5;  //普通预留用户
	repeated yuliu_platform_user_info					yuliu_platform_user	= 6;  //预留平台用户信息
}

message adressbook_chonghe_rate_info
{
	optional bytes										original_device_no			= 1; //设备号
	optional bytes										other_device_no				= 2; //被匹配人的设备号
	optional float										chonghe_rate				= 3; //重合度
}
//通讯录分析中加上重合度匹配功能
message adressbook_chonghe_rate_ask
{
	optional common.common_ask_header                   ask_header          		= 1;  // 通用的公共请求字段(比如回复的主题)
    optional bytes                                      original_mobile_phone       = 2;  // 手机号
	optional bytes                                      other_mobile_phone          = 3;  // 被匹配手机号
}

message adressbook_chonghe_rate_ans
{
	optional common.errorinfo                           result              		= 1;  // 返回码
	repeated adressbook_chonghe_rate_info				adressbook_chonghe_rate     = 2; //重合度
}

// 批量个人信用查询
message DW_userinfo_ask
{
    optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
    optional DW_ask_type                                ask_type            = 2;  // 请求类型
    optional bytes                                      start_time          = 3;  // 起始时间(地理位置)
    optional bytes                                      end_time            = 4;  // 结束时间(地理位置)
    optional user_identification_list                   user_info_list      = 5;  // 用户标识列表(逾期状态批量用户查询)
    optional common.user_basic_identification           user_info           = 6;  // 用户标识(地理位置, 用户基本信息查询)
	optional bytes                                      user_id             = 7;  // 用户userId 查基本信息                   
}

////////////////////////////////////////////////////////
// 用户逾期批量查询结果
message DW_userinfo_ans
{
    repeated user_overdue_info                          user_overdue_infos  = 1;  // 用户逾期列表
    optional common.errorinfo                           result              = 2;  // 返回码
}

////////////////////////////////////////////////////////
// 个人地理位置轨迹查询
message DW_location_track_ans
{
    repeated common.location_info                       loc_info            = 1;  // 位置轨迹集合,按时间降序
    optional common.errorinfo                           result              = 2;  // 返回码
}

////////////////////////////////////////////////////////
// 用户基本信息查询
message DW_location_info_ans
{
    optional common.user_info                           user_basic_info     = 1;   // 用户基本信息
    optional common.errorinfo                           result              = 2;   // 返回码
}


//用户登陆信息
message DW_load_days_info_ans
{
    optional int32                                      loadDays            = 1;   // 用户登陆
    optional common.errorinfo                           error              = 2;   // 返回码
}

////////////////////////////////////////////////////////

enum static_report_type
{
    user_total_num                                      = 0;  //用户总数
    phone_bind_user_num                                 = 1;  //手机绑定用户数
    realname_auth_user_num                              = 2;  //实名认证用户数据
    loan_user_num                                       = 3;  //借款人认证用户数
    money_dabao_num                                     = 4;  //钱大保用户数
    money_xiaobao_num                                   = 5;  //钱小保用户数
    sesame_num_type                                     = 6;  //芝麻信用认证用户数 暂时预留
	degree_num                                          = 7;  //学历认证用户数
	email_num                                           = 8;  //邮件认证用户数
}

message static_report_result
{
    optional static_report_type                         static_type                  = 1;  // 统计类型
    optional int32                                      static_number                = 2;  // 统计总数
}


//用户概况(注册用户、男女用户数、手机绑定、实名认证、借款人认证、担保人认证、钱小保、钱大保、尽掉人)
message user_profiles_ask
{
    optional common.common_ask_header                   ask_header                   = 1;  // 通用的公共请求字段(比如回复的主题)
}


//用户概况
message user_profiles_ans
{
    repeated static_report_result                       static_result                = 1;  //统计结果列表
	optional sex_proportion                             sex                          = 2;  //性别比例
	optional degree_proportion                          degree                       = 3;  //学历分布
	repeated email_proportion                           emaillist                    = 4;  //邮件分布
	optional common.errorinfo                           error                        = 5;  //错误代码
}

//熟人授信--悄悄借 用户基本信息
message user_basic_info_ask
{
	optional bytes 		json_request      		= 1; //请求json
	optional common.common_ask_header                   ask_header          = 2;  // 通用的公共请求字段(比如回复的主题)
}

message user_basic_info_ans
{
	optional bytes 		json_response      		= 1; 	//响应json
	optional common.result_info                           result              = 2;   // 返回码
}

/////////////////////////////////微担保能力指数///////////////////////
//--------------------------------
//微担保公司信息
message wei_dan_bao_base_info
{
	required string                 wei_dan_bao_id               = 1;   //微担保公司id
	required string                 corporation_name             = 2;   //公司名称
	required string                 create_user_id               = 3;   //公司创建人UserId
	required string                 audit_pass_time              = 4;   //审核通过时间
	required double                 guarantee_stacking_line      = 5;   //担保额度
	required double                 guarantee_used               = 6;   //使用额度 
}

//查询所有微担保公司资料
message wei_dan_bao_base_info_ask
{
	optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
}

//查询所有微担保公司资料响应
message wei_dan_bao_base_info_ans
{
	required common.result_info    result                       = 1;   //返回码
	
	repeated wei_dan_bao_base_info all_info                     = 2;   //所有微担保公司信息
}

//------------------------------


//------------------------------
enum avg_suc_type
{
	month_suc_diligence_type		= 1;   //月均成功尽调
	month_suc_guarantee_type		= 2;   //月均成功担保
}

message wei_dan_bao_success_info
{
	optional int32			                 success_count			      = 1;  //成功笔
	optional string                      wei_dan_bao_id           = 2;  //微担保公司id
	optional string                      wei_dan_bao_city_name    = 3;  //微担保公司所在城市名
}

//请求所有微担保公司成功尽调信息
message wei_dan_bao_all_success_info_ask
{
	optional common.common_ask_header    ask_header               = 1;  // 通用的公共请求字段(比如回复的主题)
	optional avg_suc_type                request_type 			  = 2;	//请求类型
	repeated string			             all_wei_dan_bao_id		  = 3; 	// 所有微担保公司id	
	optional int32			             days_before			  = 4;  //请求多少天	
}

message wei_dan_bao_all_success_info_ans
{
	optional common.result_info                           result              = 1;   // 返回码
	repeated wei_dan_bao_success_info                     info                = 2;   //所有成功信息	
}


//------------------------------

message guarantee_amount_use_score_info
{
	optional bytes wei_dan_bao_id							= 1; 	//请求id
	optional bytes cur_already_use_guarantee_amount			= 2; 	//当前已使用的担保额度
	optional bytes cur_guarantee_amount						= 3;    //当前担保额度
}

message avg_diligence_guarantee_score_info
{
	optional float 	dan_bao_amount					= 1 ;   //担保金额
	optional float  bid_loan_amount					= 2 ;   //标的借款金额
}

//平均尽调担保比例得分
message avg_diligence_guarantee_score_ask
{
	optional common.common_ask_header                   ask_header          = 1 ;  // 通用的公共请求字段(比如回复的主题)
	optional bytes			   wei_dan_bao_id				= 2 ; 	//请求id	
	optional int32			   days_before					= 3 ;  //请求多少天	
}

message avg_diligence_guarantee_score_ans
{
	optional common.result_info                           result              = 1 ;   // 返回码
	optional bytes			   wei_dan_bao_id		 = 2 ; 	//请求id	
	repeated avg_diligence_guarantee_score_info info = 3; 
}

//担保额度使用率得分
message guarantee_amount_use_score_ask
{
	optional common.common_ask_header                   ask_header          = 1 ;  // 通用的公共请求字段(比如回复的主题)
	repeated bytes			   wei_dan_bao_id				= 2 ; 	 //请求id
	optional int32			   days_before					= 3 ;  //请求多少天	
}

message guarantee_amount_use_score_ans
{
	optional common.result_info                           result              = 1 ;   // 返回码
	repeated guarantee_amount_use_score_info		info 		= 2; 
}

//当前逾期, 当前坏账, 累计逾期, 累计坏账 得分请求类型
enum rate_score_type
{
	 cur_overdue_type			= 1;  //当前逾期率得分
	 cur_baddebt_type			= 2;  //当前坏账率得分
	 accumulate_overdue_type 	= 3;  //累计逾期率得分
	 accumulate_baddebt_type 	= 4;  //累计坏账率得分
}

message rate_score_info
{	
	optional int32 kind_counts    				= 1;	//当前逾期期数,坏账笔数;累计逾期期数，坏账笔数
	optional int32 already_expires_count	    = 2;	//已到期期数
	optional float kind_amount					= 3;    //当前逾期期数,坏账金额;累计逾期期数，坏账金额
	optional float already_expires_amount	 	= 4; 	//截至当前到期金额
	optional bytes wei_dan_bao_id				= 5; 	//请求id 
	optional int32 max_expires_day				= 6; 	//最大逾期天数
	optional rate_score_type     ans_type 		= 7;	//请求类型
}

//当前逾期, 当前坏账, 累计逾期, 累计坏账 得分请求
message rate_score_ask
{
	optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
	optional rate_score_type     request_type 			= 2;	//请求类型
	repeated bytes			    wei_dan_bao_id			= 3; 	//请求id
	optional int32			   days_before				= 4 ;  //请求多少天	
}

message rate_score_ans
{
	optional common.result_info                           result              = 1;   // 返回码
	repeated rate_score_info 				info 		= 2; 	
}

message covers_time_score_info
{
	optional int32 which_day   		= 1; //借款标的逾期后第x天垫付
	optional int32 covers_period  	= 2; //垫付期数
}

enum covers_time_score_type
{
	 not_expired_bid				= 1;  //从未有到期尽调借款标
	 expired_not_overdue			= 2;  //有到期尽调借款标，但借款人未发生逾期
	 borroweroverduebutnotdianfu 	= 3;  //当前时间为止到期且逾期,但未垫付
	 never_not_dianfu 				= 4;  //当前没有未垫付情况
}

//垫付时间得分
message covers_time_score_ask
{	
	optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
	optional bytes	wei_dan_bao_id			= 2; //请求id
	
}
message covers_time_score_ans
{
	optional common.result_info                           result              = 1;   // 返回码	
	repeated covers_time_score_info info   		= 2; //借款标的逾期后第x天垫付期数
	optional covers_time_score_type type 		= 3; //类型
	optional bytes	wei_dan_bao_id				= 4; //请求id
}


message follow_guarantee_invest_rank_info
{
	optional bytes	wei_dan_bao_id			= 1; //请求id
	optional int32  follow_dan_bao_count   	= 2; //跟保人数
	optional int32  follow_tou_zi_count   	= 3; //跟投人数
}


//跟保跟投人数排名占比得分
message follow_guarantee_invest_rank_ask
{
	optional common.common_ask_header      ask_header           = 1;  // 通用的公共请求字段(比如回复的主题)
	repeated bytes	                       wei_dan_bao_id		= 2 ; //请求id
}

message follow_guarantee_invest_rank_ans
{
	optional common.result_info                           result          = 1;   // 返回码
	repeated follow_guarantee_invest_rank_info			  info 		      = 2;
}


message borrower_evaluate_score_info
{
	optional bytes	wei_dan_bao_id			= 1; //请求id
	optional float borrower_score			= 2; //借款人评分
	optional int32 evaluate_total_num  		= 3; //评价总人数
}

//借款人评价得分
message borrower_evaluate_score_ask
{
	optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
	repeated bytes	wei_dan_bao_id					= 2 ; //请求id
}

message borrower_evaluate_score_ans
{
	optional common.result_info                           result              = 1;   // 返回码
	repeated borrower_evaluate_score_info			info 		= 2;
}


message diligence_pass_score_info
{
	optional bytes	wei_dan_bao_id					= 1; //请求id
	optional int32 passed_diligence_numbers			= 2; //审核通过的尽调报告数
	optional int32 commit_diligence_total_num 		= 3; //提交尽调报告总数
}

//尽调报告合格率得分
message diligence_pass_score_ask
{
	optional common.common_ask_header                   ask_header          = 1;  // 通用的公共请求字段(比如回复的主题)
	repeated bytes			    wei_dan_bao_id			= 2; 	//请求id
}

message diligence_pass_score_ans
{	
	optional common.result_info                           result              = 1;   // 返回码
	repeated diligence_pass_score_info 				info = 2;
}

///////////////////////////黑名单通讯录重合度查询接口/////////////////////

message blacklist_contacts_coincide_ask
{
    optional common.common_ask_header             ask_header           = 1;   //返回结果接收主题
    optional int32                                blacklist_type       = 2;   //黑名单类型，0为通讯录黑名单，1为设备黑名单
    optional float                                coincide_value       = 3;   //重合度大小定义，比如50%(0.5)作为判定标准
    optional common.user_basic_identification     user_info            = 4 ;  //用户信息,帐号名字或身份证或电话号码    
}

message blacklist_contacts_coincide_ans
{
    optional bool                                 is_black_friend      = 1;  //是否有黑名单通讯录重合度超过50%
    optional common.result_info                   result               = 2;  //结果信息
}


//批量查询基本信息  ------------
message batch_userinfo_ask
{
	optional common.common_ask_header                   ask_header      = 1;  // 通用的公共请求字段(比如回复的主题)
	repeated  bytes  user_id                                             = 2;  // 
}

message chatlog_userinfo
{
	optional bytes  real_name      = 1;// 真实姓名
	optional bytes  mobile_phone   = 2;// 手机号
	optional bytes  identity_card  = 3;//身份证
	optional bytes  nickname       = 4; // 好友昵称
	optional bytes  avatar         = 5; // 好友头像
	optional bytes  user_id        = 6; //

}
message batch_userinfo_ans
{
    repeated  chatlog_userinfo          info_list            =  1;  //需要查询的基本信息
	optional common.result_info         result               =  2;  //结果信息
}




