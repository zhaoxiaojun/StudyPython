// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ODP_user_portrayal.proto

#ifndef PROTOBUF_ODP_5fuser_5fportrayal_2eproto__INCLUDED
#define PROTOBUF_ODP_5fuser_5fportrayal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace ODP_user_portrayal {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

class location_info;
class version_info;
class device_login_info;
class device_info;
class history_info;
class statistics_common_info;
class danger_param_info;
class danger_analysis_info;
class user_action_ask;
class location_info_ans;
class user_version_info_ans;
class login_analysis_ans;
class business_predilection_ans;
class auth_info_ans;
class amount_info_ans;
class device_ans;
class bid_research_ans;
class bid_invest_ans;
class bid_guarantee_ans;
class bid_loan_ans;
class danger_analysis_ans;
class bid_history_ans;

enum action_ask_type {
  page_location = 1,
  page_user_version = 2,
  page_device = 3,
  page_login_analysis = 4,
  page_business_predilection = 5,
  page_auth_info = 6,
  page_user_amount = 7,
  page_bid_research = 8,
  page_bid_research_history = 9,
  page_bin_invest = 10,
  page_bid_invest_history = 11,
  page_bid_garantee = 12,
  page_bid_garantee_history = 13,
  page_bid_loan = 14,
  page_bid_loan_history = 15,
  page_danger_analysis = 16
};
bool action_ask_type_IsValid(int value);
const action_ask_type action_ask_type_MIN = page_location;
const action_ask_type action_ask_type_MAX = page_danger_analysis;
const int action_ask_type_ARRAYSIZE = action_ask_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* action_ask_type_descriptor();
inline const ::std::string& action_ask_type_Name(action_ask_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    action_ask_type_descriptor(), value);
}
inline bool action_ask_type_Parse(
    const ::std::string& name, action_ask_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<action_ask_type>(
    action_ask_type_descriptor(), name, value);
}
enum danger_analysis_type {
  page_business_blacklist = 1,
  page_third_platform_blacklist = 2,
  page_device_blacklist = 3,
  page_ip_change = 4,
  page_terminal_most_account_login = 5,
  page_chat_spite_words = 6,
  page_complain_user = 7,
  page_address_list = 8,
  page_linkman_not_true = 9,
  page_bin_overdue = 10,
  page_cheating = 11,
  page_location_changer = 12,
  page_ip_danger = 13
};
bool danger_analysis_type_IsValid(int value);
const danger_analysis_type danger_analysis_type_MIN = page_business_blacklist;
const danger_analysis_type danger_analysis_type_MAX = page_ip_danger;
const int danger_analysis_type_ARRAYSIZE = danger_analysis_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* danger_analysis_type_descriptor();
inline const ::std::string& danger_analysis_type_Name(danger_analysis_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    danger_analysis_type_descriptor(), value);
}
inline bool danger_analysis_type_Parse(
    const ::std::string& name, danger_analysis_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<danger_analysis_type>(
    danger_analysis_type_descriptor(), name, value);
}
// ===================================================================

class location_info : public ::google::protobuf::Message {
 public:
  location_info();
  virtual ~location_info();

  location_info(const location_info& from);

  inline location_info& operator=(const location_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const location_info& default_instance();

  void Swap(location_info* other);

  // implements Message ----------------------------------------------

  location_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const location_info& from);
  void MergeFrom(const location_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes location_desc = 1;
  inline bool has_location_desc() const;
  inline void clear_location_desc();
  static const int kLocationDescFieldNumber = 1;
  inline const ::std::string& location_desc() const;
  inline void set_location_desc(const ::std::string& value);
  inline void set_location_desc(const char* value);
  inline void set_location_desc(const void* value, size_t size);
  inline ::std::string* mutable_location_desc();
  inline ::std::string* release_location_desc();
  inline void set_allocated_location_desc(::std::string* location_desc);

  // optional int32 iscommon = 2;
  inline bool has_iscommon() const;
  inline void clear_iscommon();
  static const int kIscommonFieldNumber = 2;
  inline ::google::protobuf::int32 iscommon() const;
  inline void set_iscommon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.location_info)
 private:
  inline void set_has_location_desc();
  inline void clear_has_location_desc();
  inline void set_has_iscommon();
  inline void clear_has_iscommon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* location_desc_;
  ::google::protobuf::int32 iscommon_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static location_info* default_instance_;
};
// -------------------------------------------------------------------

class version_info : public ::google::protobuf::Message {
 public:
  version_info();
  virtual ~version_info();

  version_info(const version_info& from);

  inline version_info& operator=(const version_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const version_info& default_instance();

  void Swap(version_info* other);

  // implements Message ----------------------------------------------

  version_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const version_info& from);
  void MergeFrom(const version_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const void* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // optional bytes version_num = 2;
  inline bool has_version_num() const;
  inline void clear_version_num();
  static const int kVersionNumFieldNumber = 2;
  inline const ::std::string& version_num() const;
  inline void set_version_num(const ::std::string& value);
  inline void set_version_num(const char* value);
  inline void set_version_num(const void* value, size_t size);
  inline ::std::string* mutable_version_num();
  inline ::std::string* release_version_num();
  inline void set_allocated_version_num(::std::string* version_num);

  // optional bytes download = 3;
  inline bool has_download() const;
  inline void clear_download();
  static const int kDownloadFieldNumber = 3;
  inline const ::std::string& download() const;
  inline void set_download(const ::std::string& value);
  inline void set_download(const char* value);
  inline void set_download(const void* value, size_t size);
  inline ::std::string* mutable_download();
  inline ::std::string* release_download();
  inline void set_allocated_download(::std::string* download);

  // optional bytes download_time = 4;
  inline bool has_download_time() const;
  inline void clear_download_time();
  static const int kDownloadTimeFieldNumber = 4;
  inline const ::std::string& download_time() const;
  inline void set_download_time(const ::std::string& value);
  inline void set_download_time(const char* value);
  inline void set_download_time(const void* value, size_t size);
  inline ::std::string* mutable_download_time();
  inline ::std::string* release_download_time();
  inline void set_allocated_download_time(::std::string* download_time);

  // optional bytes last_use_time = 5;
  inline bool has_last_use_time() const;
  inline void clear_last_use_time();
  static const int kLastUseTimeFieldNumber = 5;
  inline const ::std::string& last_use_time() const;
  inline void set_last_use_time(const ::std::string& value);
  inline void set_last_use_time(const char* value);
  inline void set_last_use_time(const void* value, size_t size);
  inline ::std::string* mutable_last_use_time();
  inline ::std::string* release_last_use_time();
  inline void set_allocated_last_use_time(::std::string* last_use_time);

  // optional bytes last_version = 6;
  inline bool has_last_version() const;
  inline void clear_last_version();
  static const int kLastVersionFieldNumber = 6;
  inline const ::std::string& last_version() const;
  inline void set_last_version(const ::std::string& value);
  inline void set_last_version(const char* value);
  inline void set_last_version(const void* value, size_t size);
  inline ::std::string* mutable_last_version();
  inline ::std::string* release_last_version();
  inline void set_allocated_last_version(::std::string* last_version);

  // optional bytes last_version_num = 7;
  inline bool has_last_version_num() const;
  inline void clear_last_version_num();
  static const int kLastVersionNumFieldNumber = 7;
  inline const ::std::string& last_version_num() const;
  inline void set_last_version_num(const ::std::string& value);
  inline void set_last_version_num(const char* value);
  inline void set_last_version_num(const void* value, size_t size);
  inline ::std::string* mutable_last_version_num();
  inline ::std::string* release_last_version_num();
  inline void set_allocated_last_version_num(::std::string* last_version_num);

  // optional int32 isnow = 8;
  inline bool has_isnow() const;
  inline void clear_isnow();
  static const int kIsnowFieldNumber = 8;
  inline ::google::protobuf::int32 isnow() const;
  inline void set_isnow(::google::protobuf::int32 value);

  // optional int32 start_num = 9;
  inline bool has_start_num() const;
  inline void clear_start_num();
  static const int kStartNumFieldNumber = 9;
  inline ::google::protobuf::int32 start_num() const;
  inline void set_start_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.version_info)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_version_num();
  inline void clear_has_version_num();
  inline void set_has_download();
  inline void clear_has_download();
  inline void set_has_download_time();
  inline void clear_has_download_time();
  inline void set_has_last_use_time();
  inline void clear_has_last_use_time();
  inline void set_has_last_version();
  inline void clear_has_last_version();
  inline void set_has_last_version_num();
  inline void clear_has_last_version_num();
  inline void set_has_isnow();
  inline void clear_has_isnow();
  inline void set_has_start_num();
  inline void clear_has_start_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_;
  ::std::string* version_num_;
  ::std::string* download_;
  ::std::string* download_time_;
  ::std::string* last_use_time_;
  ::std::string* last_version_;
  ::std::string* last_version_num_;
  ::google::protobuf::int32 isnow_;
  ::google::protobuf::int32 start_num_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static version_info* default_instance_;
};
// -------------------------------------------------------------------

class device_login_info : public ::google::protobuf::Message {
 public:
  device_login_info();
  virtual ~device_login_info();

  device_login_info(const device_login_info& from);

  inline device_login_info& operator=(const device_login_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const device_login_info& default_instance();

  void Swap(device_login_info* other);

  // implements Message ----------------------------------------------

  device_login_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const device_login_info& from);
  void MergeFrom(const device_login_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes login_name = 1;
  inline bool has_login_name() const;
  inline void clear_login_name();
  static const int kLoginNameFieldNumber = 1;
  inline const ::std::string& login_name() const;
  inline void set_login_name(const ::std::string& value);
  inline void set_login_name(const char* value);
  inline void set_login_name(const void* value, size_t size);
  inline ::std::string* mutable_login_name();
  inline ::std::string* release_login_name();
  inline void set_allocated_login_name(::std::string* login_name);

  // optional int32 is_overdue = 2;
  inline bool has_is_overdue() const;
  inline void clear_is_overdue();
  static const int kIsOverdueFieldNumber = 2;
  inline ::google::protobuf::int32 is_overdue() const;
  inline void set_is_overdue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.device_login_info)
 private:
  inline void set_has_login_name();
  inline void clear_has_login_name();
  inline void set_has_is_overdue();
  inline void clear_has_is_overdue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* login_name_;
  ::google::protobuf::int32 is_overdue_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static device_login_info* default_instance_;
};
// -------------------------------------------------------------------

class device_info : public ::google::protobuf::Message {
 public:
  device_info();
  virtual ~device_info();

  device_info(const device_info& from);

  inline device_info& operator=(const device_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const device_info& default_instance();

  void Swap(device_info* other);

  // implements Message ----------------------------------------------

  device_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const device_info& from);
  void MergeFrom(const device_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes device_id = 1;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const void* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // optional bytes brand = 2;
  inline bool has_brand() const;
  inline void clear_brand();
  static const int kBrandFieldNumber = 2;
  inline const ::std::string& brand() const;
  inline void set_brand(const ::std::string& value);
  inline void set_brand(const char* value);
  inline void set_brand(const void* value, size_t size);
  inline ::std::string* mutable_brand();
  inline ::std::string* release_brand();
  inline void set_allocated_brand(::std::string* brand);

  // optional bytes model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const void* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // optional int32 address_list_num = 4;
  inline bool has_address_list_num() const;
  inline void clear_address_list_num();
  static const int kAddressListNumFieldNumber = 4;
  inline ::google::protobuf::int32 address_list_num() const;
  inline void set_address_list_num(::google::protobuf::int32 value);

  // optional bytes first_time = 5;
  inline bool has_first_time() const;
  inline void clear_first_time();
  static const int kFirstTimeFieldNumber = 5;
  inline const ::std::string& first_time() const;
  inline void set_first_time(const ::std::string& value);
  inline void set_first_time(const char* value);
  inline void set_first_time(const void* value, size_t size);
  inline ::std::string* mutable_first_time();
  inline ::std::string* release_first_time();
  inline void set_allocated_first_time(::std::string* first_time);

  // optional bytes last_use_time = 6;
  inline bool has_last_use_time() const;
  inline void clear_last_use_time();
  static const int kLastUseTimeFieldNumber = 6;
  inline const ::std::string& last_use_time() const;
  inline void set_last_use_time(const ::std::string& value);
  inline void set_last_use_time(const char* value);
  inline void set_last_use_time(const void* value, size_t size);
  inline ::std::string* mutable_last_use_time();
  inline ::std::string* release_last_use_time();
  inline void set_allocated_last_use_time(::std::string* last_use_time);

  // optional int32 black_device = 7;
  inline bool has_black_device() const;
  inline void clear_black_device();
  static const int kBlackDeviceFieldNumber = 7;
  inline ::google::protobuf::int32 black_device() const;
  inline void set_black_device(::google::protobuf::int32 value);

  // optional bytes last_use_localtion = 8;
  inline bool has_last_use_localtion() const;
  inline void clear_last_use_localtion();
  static const int kLastUseLocaltionFieldNumber = 8;
  inline const ::std::string& last_use_localtion() const;
  inline void set_last_use_localtion(const ::std::string& value);
  inline void set_last_use_localtion(const char* value);
  inline void set_last_use_localtion(const void* value, size_t size);
  inline ::std::string* mutable_last_use_localtion();
  inline ::std::string* release_last_use_localtion();
  inline void set_allocated_last_use_localtion(::std::string* last_use_localtion);

  // optional int32 use_days = 9;
  inline bool has_use_days() const;
  inline void clear_use_days();
  static const int kUseDaysFieldNumber = 9;
  inline ::google::protobuf::int32 use_days() const;
  inline void set_use_days(::google::protobuf::int32 value);

  // optional int32 use_num = 10;
  inline bool has_use_num() const;
  inline void clear_use_num();
  static const int kUseNumFieldNumber = 10;
  inline ::google::protobuf::int32 use_num() const;
  inline void set_use_num(::google::protobuf::int32 value);

  // repeated .ODP_user_portrayal.device_login_info other_login_info = 11;
  inline int other_login_info_size() const;
  inline void clear_other_login_info();
  static const int kOtherLoginInfoFieldNumber = 11;
  inline const ::ODP_user_portrayal::device_login_info& other_login_info(int index) const;
  inline ::ODP_user_portrayal::device_login_info* mutable_other_login_info(int index);
  inline ::ODP_user_portrayal::device_login_info* add_other_login_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_login_info >&
      other_login_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_login_info >*
      mutable_other_login_info();

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.device_info)
 private:
  inline void set_has_device_id();
  inline void clear_has_device_id();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_address_list_num();
  inline void clear_has_address_list_num();
  inline void set_has_first_time();
  inline void clear_has_first_time();
  inline void set_has_last_use_time();
  inline void clear_has_last_use_time();
  inline void set_has_black_device();
  inline void clear_has_black_device();
  inline void set_has_last_use_localtion();
  inline void clear_has_last_use_localtion();
  inline void set_has_use_days();
  inline void clear_has_use_days();
  inline void set_has_use_num();
  inline void clear_has_use_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* device_id_;
  ::std::string* brand_;
  ::std::string* model_;
  ::std::string* first_time_;
  ::google::protobuf::int32 address_list_num_;
  ::google::protobuf::int32 black_device_;
  ::std::string* last_use_time_;
  ::std::string* last_use_localtion_;
  ::google::protobuf::int32 use_days_;
  ::google::protobuf::int32 use_num_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_login_info > other_login_info_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static device_info* default_instance_;
};
// -------------------------------------------------------------------

class history_info : public ::google::protobuf::Message {
 public:
  history_info();
  virtual ~history_info();

  history_info(const history_info& from);

  inline history_info& operator=(const history_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const history_info& default_instance();

  void Swap(history_info* other);

  // implements Message ----------------------------------------------

  history_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const history_info& from);
  void MergeFrom(const history_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes user_nick_name = 1;
  inline bool has_user_nick_name() const;
  inline void clear_user_nick_name();
  static const int kUserNickNameFieldNumber = 1;
  inline const ::std::string& user_nick_name() const;
  inline void set_user_nick_name(const ::std::string& value);
  inline void set_user_nick_name(const char* value);
  inline void set_user_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_user_nick_name();
  inline ::std::string* release_user_nick_name();
  inline void set_allocated_user_nick_name(::std::string* user_nick_name);

  // optional bytes head_portrait = 2;
  inline bool has_head_portrait() const;
  inline void clear_head_portrait();
  static const int kHeadPortraitFieldNumber = 2;
  inline const ::std::string& head_portrait() const;
  inline void set_head_portrait(const ::std::string& value);
  inline void set_head_portrait(const char* value);
  inline void set_head_portrait(const void* value, size_t size);
  inline ::std::string* mutable_head_portrait();
  inline ::std::string* release_head_portrait();
  inline void set_allocated_head_portrait(::std::string* head_portrait);

  // optional .common.sex sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::common::sex sex() const;
  inline void set_sex(::common::sex value);

  // optional bytes bid_title = 4;
  inline bool has_bid_title() const;
  inline void clear_bid_title();
  static const int kBidTitleFieldNumber = 4;
  inline const ::std::string& bid_title() const;
  inline void set_bid_title(const ::std::string& value);
  inline void set_bid_title(const char* value);
  inline void set_bid_title(const void* value, size_t size);
  inline ::std::string* mutable_bid_title();
  inline ::std::string* release_bid_title();
  inline void set_allocated_bid_title(::std::string* bid_title);

  // optional bytes createdate = 5;
  inline bool has_createdate() const;
  inline void clear_createdate();
  static const int kCreatedateFieldNumber = 5;
  inline const ::std::string& createdate() const;
  inline void set_createdate(const ::std::string& value);
  inline void set_createdate(const char* value);
  inline void set_createdate(const void* value, size_t size);
  inline ::std::string* mutable_createdate();
  inline ::std::string* release_createdate();
  inline void set_allocated_createdate(::std::string* createdate);

  // optional double borrow_amount = 6;
  inline bool has_borrow_amount() const;
  inline void clear_borrow_amount();
  static const int kBorrowAmountFieldNumber = 6;
  inline double borrow_amount() const;
  inline void set_borrow_amount(double value);

  // optional double guarantee_rates = 7;
  inline bool has_guarantee_rates() const;
  inline void clear_guarantee_rates();
  static const int kGuaranteeRatesFieldNumber = 7;
  inline double guarantee_rates() const;
  inline void set_guarantee_rates(double value);

  // optional double lendrates = 8;
  inline bool has_lendrates() const;
  inline void clear_lendrates();
  static const int kLendratesFieldNumber = 8;
  inline double lendrates() const;
  inline void set_lendrates(double value);

  // optional double borrowingmonth = 9;
  inline bool has_borrowingmonth() const;
  inline void clear_borrowingmonth();
  static const int kBorrowingmonthFieldNumber = 9;
  inline double borrowingmonth() const;
  inline void set_borrowingmonth(double value);

  // optional bytes jd_nick_name = 10;
  inline bool has_jd_nick_name() const;
  inline void clear_jd_nick_name();
  static const int kJdNickNameFieldNumber = 10;
  inline const ::std::string& jd_nick_name() const;
  inline void set_jd_nick_name(const ::std::string& value);
  inline void set_jd_nick_name(const char* value);
  inline void set_jd_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_jd_nick_name();
  inline ::std::string* release_jd_nick_name();
  inline void set_allocated_jd_nick_name(::std::string* jd_nick_name);

  // optional bytes jd_head_portrait = 11;
  inline bool has_jd_head_portrait() const;
  inline void clear_jd_head_portrait();
  static const int kJdHeadPortraitFieldNumber = 11;
  inline const ::std::string& jd_head_portrait() const;
  inline void set_jd_head_portrait(const ::std::string& value);
  inline void set_jd_head_portrait(const char* value);
  inline void set_jd_head_portrait(const void* value, size_t size);
  inline ::std::string* mutable_jd_head_portrait();
  inline ::std::string* release_jd_head_portrait();
  inline void set_allocated_jd_head_portrait(::std::string* jd_head_portrait);

  // optional int32 islocation = 12;
  inline bool has_islocation() const;
  inline void clear_islocation();
  static const int kIslocationFieldNumber = 12;
  inline ::google::protobuf::int32 islocation() const;
  inline void set_islocation(::google::protobuf::int32 value);

  // optional bytes bstatus = 13;
  inline bool has_bstatus() const;
  inline void clear_bstatus();
  static const int kBstatusFieldNumber = 13;
  inline const ::std::string& bstatus() const;
  inline void set_bstatus(const ::std::string& value);
  inline void set_bstatus(const char* value);
  inline void set_bstatus(const void* value, size_t size);
  inline ::std::string* mutable_bstatus();
  inline ::std::string* release_bstatus();
  inline void set_allocated_bstatus(::std::string* bstatus);

  // optional double amount = 14;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 14;
  inline double amount() const;
  inline void set_amount(double value);

  // optional bytes dateTime = 15;
  inline bool has_datetime() const;
  inline void clear_datetime();
  static const int kDateTimeFieldNumber = 15;
  inline const ::std::string& datetime() const;
  inline void set_datetime(const ::std::string& value);
  inline void set_datetime(const char* value);
  inline void set_datetime(const void* value, size_t size);
  inline ::std::string* mutable_datetime();
  inline ::std::string* release_datetime();
  inline void set_allocated_datetime(::std::string* datetime);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.history_info)
 private:
  inline void set_has_user_nick_name();
  inline void clear_has_user_nick_name();
  inline void set_has_head_portrait();
  inline void clear_has_head_portrait();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_bid_title();
  inline void clear_has_bid_title();
  inline void set_has_createdate();
  inline void clear_has_createdate();
  inline void set_has_borrow_amount();
  inline void clear_has_borrow_amount();
  inline void set_has_guarantee_rates();
  inline void clear_has_guarantee_rates();
  inline void set_has_lendrates();
  inline void clear_has_lendrates();
  inline void set_has_borrowingmonth();
  inline void clear_has_borrowingmonth();
  inline void set_has_jd_nick_name();
  inline void clear_has_jd_nick_name();
  inline void set_has_jd_head_portrait();
  inline void clear_has_jd_head_portrait();
  inline void set_has_islocation();
  inline void clear_has_islocation();
  inline void set_has_bstatus();
  inline void clear_has_bstatus();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_datetime();
  inline void clear_has_datetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_nick_name_;
  ::std::string* head_portrait_;
  ::std::string* bid_title_;
  ::std::string* createdate_;
  double borrow_amount_;
  double guarantee_rates_;
  int sex_;
  ::google::protobuf::int32 islocation_;
  double lendrates_;
  double borrowingmonth_;
  ::std::string* jd_nick_name_;
  ::std::string* jd_head_portrait_;
  ::std::string* bstatus_;
  double amount_;
  ::std::string* datetime_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static history_info* default_instance_;
};
// -------------------------------------------------------------------

class statistics_common_info : public ::google::protobuf::Message {
 public:
  statistics_common_info();
  virtual ~statistics_common_info();

  statistics_common_info(const statistics_common_info& from);

  inline statistics_common_info& operator=(const statistics_common_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const statistics_common_info& default_instance();

  void Swap(statistics_common_info* other);

  // implements Message ----------------------------------------------

  statistics_common_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const statistics_common_info& from);
  void MergeFrom(const statistics_common_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes horizontal_coordinate = 1;
  inline bool has_horizontal_coordinate() const;
  inline void clear_horizontal_coordinate();
  static const int kHorizontalCoordinateFieldNumber = 1;
  inline const ::std::string& horizontal_coordinate() const;
  inline void set_horizontal_coordinate(const ::std::string& value);
  inline void set_horizontal_coordinate(const char* value);
  inline void set_horizontal_coordinate(const void* value, size_t size);
  inline ::std::string* mutable_horizontal_coordinate();
  inline ::std::string* release_horizontal_coordinate();
  inline void set_allocated_horizontal_coordinate(::std::string* horizontal_coordinate);

  // optional int32 vertical_coordinate_num = 2;
  inline bool has_vertical_coordinate_num() const;
  inline void clear_vertical_coordinate_num();
  static const int kVerticalCoordinateNumFieldNumber = 2;
  inline ::google::protobuf::int32 vertical_coordinate_num() const;
  inline void set_vertical_coordinate_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.statistics_common_info)
 private:
  inline void set_has_horizontal_coordinate();
  inline void clear_has_horizontal_coordinate();
  inline void set_has_vertical_coordinate_num();
  inline void clear_has_vertical_coordinate_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* horizontal_coordinate_;
  ::google::protobuf::int32 vertical_coordinate_num_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static statistics_common_info* default_instance_;
};
// -------------------------------------------------------------------

class danger_param_info : public ::google::protobuf::Message {
 public:
  danger_param_info();
  virtual ~danger_param_info();

  danger_param_info(const danger_param_info& from);

  inline danger_param_info& operator=(const danger_param_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const danger_param_info& default_instance();

  void Swap(danger_param_info* other);

  // implements Message ----------------------------------------------

  danger_param_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const danger_param_info& from);
  void MergeFrom(const danger_param_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes param1 = 1;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 1;
  inline const ::std::string& param1() const;
  inline void set_param1(const ::std::string& value);
  inline void set_param1(const char* value);
  inline void set_param1(const void* value, size_t size);
  inline ::std::string* mutable_param1();
  inline ::std::string* release_param1();
  inline void set_allocated_param1(::std::string* param1);

  // optional bytes param2 = 2;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 2;
  inline const ::std::string& param2() const;
  inline void set_param2(const ::std::string& value);
  inline void set_param2(const char* value);
  inline void set_param2(const void* value, size_t size);
  inline ::std::string* mutable_param2();
  inline ::std::string* release_param2();
  inline void set_allocated_param2(::std::string* param2);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.danger_param_info)
 private:
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* param1_;
  ::std::string* param2_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static danger_param_info* default_instance_;
};
// -------------------------------------------------------------------

class danger_analysis_info : public ::google::protobuf::Message {
 public:
  danger_analysis_info();
  virtual ~danger_analysis_info();

  danger_analysis_info(const danger_analysis_info& from);

  inline danger_analysis_info& operator=(const danger_analysis_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const danger_analysis_info& default_instance();

  void Swap(danger_analysis_info* other);

  // implements Message ----------------------------------------------

  danger_analysis_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const danger_analysis_info& from);
  void MergeFrom(const danger_analysis_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ODP_user_portrayal.danger_analysis_type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ODP_user_portrayal::danger_analysis_type type() const;
  inline void set_type(::ODP_user_portrayal::danger_analysis_type value);

  // optional int32 isexist = 2;
  inline bool has_isexist() const;
  inline void clear_isexist();
  static const int kIsexistFieldNumber = 2;
  inline ::google::protobuf::int32 isexist() const;
  inline void set_isexist(::google::protobuf::int32 value);

  // repeated .ODP_user_portrayal.danger_param_info paramlist1 = 3;
  inline int paramlist1_size() const;
  inline void clear_paramlist1();
  static const int kParamlist1FieldNumber = 3;
  inline const ::ODP_user_portrayal::danger_param_info& paramlist1(int index) const;
  inline ::ODP_user_portrayal::danger_param_info* mutable_paramlist1(int index);
  inline ::ODP_user_portrayal::danger_param_info* add_paramlist1();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
      paramlist1() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
      mutable_paramlist1();

  // repeated .ODP_user_portrayal.danger_param_info paramlist2 = 4;
  inline int paramlist2_size() const;
  inline void clear_paramlist2();
  static const int kParamlist2FieldNumber = 4;
  inline const ::ODP_user_portrayal::danger_param_info& paramlist2(int index) const;
  inline ::ODP_user_portrayal::danger_param_info* mutable_paramlist2(int index);
  inline ::ODP_user_portrayal::danger_param_info* add_paramlist2();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
      paramlist2() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
      mutable_paramlist2();

  // repeated .ODP_user_portrayal.danger_param_info paramlist3 = 5;
  inline int paramlist3_size() const;
  inline void clear_paramlist3();
  static const int kParamlist3FieldNumber = 5;
  inline const ::ODP_user_portrayal::danger_param_info& paramlist3(int index) const;
  inline ::ODP_user_portrayal::danger_param_info* mutable_paramlist3(int index);
  inline ::ODP_user_portrayal::danger_param_info* add_paramlist3();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
      paramlist3() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
      mutable_paramlist3();

  // repeated .ODP_user_portrayal.danger_param_info paramlist4 = 6;
  inline int paramlist4_size() const;
  inline void clear_paramlist4();
  static const int kParamlist4FieldNumber = 6;
  inline const ::ODP_user_portrayal::danger_param_info& paramlist4(int index) const;
  inline ::ODP_user_portrayal::danger_param_info* mutable_paramlist4(int index);
  inline ::ODP_user_portrayal::danger_param_info* add_paramlist4();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
      paramlist4() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
      mutable_paramlist4();

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.danger_analysis_info)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isexist();
  inline void clear_has_isexist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 isexist_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info > paramlist1_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info > paramlist2_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info > paramlist3_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info > paramlist4_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static danger_analysis_info* default_instance_;
};
// -------------------------------------------------------------------

class user_action_ask : public ::google::protobuf::Message {
 public:
  user_action_ask();
  virtual ~user_action_ask();

  user_action_ask(const user_action_ask& from);

  inline user_action_ask& operator=(const user_action_ask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_action_ask& default_instance();

  void Swap(user_action_ask* other);

  // implements Message ----------------------------------------------

  user_action_ask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_action_ask& from);
  void MergeFrom(const user_action_ask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ODP_user_portrayal.action_ask_type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ODP_user_portrayal::action_ask_type type() const;
  inline void set_type(::ODP_user_portrayal::action_ask_type value);

  // optional bytes phone = 2;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 2;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const void* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional bytes idcard = 3;
  inline bool has_idcard() const;
  inline void clear_idcard();
  static const int kIdcardFieldNumber = 3;
  inline const ::std::string& idcard() const;
  inline void set_idcard(const ::std::string& value);
  inline void set_idcard(const char* value);
  inline void set_idcard(const void* value, size_t size);
  inline ::std::string* mutable_idcard();
  inline ::std::string* release_idcard();
  inline void set_allocated_idcard(::std::string* idcard);

  // optional int32 curpage = 4;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 4;
  inline ::google::protobuf::int32 curpage() const;
  inline void set_curpage(::google::protobuf::int32 value);

  // optional int32 pagenum = 5;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPagenumFieldNumber = 5;
  inline ::google::protobuf::int32 pagenum() const;
  inline void set_pagenum(::google::protobuf::int32 value);

  // optional .common.common_ask_header ask_header = 6;
  inline bool has_ask_header() const;
  inline void clear_ask_header();
  static const int kAskHeaderFieldNumber = 6;
  inline const ::common::common_ask_header& ask_header() const;
  inline ::common::common_ask_header* mutable_ask_header();
  inline ::common::common_ask_header* release_ask_header();
  inline void set_allocated_ask_header(::common::common_ask_header* ask_header);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.user_action_ask)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_idcard();
  inline void clear_has_idcard();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_pagenum();
  inline void clear_has_pagenum();
  inline void set_has_ask_header();
  inline void clear_has_ask_header();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* phone_;
  int type_;
  ::google::protobuf::int32 curpage_;
  ::std::string* idcard_;
  ::common::common_ask_header* ask_header_;
  ::google::protobuf::int32 pagenum_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static user_action_ask* default_instance_;
};
// -------------------------------------------------------------------

class location_info_ans : public ::google::protobuf::Message {
 public:
  location_info_ans();
  virtual ~location_info_ans();

  location_info_ans(const location_info_ans& from);

  inline location_info_ans& operator=(const location_info_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const location_info_ans& default_instance();

  void Swap(location_info_ans* other);

  // implements Message ----------------------------------------------

  location_info_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const location_info_ans& from);
  void MergeFrom(const location_info_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ODP_user_portrayal.location_info location_list = 1;
  inline int location_list_size() const;
  inline void clear_location_list();
  static const int kLocationListFieldNumber = 1;
  inline const ::ODP_user_portrayal::location_info& location_list(int index) const;
  inline ::ODP_user_portrayal::location_info* mutable_location_list(int index);
  inline ::ODP_user_portrayal::location_info* add_location_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::location_info >&
      location_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::location_info >*
      mutable_location_list();

  // optional .common.result_info result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.location_info_ans)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::location_info > location_list_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static location_info_ans* default_instance_;
};
// -------------------------------------------------------------------

class user_version_info_ans : public ::google::protobuf::Message {
 public:
  user_version_info_ans();
  virtual ~user_version_info_ans();

  user_version_info_ans(const user_version_info_ans& from);

  inline user_version_info_ans& operator=(const user_version_info_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_version_info_ans& default_instance();

  void Swap(user_version_info_ans* other);

  // implements Message ----------------------------------------------

  user_version_info_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_version_info_ans& from);
  void MergeFrom(const user_version_info_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ODP_user_portrayal.version_info version_list = 1;
  inline int version_list_size() const;
  inline void clear_version_list();
  static const int kVersionListFieldNumber = 1;
  inline const ::ODP_user_portrayal::version_info& version_list(int index) const;
  inline ::ODP_user_portrayal::version_info* mutable_version_list(int index);
  inline ::ODP_user_portrayal::version_info* add_version_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::version_info >&
      version_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::version_info >*
      mutable_version_list();

  // optional .common.result_info result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.user_version_info_ans)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::version_info > version_list_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static user_version_info_ans* default_instance_;
};
// -------------------------------------------------------------------

class login_analysis_ans : public ::google::protobuf::Message {
 public:
  login_analysis_ans();
  virtual ~login_analysis_ans();

  login_analysis_ans(const login_analysis_ans& from);

  inline login_analysis_ans& operator=(const login_analysis_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const login_analysis_ans& default_instance();

  void Swap(login_analysis_ans* other);

  // implements Message ----------------------------------------------

  login_analysis_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_analysis_ans& from);
  void MergeFrom(const login_analysis_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 login_num = 1;
  inline bool has_login_num() const;
  inline void clear_login_num();
  static const int kLoginNumFieldNumber = 1;
  inline ::google::protobuf::int32 login_num() const;
  inline void set_login_num(::google::protobuf::int32 value);

  // optional int32 login_days = 2;
  inline bool has_login_days() const;
  inline void clear_login_days();
  static const int kLoginDaysFieldNumber = 2;
  inline ::google::protobuf::int32 login_days() const;
  inline void set_login_days(::google::protobuf::int32 value);

  // optional float login_frequency = 3;
  inline bool has_login_frequency() const;
  inline void clear_login_frequency();
  static const int kLoginFrequencyFieldNumber = 3;
  inline float login_frequency() const;
  inline void set_login_frequency(float value);

  // optional bytes last_login_time = 4;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 4;
  inline const ::std::string& last_login_time() const;
  inline void set_last_login_time(const ::std::string& value);
  inline void set_last_login_time(const char* value);
  inline void set_last_login_time(const void* value, size_t size);
  inline ::std::string* mutable_last_login_time();
  inline ::std::string* release_last_login_time();
  inline void set_allocated_last_login_time(::std::string* last_login_time);

  // optional bytes first_login_time = 5;
  inline bool has_first_login_time() const;
  inline void clear_first_login_time();
  static const int kFirstLoginTimeFieldNumber = 5;
  inline const ::std::string& first_login_time() const;
  inline void set_first_login_time(const ::std::string& value);
  inline void set_first_login_time(const char* value);
  inline void set_first_login_time(const void* value, size_t size);
  inline ::std::string* mutable_first_login_time();
  inline ::std::string* release_first_login_time();
  inline void set_allocated_first_login_time(::std::string* first_login_time);

  // optional int32 silent_days = 6;
  inline bool has_silent_days() const;
  inline void clear_silent_days();
  static const int kSilentDaysFieldNumber = 6;
  inline ::google::protobuf::int32 silent_days() const;
  inline void set_silent_days(::google::protobuf::int32 value);

  // repeated bytes week_most_login = 7;
  inline int week_most_login_size() const;
  inline void clear_week_most_login();
  static const int kWeekMostLoginFieldNumber = 7;
  inline const ::std::string& week_most_login(int index) const;
  inline ::std::string* mutable_week_most_login(int index);
  inline void set_week_most_login(int index, const ::std::string& value);
  inline void set_week_most_login(int index, const char* value);
  inline void set_week_most_login(int index, const void* value, size_t size);
  inline ::std::string* add_week_most_login();
  inline void add_week_most_login(const ::std::string& value);
  inline void add_week_most_login(const char* value);
  inline void add_week_most_login(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& week_most_login() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_week_most_login();

  // repeated bytes day_most_action = 8;
  inline int day_most_action_size() const;
  inline void clear_day_most_action();
  static const int kDayMostActionFieldNumber = 8;
  inline const ::std::string& day_most_action(int index) const;
  inline ::std::string* mutable_day_most_action(int index);
  inline void set_day_most_action(int index, const ::std::string& value);
  inline void set_day_most_action(int index, const char* value);
  inline void set_day_most_action(int index, const void* value, size_t size);
  inline ::std::string* add_day_most_action();
  inline void add_day_most_action(const ::std::string& value);
  inline void add_day_most_action(const char* value);
  inline void add_day_most_action(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& day_most_action() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_day_most_action();

  // repeated .ODP_user_portrayal.statistics_common_info week_info = 9;
  inline int week_info_size() const;
  inline void clear_week_info();
  static const int kWeekInfoFieldNumber = 9;
  inline const ::ODP_user_portrayal::statistics_common_info& week_info(int index) const;
  inline ::ODP_user_portrayal::statistics_common_info* mutable_week_info(int index);
  inline ::ODP_user_portrayal::statistics_common_info* add_week_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >&
      week_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >*
      mutable_week_info();

  // repeated .ODP_user_portrayal.statistics_common_info day_info = 10;
  inline int day_info_size() const;
  inline void clear_day_info();
  static const int kDayInfoFieldNumber = 10;
  inline const ::ODP_user_portrayal::statistics_common_info& day_info(int index) const;
  inline ::ODP_user_portrayal::statistics_common_info* mutable_day_info(int index);
  inline ::ODP_user_portrayal::statistics_common_info* add_day_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >&
      day_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >*
      mutable_day_info();

  // optional .common.result_info result = 11;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 11;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.login_analysis_ans)
 private:
  inline void set_has_login_num();
  inline void clear_has_login_num();
  inline void set_has_login_days();
  inline void clear_has_login_days();
  inline void set_has_login_frequency();
  inline void clear_has_login_frequency();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_first_login_time();
  inline void clear_has_first_login_time();
  inline void set_has_silent_days();
  inline void clear_has_silent_days();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 login_num_;
  ::google::protobuf::int32 login_days_;
  ::std::string* last_login_time_;
  float login_frequency_;
  ::google::protobuf::int32 silent_days_;
  ::std::string* first_login_time_;
  ::google::protobuf::RepeatedPtrField< ::std::string> week_most_login_;
  ::google::protobuf::RepeatedPtrField< ::std::string> day_most_action_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info > week_info_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info > day_info_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static login_analysis_ans* default_instance_;
};
// -------------------------------------------------------------------

class business_predilection_ans : public ::google::protobuf::Message {
 public:
  business_predilection_ans();
  virtual ~business_predilection_ans();

  business_predilection_ans(const business_predilection_ans& from);

  inline business_predilection_ans& operator=(const business_predilection_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const business_predilection_ans& default_instance();

  void Swap(business_predilection_ans* other);

  // implements Message ----------------------------------------------

  business_predilection_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const business_predilection_ans& from);
  void MergeFrom(const business_predilection_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes invest_interval = 1;
  inline bool has_invest_interval() const;
  inline void clear_invest_interval();
  static const int kInvestIntervalFieldNumber = 1;
  inline const ::std::string& invest_interval() const;
  inline void set_invest_interval(const ::std::string& value);
  inline void set_invest_interval(const char* value);
  inline void set_invest_interval(const void* value, size_t size);
  inline ::std::string* mutable_invest_interval();
  inline ::std::string* release_invest_interval();
  inline void set_allocated_invest_interval(::std::string* invest_interval);

  // optional bytes invest_rate = 2;
  inline bool has_invest_rate() const;
  inline void clear_invest_rate();
  static const int kInvestRateFieldNumber = 2;
  inline const ::std::string& invest_rate() const;
  inline void set_invest_rate(const ::std::string& value);
  inline void set_invest_rate(const char* value);
  inline void set_invest_rate(const void* value, size_t size);
  inline ::std::string* mutable_invest_rate();
  inline ::std::string* release_invest_rate();
  inline void set_allocated_invest_rate(::std::string* invest_rate);

  // optional bytes time_type = 3;
  inline bool has_time_type() const;
  inline void clear_time_type();
  static const int kTimeTypeFieldNumber = 3;
  inline const ::std::string& time_type() const;
  inline void set_time_type(const ::std::string& value);
  inline void set_time_type(const char* value);
  inline void set_time_type(const void* value, size_t size);
  inline ::std::string* mutable_time_type();
  inline ::std::string* release_time_type();
  inline void set_allocated_time_type(::std::string* time_type);

  // optional bytes amount_interval = 4;
  inline bool has_amount_interval() const;
  inline void clear_amount_interval();
  static const int kAmountIntervalFieldNumber = 4;
  inline const ::std::string& amount_interval() const;
  inline void set_amount_interval(const ::std::string& value);
  inline void set_amount_interval(const char* value);
  inline void set_amount_interval(const void* value, size_t size);
  inline ::std::string* mutable_amount_interval();
  inline ::std::string* release_amount_interval();
  inline void set_allocated_amount_interval(::std::string* amount_interval);

  // optional bytes garantee_interval = 5;
  inline bool has_garantee_interval() const;
  inline void clear_garantee_interval();
  static const int kGaranteeIntervalFieldNumber = 5;
  inline const ::std::string& garantee_interval() const;
  inline void set_garantee_interval(const ::std::string& value);
  inline void set_garantee_interval(const char* value);
  inline void set_garantee_interval(const void* value, size_t size);
  inline ::std::string* mutable_garantee_interval();
  inline ::std::string* release_garantee_interval();
  inline void set_allocated_garantee_interval(::std::string* garantee_interval);

  // optional bytes garantee_rate = 6;
  inline bool has_garantee_rate() const;
  inline void clear_garantee_rate();
  static const int kGaranteeRateFieldNumber = 6;
  inline const ::std::string& garantee_rate() const;
  inline void set_garantee_rate(const ::std::string& value);
  inline void set_garantee_rate(const char* value);
  inline void set_garantee_rate(const void* value, size_t size);
  inline ::std::string* mutable_garantee_rate();
  inline ::std::string* release_garantee_rate();
  inline void set_allocated_garantee_rate(::std::string* garantee_rate);

  // optional bytes garantee_time_type = 7;
  inline bool has_garantee_time_type() const;
  inline void clear_garantee_time_type();
  static const int kGaranteeTimeTypeFieldNumber = 7;
  inline const ::std::string& garantee_time_type() const;
  inline void set_garantee_time_type(const ::std::string& value);
  inline void set_garantee_time_type(const char* value);
  inline void set_garantee_time_type(const void* value, size_t size);
  inline ::std::string* mutable_garantee_time_type();
  inline ::std::string* release_garantee_time_type();
  inline void set_allocated_garantee_time_type(::std::string* garantee_time_type);

  // optional bytes garantee_amount_interval = 8;
  inline bool has_garantee_amount_interval() const;
  inline void clear_garantee_amount_interval();
  static const int kGaranteeAmountIntervalFieldNumber = 8;
  inline const ::std::string& garantee_amount_interval() const;
  inline void set_garantee_amount_interval(const ::std::string& value);
  inline void set_garantee_amount_interval(const char* value);
  inline void set_garantee_amount_interval(const void* value, size_t size);
  inline ::std::string* mutable_garantee_amount_interval();
  inline ::std::string* release_garantee_amount_interval();
  inline void set_allocated_garantee_amount_interval(::std::string* garantee_amount_interval);

  // optional bytes jd_interval = 9;
  inline bool has_jd_interval() const;
  inline void clear_jd_interval();
  static const int kJdIntervalFieldNumber = 9;
  inline const ::std::string& jd_interval() const;
  inline void set_jd_interval(const ::std::string& value);
  inline void set_jd_interval(const char* value);
  inline void set_jd_interval(const void* value, size_t size);
  inline ::std::string* mutable_jd_interval();
  inline ::std::string* release_jd_interval();
  inline void set_allocated_jd_interval(::std::string* jd_interval);

  // optional bytes jd_rate = 10;
  inline bool has_jd_rate() const;
  inline void clear_jd_rate();
  static const int kJdRateFieldNumber = 10;
  inline const ::std::string& jd_rate() const;
  inline void set_jd_rate(const ::std::string& value);
  inline void set_jd_rate(const char* value);
  inline void set_jd_rate(const void* value, size_t size);
  inline ::std::string* mutable_jd_rate();
  inline ::std::string* release_jd_rate();
  inline void set_allocated_jd_rate(::std::string* jd_rate);

  // optional bytes jd_time_type = 11;
  inline bool has_jd_time_type() const;
  inline void clear_jd_time_type();
  static const int kJdTimeTypeFieldNumber = 11;
  inline const ::std::string& jd_time_type() const;
  inline void set_jd_time_type(const ::std::string& value);
  inline void set_jd_time_type(const char* value);
  inline void set_jd_time_type(const void* value, size_t size);
  inline ::std::string* mutable_jd_time_type();
  inline ::std::string* release_jd_time_type();
  inline void set_allocated_jd_time_type(::std::string* jd_time_type);

  // optional bytes jd_amount_interval = 12;
  inline bool has_jd_amount_interval() const;
  inline void clear_jd_amount_interval();
  static const int kJdAmountIntervalFieldNumber = 12;
  inline const ::std::string& jd_amount_interval() const;
  inline void set_jd_amount_interval(const ::std::string& value);
  inline void set_jd_amount_interval(const char* value);
  inline void set_jd_amount_interval(const void* value, size_t size);
  inline ::std::string* mutable_jd_amount_interval();
  inline ::std::string* release_jd_amount_interval();
  inline void set_allocated_jd_amount_interval(::std::string* jd_amount_interval);

  // optional bytes loan_interval = 13;
  inline bool has_loan_interval() const;
  inline void clear_loan_interval();
  static const int kLoanIntervalFieldNumber = 13;
  inline const ::std::string& loan_interval() const;
  inline void set_loan_interval(const ::std::string& value);
  inline void set_loan_interval(const char* value);
  inline void set_loan_interval(const void* value, size_t size);
  inline ::std::string* mutable_loan_interval();
  inline ::std::string* release_loan_interval();
  inline void set_allocated_loan_interval(::std::string* loan_interval);

  // optional bytes loan_rate = 14;
  inline bool has_loan_rate() const;
  inline void clear_loan_rate();
  static const int kLoanRateFieldNumber = 14;
  inline const ::std::string& loan_rate() const;
  inline void set_loan_rate(const ::std::string& value);
  inline void set_loan_rate(const char* value);
  inline void set_loan_rate(const void* value, size_t size);
  inline ::std::string* mutable_loan_rate();
  inline ::std::string* release_loan_rate();
  inline void set_allocated_loan_rate(::std::string* loan_rate);

  // optional bytes loan_time_type = 15;
  inline bool has_loan_time_type() const;
  inline void clear_loan_time_type();
  static const int kLoanTimeTypeFieldNumber = 15;
  inline const ::std::string& loan_time_type() const;
  inline void set_loan_time_type(const ::std::string& value);
  inline void set_loan_time_type(const char* value);
  inline void set_loan_time_type(const void* value, size_t size);
  inline ::std::string* mutable_loan_time_type();
  inline ::std::string* release_loan_time_type();
  inline void set_allocated_loan_time_type(::std::string* loan_time_type);

  // optional bytes loan_amount_interval = 16;
  inline bool has_loan_amount_interval() const;
  inline void clear_loan_amount_interval();
  static const int kLoanAmountIntervalFieldNumber = 16;
  inline const ::std::string& loan_amount_interval() const;
  inline void set_loan_amount_interval(const ::std::string& value);
  inline void set_loan_amount_interval(const char* value);
  inline void set_loan_amount_interval(const void* value, size_t size);
  inline ::std::string* mutable_loan_amount_interval();
  inline ::std::string* release_loan_amount_interval();
  inline void set_allocated_loan_amount_interval(::std::string* loan_amount_interval);

  // optional .common.result_info result = 17;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 17;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.business_predilection_ans)
 private:
  inline void set_has_invest_interval();
  inline void clear_has_invest_interval();
  inline void set_has_invest_rate();
  inline void clear_has_invest_rate();
  inline void set_has_time_type();
  inline void clear_has_time_type();
  inline void set_has_amount_interval();
  inline void clear_has_amount_interval();
  inline void set_has_garantee_interval();
  inline void clear_has_garantee_interval();
  inline void set_has_garantee_rate();
  inline void clear_has_garantee_rate();
  inline void set_has_garantee_time_type();
  inline void clear_has_garantee_time_type();
  inline void set_has_garantee_amount_interval();
  inline void clear_has_garantee_amount_interval();
  inline void set_has_jd_interval();
  inline void clear_has_jd_interval();
  inline void set_has_jd_rate();
  inline void clear_has_jd_rate();
  inline void set_has_jd_time_type();
  inline void clear_has_jd_time_type();
  inline void set_has_jd_amount_interval();
  inline void clear_has_jd_amount_interval();
  inline void set_has_loan_interval();
  inline void clear_has_loan_interval();
  inline void set_has_loan_rate();
  inline void clear_has_loan_rate();
  inline void set_has_loan_time_type();
  inline void clear_has_loan_time_type();
  inline void set_has_loan_amount_interval();
  inline void clear_has_loan_amount_interval();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invest_interval_;
  ::std::string* invest_rate_;
  ::std::string* time_type_;
  ::std::string* amount_interval_;
  ::std::string* garantee_interval_;
  ::std::string* garantee_rate_;
  ::std::string* garantee_time_type_;
  ::std::string* garantee_amount_interval_;
  ::std::string* jd_interval_;
  ::std::string* jd_rate_;
  ::std::string* jd_time_type_;
  ::std::string* jd_amount_interval_;
  ::std::string* loan_interval_;
  ::std::string* loan_rate_;
  ::std::string* loan_time_type_;
  ::std::string* loan_amount_interval_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static business_predilection_ans* default_instance_;
};
// -------------------------------------------------------------------

class auth_info_ans : public ::google::protobuf::Message {
 public:
  auth_info_ans();
  virtual ~auth_info_ans();

  auth_info_ans(const auth_info_ans& from);

  inline auth_info_ans& operator=(const auth_info_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const auth_info_ans& default_instance();

  void Swap(auth_info_ans* other);

  // implements Message ----------------------------------------------

  auth_info_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const auth_info_ans& from);
  void MergeFrom(const auth_info_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 phone_auth = 1;
  inline bool has_phone_auth() const;
  inline void clear_phone_auth();
  static const int kPhoneAuthFieldNumber = 1;
  inline ::google::protobuf::int32 phone_auth() const;
  inline void set_phone_auth(::google::protobuf::int32 value);

  // optional int32 real_name_auth = 2;
  inline bool has_real_name_auth() const;
  inline void clear_real_name_auth();
  static const int kRealNameAuthFieldNumber = 2;
  inline ::google::protobuf::int32 real_name_auth() const;
  inline void set_real_name_auth(::google::protobuf::int32 value);

  // optional int32 loan_auth = 3;
  inline bool has_loan_auth() const;
  inline void clear_loan_auth();
  static const int kLoanAuthFieldNumber = 3;
  inline ::google::protobuf::int32 loan_auth() const;
  inline void set_loan_auth(::google::protobuf::int32 value);

  // optional int32 garantee_auth = 4;
  inline bool has_garantee_auth() const;
  inline void clear_garantee_auth();
  static const int kGaranteeAuthFieldNumber = 4;
  inline ::google::protobuf::int32 garantee_auth() const;
  inline void set_garantee_auth(::google::protobuf::int32 value);

  // optional int32 big_garantee = 5;
  inline bool has_big_garantee() const;
  inline void clear_big_garantee();
  static const int kBigGaranteeFieldNumber = 5;
  inline ::google::protobuf::int32 big_garantee() const;
  inline void set_big_garantee(::google::protobuf::int32 value);

  // optional int32 micro_garantee = 6;
  inline bool has_micro_garantee() const;
  inline void clear_micro_garantee();
  static const int kMicroGaranteeFieldNumber = 6;
  inline ::google::protobuf::int32 micro_garantee() const;
  inline void set_micro_garantee(::google::protobuf::int32 value);

  // optional .common.result_info result = 7;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 7;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.auth_info_ans)
 private:
  inline void set_has_phone_auth();
  inline void clear_has_phone_auth();
  inline void set_has_real_name_auth();
  inline void clear_has_real_name_auth();
  inline void set_has_loan_auth();
  inline void clear_has_loan_auth();
  inline void set_has_garantee_auth();
  inline void clear_has_garantee_auth();
  inline void set_has_big_garantee();
  inline void clear_has_big_garantee();
  inline void set_has_micro_garantee();
  inline void clear_has_micro_garantee();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 phone_auth_;
  ::google::protobuf::int32 real_name_auth_;
  ::google::protobuf::int32 loan_auth_;
  ::google::protobuf::int32 garantee_auth_;
  ::google::protobuf::int32 big_garantee_;
  ::google::protobuf::int32 micro_garantee_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static auth_info_ans* default_instance_;
};
// -------------------------------------------------------------------

class amount_info_ans : public ::google::protobuf::Message {
 public:
  amount_info_ans();
  virtual ~amount_info_ans();

  amount_info_ans(const amount_info_ans& from);

  inline amount_info_ans& operator=(const amount_info_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const amount_info_ans& default_instance();

  void Swap(amount_info_ans* other);

  // implements Message ----------------------------------------------

  amount_info_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const amount_info_ans& from);
  void MergeFrom(const amount_info_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double loan_amount = 1;
  inline bool has_loan_amount() const;
  inline void clear_loan_amount();
  static const int kLoanAmountFieldNumber = 1;
  inline double loan_amount() const;
  inline void set_loan_amount(double value);

  // optional double loan_manual_amount = 2;
  inline bool has_loan_manual_amount() const;
  inline void clear_loan_manual_amount();
  static const int kLoanManualAmountFieldNumber = 2;
  inline double loan_manual_amount() const;
  inline void set_loan_manual_amount(double value);

  // optional double loan_award_amount = 3;
  inline bool has_loan_award_amount() const;
  inline void clear_loan_award_amount();
  static const int kLoanAwardAmountFieldNumber = 3;
  inline double loan_award_amount() const;
  inline void set_loan_award_amount(double value);

  // optional double loan_unite_amount = 4;
  inline bool has_loan_unite_amount() const;
  inline void clear_loan_unite_amount();
  static const int kLoanUniteAmountFieldNumber = 4;
  inline double loan_unite_amount() const;
  inline void set_loan_unite_amount(double value);

  // optional double garantee_amount = 5;
  inline bool has_garantee_amount() const;
  inline void clear_garantee_amount();
  static const int kGaranteeAmountFieldNumber = 5;
  inline double garantee_amount() const;
  inline void set_garantee_amount(double value);

  // optional double garantee_manual_amount = 6;
  inline bool has_garantee_manual_amount() const;
  inline void clear_garantee_manual_amount();
  static const int kGaranteeManualAmountFieldNumber = 6;
  inline double garantee_manual_amount() const;
  inline void set_garantee_manual_amount(double value);

  // optional double garantee_award_amount = 7;
  inline bool has_garantee_award_amount() const;
  inline void clear_garantee_award_amount();
  static const int kGaranteeAwardAmountFieldNumber = 7;
  inline double garantee_award_amount() const;
  inline void set_garantee_award_amount(double value);

  // optional double garantee_unite_amount = 8;
  inline bool has_garantee_unite_amount() const;
  inline void clear_garantee_unite_amount();
  static const int kGaranteeUniteAmountFieldNumber = 8;
  inline double garantee_unite_amount() const;
  inline void set_garantee_unite_amount(double value);

  // optional .common.result_info result = 9;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 9;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.amount_info_ans)
 private:
  inline void set_has_loan_amount();
  inline void clear_has_loan_amount();
  inline void set_has_loan_manual_amount();
  inline void clear_has_loan_manual_amount();
  inline void set_has_loan_award_amount();
  inline void clear_has_loan_award_amount();
  inline void set_has_loan_unite_amount();
  inline void clear_has_loan_unite_amount();
  inline void set_has_garantee_amount();
  inline void clear_has_garantee_amount();
  inline void set_has_garantee_manual_amount();
  inline void clear_has_garantee_manual_amount();
  inline void set_has_garantee_award_amount();
  inline void clear_has_garantee_award_amount();
  inline void set_has_garantee_unite_amount();
  inline void clear_has_garantee_unite_amount();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double loan_amount_;
  double loan_manual_amount_;
  double loan_award_amount_;
  double loan_unite_amount_;
  double garantee_amount_;
  double garantee_manual_amount_;
  double garantee_award_amount_;
  double garantee_unite_amount_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static amount_info_ans* default_instance_;
};
// -------------------------------------------------------------------

class device_ans : public ::google::protobuf::Message {
 public:
  device_ans();
  virtual ~device_ans();

  device_ans(const device_ans& from);

  inline device_ans& operator=(const device_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const device_ans& default_instance();

  void Swap(device_ans* other);

  // implements Message ----------------------------------------------

  device_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const device_ans& from);
  void MergeFrom(const device_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ODP_user_portrayal.device_info device_list = 1;
  inline int device_list_size() const;
  inline void clear_device_list();
  static const int kDeviceListFieldNumber = 1;
  inline const ::ODP_user_portrayal::device_info& device_list(int index) const;
  inline ::ODP_user_portrayal::device_info* mutable_device_list(int index);
  inline ::ODP_user_portrayal::device_info* add_device_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_info >&
      device_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_info >*
      mutable_device_list();

  // optional .common.result_info result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.device_ans)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_info > device_list_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static device_ans* default_instance_;
};
// -------------------------------------------------------------------

class bid_research_ans : public ::google::protobuf::Message {
 public:
  bid_research_ans();
  virtual ~bid_research_ans();

  bid_research_ans(const bid_research_ans& from);

  inline bid_research_ans& operator=(const bid_research_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bid_research_ans& default_instance();

  void Swap(bid_research_ans* other);

  // implements Message ----------------------------------------------

  bid_research_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bid_research_ans& from);
  void MergeFrom(const bid_research_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes identity = 1;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 1;
  inline const ::std::string& identity() const;
  inline void set_identity(const ::std::string& value);
  inline void set_identity(const char* value);
  inline void set_identity(const void* value, size_t size);
  inline ::std::string* mutable_identity();
  inline ::std::string* release_identity();
  inline void set_allocated_identity(::std::string* identity);

  // optional int32 total_num = 2;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 2;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 success_num = 3;
  inline bool has_success_num() const;
  inline void clear_success_num();
  static const int kSuccessNumFieldNumber = 3;
  inline ::google::protobuf::int32 success_num() const;
  inline void set_success_num(::google::protobuf::int32 value);

  // optional int32 fail_num = 4;
  inline bool has_fail_num() const;
  inline void clear_fail_num();
  static const int kFailNumFieldNumber = 4;
  inline ::google::protobuf::int32 fail_num() const;
  inline void set_fail_num(::google::protobuf::int32 value);

  // optional int32 bid_overdue_num = 5;
  inline bool has_bid_overdue_num() const;
  inline void clear_bid_overdue_num();
  static const int kBidOverdueNumFieldNumber = 5;
  inline ::google::protobuf::int32 bid_overdue_num() const;
  inline void set_bid_overdue_num(::google::protobuf::int32 value);

  // optional int32 bid_bad_debt = 6;
  inline bool has_bid_bad_debt() const;
  inline void clear_bid_bad_debt();
  static const int kBidBadDebtFieldNumber = 6;
  inline ::google::protobuf::int32 bid_bad_debt() const;
  inline void set_bid_bad_debt(::google::protobuf::int32 value);

  // optional int32 advance_overdue = 7;
  inline bool has_advance_overdue() const;
  inline void clear_advance_overdue();
  static const int kAdvanceOverdueFieldNumber = 7;
  inline ::google::protobuf::int32 advance_overdue() const;
  inline void set_advance_overdue(::google::protobuf::int32 value);

  // optional double travelfee = 8;
  inline bool has_travelfee() const;
  inline void clear_travelfee();
  static const int kTravelfeeFieldNumber = 8;
  inline double travelfee() const;
  inline void set_travelfee(double value);

  // optional .common.result_info result = 9;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 9;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.bid_research_ans)
 private:
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_success_num();
  inline void clear_has_success_num();
  inline void set_has_fail_num();
  inline void clear_has_fail_num();
  inline void set_has_bid_overdue_num();
  inline void clear_has_bid_overdue_num();
  inline void set_has_bid_bad_debt();
  inline void clear_has_bid_bad_debt();
  inline void set_has_advance_overdue();
  inline void clear_has_advance_overdue();
  inline void set_has_travelfee();
  inline void clear_has_travelfee();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* identity_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 success_num_;
  ::google::protobuf::int32 fail_num_;
  ::google::protobuf::int32 bid_overdue_num_;
  ::google::protobuf::int32 bid_bad_debt_;
  ::google::protobuf::int32 advance_overdue_;
  double travelfee_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static bid_research_ans* default_instance_;
};
// -------------------------------------------------------------------

class bid_invest_ans : public ::google::protobuf::Message {
 public:
  bid_invest_ans();
  virtual ~bid_invest_ans();

  bid_invest_ans(const bid_invest_ans& from);

  inline bid_invest_ans& operator=(const bid_invest_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bid_invest_ans& default_instance();

  void Swap(bid_invest_ans* other);

  // implements Message ----------------------------------------------

  bid_invest_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bid_invest_ans& from);
  void MergeFrom(const bid_invest_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional double totalamount = 2;
  inline bool has_totalamount() const;
  inline void clear_totalamount();
  static const int kTotalamountFieldNumber = 2;
  inline double totalamount() const;
  inline void set_totalamount(double value);

  // optional double investmentprofit = 3;
  inline bool has_investmentprofit() const;
  inline void clear_investmentprofit();
  static const int kInvestmentprofitFieldNumber = 3;
  inline double investmentprofit() const;
  inline void set_investmentprofit(double value);

  // optional double receive_amount = 4;
  inline bool has_receive_amount() const;
  inline void clear_receive_amount();
  static const int kReceiveAmountFieldNumber = 4;
  inline double receive_amount() const;
  inline void set_receive_amount(double value);

  // optional double lateamount = 5;
  inline bool has_lateamount() const;
  inline void clear_lateamount();
  static const int kLateamountFieldNumber = 5;
  inline double lateamount() const;
  inline void set_lateamount(double value);

  // optional .common.result_info result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.bid_invest_ans)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_totalamount();
  inline void clear_has_totalamount();
  inline void set_has_investmentprofit();
  inline void clear_has_investmentprofit();
  inline void set_has_receive_amount();
  inline void clear_has_receive_amount();
  inline void set_has_lateamount();
  inline void clear_has_lateamount();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double totalamount_;
  double investmentprofit_;
  double receive_amount_;
  double lateamount_;
  ::common::result_info* result_;
  ::google::protobuf::int32 total_num_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static bid_invest_ans* default_instance_;
};
// -------------------------------------------------------------------

class bid_guarantee_ans : public ::google::protobuf::Message {
 public:
  bid_guarantee_ans();
  virtual ~bid_guarantee_ans();

  bid_guarantee_ans(const bid_guarantee_ans& from);

  inline bid_guarantee_ans& operator=(const bid_guarantee_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bid_guarantee_ans& default_instance();

  void Swap(bid_guarantee_ans* other);

  // implements Message ----------------------------------------------

  bid_guarantee_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bid_guarantee_ans& from);
  void MergeFrom(const bid_guarantee_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 overdue_num = 2;
  inline bool has_overdue_num() const;
  inline void clear_overdue_num();
  static const int kOverdueNumFieldNumber = 2;
  inline ::google::protobuf::int32 overdue_num() const;
  inline void set_overdue_num(::google::protobuf::int32 value);

  // optional int32 bad_debt_num = 3;
  inline bool has_bad_debt_num() const;
  inline void clear_bad_debt_num();
  static const int kBadDebtNumFieldNumber = 3;
  inline ::google::protobuf::int32 bad_debt_num() const;
  inline void set_bad_debt_num(::google::protobuf::int32 value);

  // optional double totalamount = 4;
  inline bool has_totalamount() const;
  inline void clear_totalamount();
  static const int kTotalamountFieldNumber = 4;
  inline double totalamount() const;
  inline void set_totalamount(double value);

  // optional double investmentprofit = 5;
  inline bool has_investmentprofit() const;
  inline void clear_investmentprofit();
  static const int kInvestmentprofitFieldNumber = 5;
  inline double investmentprofit() const;
  inline void set_investmentprofit(double value);

  // optional double advance_amount = 6;
  inline bool has_advance_amount() const;
  inline void clear_advance_amount();
  static const int kAdvanceAmountFieldNumber = 6;
  inline double advance_amount() const;
  inline void set_advance_amount(double value);

  // optional double not_advence = 7;
  inline bool has_not_advence() const;
  inline void clear_not_advence();
  static const int kNotAdvenceFieldNumber = 7;
  inline double not_advence() const;
  inline void set_not_advence(double value);

  // optional double receive_amount = 8;
  inline bool has_receive_amount() const;
  inline void clear_receive_amount();
  static const int kReceiveAmountFieldNumber = 8;
  inline double receive_amount() const;
  inline void set_receive_amount(double value);

  // optional double lateamount = 9;
  inline bool has_lateamount() const;
  inline void clear_lateamount();
  static const int kLateamountFieldNumber = 9;
  inline double lateamount() const;
  inline void set_lateamount(double value);

  // optional .common.result_info result = 10;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 10;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.bid_guarantee_ans)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_overdue_num();
  inline void clear_has_overdue_num();
  inline void set_has_bad_debt_num();
  inline void clear_has_bad_debt_num();
  inline void set_has_totalamount();
  inline void clear_has_totalamount();
  inline void set_has_investmentprofit();
  inline void clear_has_investmentprofit();
  inline void set_has_advance_amount();
  inline void clear_has_advance_amount();
  inline void set_has_not_advence();
  inline void clear_has_not_advence();
  inline void set_has_receive_amount();
  inline void clear_has_receive_amount();
  inline void set_has_lateamount();
  inline void clear_has_lateamount();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 overdue_num_;
  double totalamount_;
  double investmentprofit_;
  double advance_amount_;
  double not_advence_;
  double receive_amount_;
  double lateamount_;
  ::common::result_info* result_;
  ::google::protobuf::int32 bad_debt_num_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static bid_guarantee_ans* default_instance_;
};
// -------------------------------------------------------------------

class bid_loan_ans : public ::google::protobuf::Message {
 public:
  bid_loan_ans();
  virtual ~bid_loan_ans();

  bid_loan_ans(const bid_loan_ans& from);

  inline bid_loan_ans& operator=(const bid_loan_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bid_loan_ans& default_instance();

  void Swap(bid_loan_ans* other);

  // implements Message ----------------------------------------------

  bid_loan_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bid_loan_ans& from);
  void MergeFrom(const bid_loan_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_num = 1;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 success_num = 2;
  inline bool has_success_num() const;
  inline void clear_success_num();
  static const int kSuccessNumFieldNumber = 2;
  inline ::google::protobuf::int32 success_num() const;
  inline void set_success_num(::google::protobuf::int32 value);

  // optional int32 payment_success = 3;
  inline bool has_payment_success() const;
  inline void clear_payment_success();
  static const int kPaymentSuccessFieldNumber = 3;
  inline ::google::protobuf::int32 payment_success() const;
  inline void set_payment_success(::google::protobuf::int32 value);

  // optional double totalamount = 4;
  inline bool has_totalamount() const;
  inline void clear_totalamount();
  static const int kTotalamountFieldNumber = 4;
  inline double totalamount() const;
  inline void set_totalamount(double value);

  // optional double lateamount = 5;
  inline bool has_lateamount() const;
  inline void clear_lateamount();
  static const int kLateamountFieldNumber = 5;
  inline double lateamount() const;
  inline void set_lateamount(double value);

  // optional double overdue_amount = 6;
  inline bool has_overdue_amount() const;
  inline void clear_overdue_amount();
  static const int kOverdueAmountFieldNumber = 6;
  inline double overdue_amount() const;
  inline void set_overdue_amount(double value);

  // optional int32 overdue_num = 7;
  inline bool has_overdue_num() const;
  inline void clear_overdue_num();
  static const int kOverdueNumFieldNumber = 7;
  inline ::google::protobuf::int32 overdue_num() const;
  inline void set_overdue_num(::google::protobuf::int32 value);

  // optional int32 grave_overdue_num = 8;
  inline bool has_grave_overdue_num() const;
  inline void clear_grave_overdue_num();
  static const int kGraveOverdueNumFieldNumber = 8;
  inline ::google::protobuf::int32 grave_overdue_num() const;
  inline void set_grave_overdue_num(::google::protobuf::int32 value);

  // optional int32 max_overdue_days = 9;
  inline bool has_max_overdue_days() const;
  inline void clear_max_overdue_days();
  static const int kMaxOverdueDaysFieldNumber = 9;
  inline ::google::protobuf::int32 max_overdue_days() const;
  inline void set_max_overdue_days(::google::protobuf::int32 value);

  // optional .common.result_info result = 10;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 10;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.bid_loan_ans)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_success_num();
  inline void clear_has_success_num();
  inline void set_has_payment_success();
  inline void clear_has_payment_success();
  inline void set_has_totalamount();
  inline void clear_has_totalamount();
  inline void set_has_lateamount();
  inline void clear_has_lateamount();
  inline void set_has_overdue_amount();
  inline void clear_has_overdue_amount();
  inline void set_has_overdue_num();
  inline void clear_has_overdue_num();
  inline void set_has_grave_overdue_num();
  inline void clear_has_grave_overdue_num();
  inline void set_has_max_overdue_days();
  inline void clear_has_max_overdue_days();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 success_num_;
  double totalamount_;
  double lateamount_;
  ::google::protobuf::int32 payment_success_;
  ::google::protobuf::int32 overdue_num_;
  double overdue_amount_;
  ::google::protobuf::int32 grave_overdue_num_;
  ::google::protobuf::int32 max_overdue_days_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static bid_loan_ans* default_instance_;
};
// -------------------------------------------------------------------

class danger_analysis_ans : public ::google::protobuf::Message {
 public:
  danger_analysis_ans();
  virtual ~danger_analysis_ans();

  danger_analysis_ans(const danger_analysis_ans& from);

  inline danger_analysis_ans& operator=(const danger_analysis_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const danger_analysis_ans& default_instance();

  void Swap(danger_analysis_ans* other);

  // implements Message ----------------------------------------------

  danger_analysis_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const danger_analysis_ans& from);
  void MergeFrom(const danger_analysis_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ODP_user_portrayal.danger_analysis_info danger_list = 1;
  inline int danger_list_size() const;
  inline void clear_danger_list();
  static const int kDangerListFieldNumber = 1;
  inline const ::ODP_user_portrayal::danger_analysis_info& danger_list(int index) const;
  inline ::ODP_user_portrayal::danger_analysis_info* mutable_danger_list(int index);
  inline ::ODP_user_portrayal::danger_analysis_info* add_danger_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_analysis_info >&
      danger_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_analysis_info >*
      mutable_danger_list();

  // optional .common.result_info result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.danger_analysis_ans)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_analysis_info > danger_list_;
  ::common::result_info* result_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static danger_analysis_ans* default_instance_;
};
// -------------------------------------------------------------------

class bid_history_ans : public ::google::protobuf::Message {
 public:
  bid_history_ans();
  virtual ~bid_history_ans();

  bid_history_ans(const bid_history_ans& from);

  inline bid_history_ans& operator=(const bid_history_ans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bid_history_ans& default_instance();

  void Swap(bid_history_ans* other);

  // implements Message ----------------------------------------------

  bid_history_ans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bid_history_ans& from);
  void MergeFrom(const bid_history_ans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ODP_user_portrayal.history_info history_list = 1;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 1;
  inline const ::ODP_user_portrayal::history_info& history_list(int index) const;
  inline ::ODP_user_portrayal::history_info* mutable_history_list(int index);
  inline ::ODP_user_portrayal::history_info* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::history_info >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::history_info >*
      mutable_history_list();

  // optional int32 total_num = 2;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 2;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional .common.result_info result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::common::result_info& result() const;
  inline ::common::result_info* mutable_result();
  inline ::common::result_info* release_result();
  inline void set_allocated_result(::common::result_info* result);

  // @@protoc_insertion_point(class_scope:ODP_user_portrayal.bid_history_ans)
 private:
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::history_info > history_list_;
  ::common::result_info* result_;
  ::google::protobuf::int32 total_num_;
  friend void  protobuf_AddDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_AssignDesc_ODP_5fuser_5fportrayal_2eproto();
  friend void protobuf_ShutdownFile_ODP_5fuser_5fportrayal_2eproto();

  void InitAsDefaultInstance();
  static bid_history_ans* default_instance_;
};
// ===================================================================


// ===================================================================

// location_info

// optional bytes location_desc = 1;
inline bool location_info::has_location_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void location_info::set_has_location_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void location_info::clear_has_location_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void location_info::clear_location_desc() {
  if (location_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_desc_->clear();
  }
  clear_has_location_desc();
}
inline const ::std::string& location_info::location_desc() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.location_info.location_desc)
  return *location_desc_;
}
inline void location_info::set_location_desc(const ::std::string& value) {
  set_has_location_desc();
  if (location_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_desc_ = new ::std::string;
  }
  location_desc_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.location_info.location_desc)
}
inline void location_info::set_location_desc(const char* value) {
  set_has_location_desc();
  if (location_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_desc_ = new ::std::string;
  }
  location_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.location_info.location_desc)
}
inline void location_info::set_location_desc(const void* value, size_t size) {
  set_has_location_desc();
  if (location_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_desc_ = new ::std::string;
  }
  location_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.location_info.location_desc)
}
inline ::std::string* location_info::mutable_location_desc() {
  set_has_location_desc();
  if (location_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    location_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.location_info.location_desc)
  return location_desc_;
}
inline ::std::string* location_info::release_location_desc() {
  clear_has_location_desc();
  if (location_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = location_desc_;
    location_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void location_info::set_allocated_location_desc(::std::string* location_desc) {
  if (location_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_desc_;
  }
  if (location_desc) {
    set_has_location_desc();
    location_desc_ = location_desc;
  } else {
    clear_has_location_desc();
    location_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.location_info.location_desc)
}

// optional int32 iscommon = 2;
inline bool location_info::has_iscommon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void location_info::set_has_iscommon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void location_info::clear_has_iscommon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void location_info::clear_iscommon() {
  iscommon_ = 0;
  clear_has_iscommon();
}
inline ::google::protobuf::int32 location_info::iscommon() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.location_info.iscommon)
  return iscommon_;
}
inline void location_info::set_iscommon(::google::protobuf::int32 value) {
  set_has_iscommon();
  iscommon_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.location_info.iscommon)
}

// -------------------------------------------------------------------

// version_info

// optional bytes version = 1;
inline bool version_info::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void version_info::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void version_info::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void version_info::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& version_info::version() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.version)
  return *version_;
}
inline void version_info::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.version)
}
inline void version_info::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.version)
}
inline void version_info::set_version(const void* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.version)
}
inline ::std::string* version_info::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.version)
  return version_;
}
inline ::std::string* version_info::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.version)
}

// optional bytes version_num = 2;
inline bool version_info::has_version_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void version_info::set_has_version_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void version_info::clear_has_version_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void version_info::clear_version_num() {
  if (version_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_num_->clear();
  }
  clear_has_version_num();
}
inline const ::std::string& version_info::version_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.version_num)
  return *version_num_;
}
inline void version_info::set_version_num(const ::std::string& value) {
  set_has_version_num();
  if (version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_num_ = new ::std::string;
  }
  version_num_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.version_num)
}
inline void version_info::set_version_num(const char* value) {
  set_has_version_num();
  if (version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_num_ = new ::std::string;
  }
  version_num_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.version_num)
}
inline void version_info::set_version_num(const void* value, size_t size) {
  set_has_version_num();
  if (version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_num_ = new ::std::string;
  }
  version_num_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.version_num)
}
inline ::std::string* version_info::mutable_version_num() {
  set_has_version_num();
  if (version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_num_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.version_num)
  return version_num_;
}
inline ::std::string* version_info::release_version_num() {
  clear_has_version_num();
  if (version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_num_;
    version_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_version_num(::std::string* version_num) {
  if (version_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_num_;
  }
  if (version_num) {
    set_has_version_num();
    version_num_ = version_num;
  } else {
    clear_has_version_num();
    version_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.version_num)
}

// optional bytes download = 3;
inline bool version_info::has_download() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void version_info::set_has_download() {
  _has_bits_[0] |= 0x00000004u;
}
inline void version_info::clear_has_download() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void version_info::clear_download() {
  if (download_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_->clear();
  }
  clear_has_download();
}
inline const ::std::string& version_info::download() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.download)
  return *download_;
}
inline void version_info::set_download(const ::std::string& value) {
  set_has_download();
  if (download_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_ = new ::std::string;
  }
  download_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.download)
}
inline void version_info::set_download(const char* value) {
  set_has_download();
  if (download_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_ = new ::std::string;
  }
  download_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.download)
}
inline void version_info::set_download(const void* value, size_t size) {
  set_has_download();
  if (download_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_ = new ::std::string;
  }
  download_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.download)
}
inline ::std::string* version_info::mutable_download() {
  set_has_download();
  if (download_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.download)
  return download_;
}
inline ::std::string* version_info::release_download() {
  clear_has_download();
  if (download_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = download_;
    download_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_download(::std::string* download) {
  if (download_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete download_;
  }
  if (download) {
    set_has_download();
    download_ = download;
  } else {
    clear_has_download();
    download_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.download)
}

// optional bytes download_time = 4;
inline bool version_info::has_download_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void version_info::set_has_download_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void version_info::clear_has_download_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void version_info::clear_download_time() {
  if (download_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_time_->clear();
  }
  clear_has_download_time();
}
inline const ::std::string& version_info::download_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.download_time)
  return *download_time_;
}
inline void version_info::set_download_time(const ::std::string& value) {
  set_has_download_time();
  if (download_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_time_ = new ::std::string;
  }
  download_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.download_time)
}
inline void version_info::set_download_time(const char* value) {
  set_has_download_time();
  if (download_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_time_ = new ::std::string;
  }
  download_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.download_time)
}
inline void version_info::set_download_time(const void* value, size_t size) {
  set_has_download_time();
  if (download_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_time_ = new ::std::string;
  }
  download_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.download_time)
}
inline ::std::string* version_info::mutable_download_time() {
  set_has_download_time();
  if (download_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    download_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.download_time)
  return download_time_;
}
inline ::std::string* version_info::release_download_time() {
  clear_has_download_time();
  if (download_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = download_time_;
    download_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_download_time(::std::string* download_time) {
  if (download_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete download_time_;
  }
  if (download_time) {
    set_has_download_time();
    download_time_ = download_time;
  } else {
    clear_has_download_time();
    download_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.download_time)
}

// optional bytes last_use_time = 5;
inline bool version_info::has_last_use_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void version_info::set_has_last_use_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void version_info::clear_has_last_use_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void version_info::clear_last_use_time() {
  if (last_use_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_->clear();
  }
  clear_has_last_use_time();
}
inline const ::std::string& version_info::last_use_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.last_use_time)
  return *last_use_time_;
}
inline void version_info::set_last_use_time(const ::std::string& value) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.last_use_time)
}
inline void version_info::set_last_use_time(const char* value) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.last_use_time)
}
inline void version_info::set_last_use_time(const void* value, size_t size) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.last_use_time)
}
inline ::std::string* version_info::mutable_last_use_time() {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.last_use_time)
  return last_use_time_;
}
inline ::std::string* version_info::release_last_use_time() {
  clear_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_use_time_;
    last_use_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_last_use_time(::std::string* last_use_time) {
  if (last_use_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_use_time_;
  }
  if (last_use_time) {
    set_has_last_use_time();
    last_use_time_ = last_use_time;
  } else {
    clear_has_last_use_time();
    last_use_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.last_use_time)
}

// optional bytes last_version = 6;
inline bool version_info::has_last_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void version_info::set_has_last_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void version_info::clear_has_last_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void version_info::clear_last_version() {
  if (last_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_->clear();
  }
  clear_has_last_version();
}
inline const ::std::string& version_info::last_version() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.last_version)
  return *last_version_;
}
inline void version_info::set_last_version(const ::std::string& value) {
  set_has_last_version();
  if (last_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_ = new ::std::string;
  }
  last_version_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.last_version)
}
inline void version_info::set_last_version(const char* value) {
  set_has_last_version();
  if (last_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_ = new ::std::string;
  }
  last_version_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.last_version)
}
inline void version_info::set_last_version(const void* value, size_t size) {
  set_has_last_version();
  if (last_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_ = new ::std::string;
  }
  last_version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.last_version)
}
inline ::std::string* version_info::mutable_last_version() {
  set_has_last_version();
  if (last_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.last_version)
  return last_version_;
}
inline ::std::string* version_info::release_last_version() {
  clear_has_last_version();
  if (last_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_version_;
    last_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_last_version(::std::string* last_version) {
  if (last_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_version_;
  }
  if (last_version) {
    set_has_last_version();
    last_version_ = last_version;
  } else {
    clear_has_last_version();
    last_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.last_version)
}

// optional bytes last_version_num = 7;
inline bool version_info::has_last_version_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void version_info::set_has_last_version_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void version_info::clear_has_last_version_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void version_info::clear_last_version_num() {
  if (last_version_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_num_->clear();
  }
  clear_has_last_version_num();
}
inline const ::std::string& version_info::last_version_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.last_version_num)
  return *last_version_num_;
}
inline void version_info::set_last_version_num(const ::std::string& value) {
  set_has_last_version_num();
  if (last_version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_num_ = new ::std::string;
  }
  last_version_num_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.last_version_num)
}
inline void version_info::set_last_version_num(const char* value) {
  set_has_last_version_num();
  if (last_version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_num_ = new ::std::string;
  }
  last_version_num_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.version_info.last_version_num)
}
inline void version_info::set_last_version_num(const void* value, size_t size) {
  set_has_last_version_num();
  if (last_version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_num_ = new ::std::string;
  }
  last_version_num_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.version_info.last_version_num)
}
inline ::std::string* version_info::mutable_last_version_num() {
  set_has_last_version_num();
  if (last_version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_version_num_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.version_info.last_version_num)
  return last_version_num_;
}
inline ::std::string* version_info::release_last_version_num() {
  clear_has_last_version_num();
  if (last_version_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_version_num_;
    last_version_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void version_info::set_allocated_last_version_num(::std::string* last_version_num) {
  if (last_version_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_version_num_;
  }
  if (last_version_num) {
    set_has_last_version_num();
    last_version_num_ = last_version_num;
  } else {
    clear_has_last_version_num();
    last_version_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.version_info.last_version_num)
}

// optional int32 isnow = 8;
inline bool version_info::has_isnow() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void version_info::set_has_isnow() {
  _has_bits_[0] |= 0x00000080u;
}
inline void version_info::clear_has_isnow() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void version_info::clear_isnow() {
  isnow_ = 0;
  clear_has_isnow();
}
inline ::google::protobuf::int32 version_info::isnow() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.isnow)
  return isnow_;
}
inline void version_info::set_isnow(::google::protobuf::int32 value) {
  set_has_isnow();
  isnow_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.isnow)
}

// optional int32 start_num = 9;
inline bool version_info::has_start_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void version_info::set_has_start_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void version_info::clear_has_start_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void version_info::clear_start_num() {
  start_num_ = 0;
  clear_has_start_num();
}
inline ::google::protobuf::int32 version_info::start_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.version_info.start_num)
  return start_num_;
}
inline void version_info::set_start_num(::google::protobuf::int32 value) {
  set_has_start_num();
  start_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.version_info.start_num)
}

// -------------------------------------------------------------------

// device_login_info

// optional bytes login_name = 1;
inline bool device_login_info::has_login_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void device_login_info::set_has_login_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void device_login_info::clear_has_login_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void device_login_info::clear_login_name() {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_->clear();
  }
  clear_has_login_name();
}
inline const ::std::string& device_login_info::login_name() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_login_info.login_name)
  return *login_name_;
}
inline void device_login_info::set_login_name(const ::std::string& value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_login_info.login_name)
}
inline void device_login_info::set_login_name(const char* value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_login_info.login_name)
}
inline void device_login_info::set_login_name(const void* value, size_t size) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_login_info.login_name)
}
inline ::std::string* device_login_info::mutable_login_name() {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_login_info.login_name)
  return login_name_;
}
inline ::std::string* device_login_info::release_login_name() {
  clear_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = login_name_;
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_login_info::set_allocated_login_name(::std::string* login_name) {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete login_name_;
  }
  if (login_name) {
    set_has_login_name();
    login_name_ = login_name;
  } else {
    clear_has_login_name();
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_login_info.login_name)
}

// optional int32 is_overdue = 2;
inline bool device_login_info::has_is_overdue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void device_login_info::set_has_is_overdue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void device_login_info::clear_has_is_overdue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void device_login_info::clear_is_overdue() {
  is_overdue_ = 0;
  clear_has_is_overdue();
}
inline ::google::protobuf::int32 device_login_info::is_overdue() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_login_info.is_overdue)
  return is_overdue_;
}
inline void device_login_info::set_is_overdue(::google::protobuf::int32 value) {
  set_has_is_overdue();
  is_overdue_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_login_info.is_overdue)
}

// -------------------------------------------------------------------

// device_info

// optional bytes device_id = 1;
inline bool device_info::has_device_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void device_info::set_has_device_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void device_info::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void device_info::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& device_info::device_id() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.device_id)
  return *device_id_;
}
inline void device_info::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.device_id)
}
inline void device_info::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.device_id)
}
inline void device_info::set_device_id(const void* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.device_id)
}
inline ::std::string* device_info::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.device_id)
  return device_id_;
}
inline ::std::string* device_info::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.device_id)
}

// optional bytes brand = 2;
inline bool device_info::has_brand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void device_info::set_has_brand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void device_info::clear_has_brand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void device_info::clear_brand() {
  if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_->clear();
  }
  clear_has_brand();
}
inline const ::std::string& device_info::brand() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.brand)
  return *brand_;
}
inline void device_info::set_brand(const ::std::string& value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.brand)
}
inline void device_info::set_brand(const char* value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.brand)
}
inline void device_info::set_brand(const void* value, size_t size) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.brand)
}
inline ::std::string* device_info::mutable_brand() {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.brand)
  return brand_;
}
inline ::std::string* device_info::release_brand() {
  clear_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = brand_;
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_brand(::std::string* brand) {
  if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete brand_;
  }
  if (brand) {
    set_has_brand();
    brand_ = brand;
  } else {
    clear_has_brand();
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.brand)
}

// optional bytes model = 3;
inline bool device_info::has_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void device_info::set_has_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void device_info::clear_has_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void device_info::clear_model() {
  if (model_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& device_info::model() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.model)
  return *model_;
}
inline void device_info::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.model)
}
inline void device_info::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.model)
}
inline void device_info::set_model(const void* value, size_t size) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.model)
}
inline ::std::string* device_info::mutable_model() {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.model)
  return model_;
}
inline ::std::string* device_info::release_model() {
  clear_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_model(::std::string* model) {
  if (model_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.model)
}

// optional int32 address_list_num = 4;
inline bool device_info::has_address_list_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void device_info::set_has_address_list_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void device_info::clear_has_address_list_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void device_info::clear_address_list_num() {
  address_list_num_ = 0;
  clear_has_address_list_num();
}
inline ::google::protobuf::int32 device_info::address_list_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.address_list_num)
  return address_list_num_;
}
inline void device_info::set_address_list_num(::google::protobuf::int32 value) {
  set_has_address_list_num();
  address_list_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.address_list_num)
}

// optional bytes first_time = 5;
inline bool device_info::has_first_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void device_info::set_has_first_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void device_info::clear_has_first_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void device_info::clear_first_time() {
  if (first_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_time_->clear();
  }
  clear_has_first_time();
}
inline const ::std::string& device_info::first_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.first_time)
  return *first_time_;
}
inline void device_info::set_first_time(const ::std::string& value) {
  set_has_first_time();
  if (first_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_time_ = new ::std::string;
  }
  first_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.first_time)
}
inline void device_info::set_first_time(const char* value) {
  set_has_first_time();
  if (first_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_time_ = new ::std::string;
  }
  first_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.first_time)
}
inline void device_info::set_first_time(const void* value, size_t size) {
  set_has_first_time();
  if (first_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_time_ = new ::std::string;
  }
  first_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.first_time)
}
inline ::std::string* device_info::mutable_first_time() {
  set_has_first_time();
  if (first_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.first_time)
  return first_time_;
}
inline ::std::string* device_info::release_first_time() {
  clear_has_first_time();
  if (first_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = first_time_;
    first_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_first_time(::std::string* first_time) {
  if (first_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete first_time_;
  }
  if (first_time) {
    set_has_first_time();
    first_time_ = first_time;
  } else {
    clear_has_first_time();
    first_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.first_time)
}

// optional bytes last_use_time = 6;
inline bool device_info::has_last_use_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void device_info::set_has_last_use_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void device_info::clear_has_last_use_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void device_info::clear_last_use_time() {
  if (last_use_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_->clear();
  }
  clear_has_last_use_time();
}
inline const ::std::string& device_info::last_use_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.last_use_time)
  return *last_use_time_;
}
inline void device_info::set_last_use_time(const ::std::string& value) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.last_use_time)
}
inline void device_info::set_last_use_time(const char* value) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.last_use_time)
}
inline void device_info::set_last_use_time(const void* value, size_t size) {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  last_use_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.last_use_time)
}
inline ::std::string* device_info::mutable_last_use_time() {
  set_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.last_use_time)
  return last_use_time_;
}
inline ::std::string* device_info::release_last_use_time() {
  clear_has_last_use_time();
  if (last_use_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_use_time_;
    last_use_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_last_use_time(::std::string* last_use_time) {
  if (last_use_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_use_time_;
  }
  if (last_use_time) {
    set_has_last_use_time();
    last_use_time_ = last_use_time;
  } else {
    clear_has_last_use_time();
    last_use_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.last_use_time)
}

// optional int32 black_device = 7;
inline bool device_info::has_black_device() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void device_info::set_has_black_device() {
  _has_bits_[0] |= 0x00000040u;
}
inline void device_info::clear_has_black_device() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void device_info::clear_black_device() {
  black_device_ = 0;
  clear_has_black_device();
}
inline ::google::protobuf::int32 device_info::black_device() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.black_device)
  return black_device_;
}
inline void device_info::set_black_device(::google::protobuf::int32 value) {
  set_has_black_device();
  black_device_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.black_device)
}

// optional bytes last_use_localtion = 8;
inline bool device_info::has_last_use_localtion() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void device_info::set_has_last_use_localtion() {
  _has_bits_[0] |= 0x00000080u;
}
inline void device_info::clear_has_last_use_localtion() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void device_info::clear_last_use_localtion() {
  if (last_use_localtion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_localtion_->clear();
  }
  clear_has_last_use_localtion();
}
inline const ::std::string& device_info::last_use_localtion() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.last_use_localtion)
  return *last_use_localtion_;
}
inline void device_info::set_last_use_localtion(const ::std::string& value) {
  set_has_last_use_localtion();
  if (last_use_localtion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_localtion_ = new ::std::string;
  }
  last_use_localtion_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.last_use_localtion)
}
inline void device_info::set_last_use_localtion(const char* value) {
  set_has_last_use_localtion();
  if (last_use_localtion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_localtion_ = new ::std::string;
  }
  last_use_localtion_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.device_info.last_use_localtion)
}
inline void device_info::set_last_use_localtion(const void* value, size_t size) {
  set_has_last_use_localtion();
  if (last_use_localtion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_localtion_ = new ::std::string;
  }
  last_use_localtion_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.device_info.last_use_localtion)
}
inline ::std::string* device_info::mutable_last_use_localtion() {
  set_has_last_use_localtion();
  if (last_use_localtion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_use_localtion_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.last_use_localtion)
  return last_use_localtion_;
}
inline ::std::string* device_info::release_last_use_localtion() {
  clear_has_last_use_localtion();
  if (last_use_localtion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_use_localtion_;
    last_use_localtion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void device_info::set_allocated_last_use_localtion(::std::string* last_use_localtion) {
  if (last_use_localtion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_use_localtion_;
  }
  if (last_use_localtion) {
    set_has_last_use_localtion();
    last_use_localtion_ = last_use_localtion;
  } else {
    clear_has_last_use_localtion();
    last_use_localtion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_info.last_use_localtion)
}

// optional int32 use_days = 9;
inline bool device_info::has_use_days() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void device_info::set_has_use_days() {
  _has_bits_[0] |= 0x00000100u;
}
inline void device_info::clear_has_use_days() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void device_info::clear_use_days() {
  use_days_ = 0;
  clear_has_use_days();
}
inline ::google::protobuf::int32 device_info::use_days() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.use_days)
  return use_days_;
}
inline void device_info::set_use_days(::google::protobuf::int32 value) {
  set_has_use_days();
  use_days_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.use_days)
}

// optional int32 use_num = 10;
inline bool device_info::has_use_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void device_info::set_has_use_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void device_info::clear_has_use_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void device_info::clear_use_num() {
  use_num_ = 0;
  clear_has_use_num();
}
inline ::google::protobuf::int32 device_info::use_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.use_num)
  return use_num_;
}
inline void device_info::set_use_num(::google::protobuf::int32 value) {
  set_has_use_num();
  use_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.device_info.use_num)
}

// repeated .ODP_user_portrayal.device_login_info other_login_info = 11;
inline int device_info::other_login_info_size() const {
  return other_login_info_.size();
}
inline void device_info::clear_other_login_info() {
  other_login_info_.Clear();
}
inline const ::ODP_user_portrayal::device_login_info& device_info::other_login_info(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_info.other_login_info)
  return other_login_info_.Get(index);
}
inline ::ODP_user_portrayal::device_login_info* device_info::mutable_other_login_info(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_info.other_login_info)
  return other_login_info_.Mutable(index);
}
inline ::ODP_user_portrayal::device_login_info* device_info::add_other_login_info() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.device_info.other_login_info)
  return other_login_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_login_info >&
device_info::other_login_info() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.device_info.other_login_info)
  return other_login_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_login_info >*
device_info::mutable_other_login_info() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.device_info.other_login_info)
  return &other_login_info_;
}

// -------------------------------------------------------------------

// history_info

// optional bytes user_nick_name = 1;
inline bool history_info::has_user_nick_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void history_info::set_has_user_nick_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void history_info::clear_has_user_nick_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void history_info::clear_user_nick_name() {
  if (user_nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_nick_name_->clear();
  }
  clear_has_user_nick_name();
}
inline const ::std::string& history_info::user_nick_name() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.user_nick_name)
  return *user_nick_name_;
}
inline void history_info::set_user_nick_name(const ::std::string& value) {
  set_has_user_nick_name();
  if (user_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_nick_name_ = new ::std::string;
  }
  user_nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.user_nick_name)
}
inline void history_info::set_user_nick_name(const char* value) {
  set_has_user_nick_name();
  if (user_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_nick_name_ = new ::std::string;
  }
  user_nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.user_nick_name)
}
inline void history_info::set_user_nick_name(const void* value, size_t size) {
  set_has_user_nick_name();
  if (user_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_nick_name_ = new ::std::string;
  }
  user_nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.user_nick_name)
}
inline ::std::string* history_info::mutable_user_nick_name() {
  set_has_user_nick_name();
  if (user_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.user_nick_name)
  return user_nick_name_;
}
inline ::std::string* history_info::release_user_nick_name() {
  clear_has_user_nick_name();
  if (user_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_nick_name_;
    user_nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_user_nick_name(::std::string* user_nick_name) {
  if (user_nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_nick_name_;
  }
  if (user_nick_name) {
    set_has_user_nick_name();
    user_nick_name_ = user_nick_name;
  } else {
    clear_has_user_nick_name();
    user_nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.user_nick_name)
}

// optional bytes head_portrait = 2;
inline bool history_info::has_head_portrait() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void history_info::set_has_head_portrait() {
  _has_bits_[0] |= 0x00000002u;
}
inline void history_info::clear_has_head_portrait() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void history_info::clear_head_portrait() {
  if (head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_->clear();
  }
  clear_has_head_portrait();
}
inline const ::std::string& history_info::head_portrait() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.head_portrait)
  return *head_portrait_;
}
inline void history_info::set_head_portrait(const ::std::string& value) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.head_portrait)
}
inline void history_info::set_head_portrait(const char* value) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.head_portrait)
}
inline void history_info::set_head_portrait(const void* value, size_t size) {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  head_portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.head_portrait)
}
inline ::std::string* history_info::mutable_head_portrait() {
  set_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    head_portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.head_portrait)
  return head_portrait_;
}
inline ::std::string* history_info::release_head_portrait() {
  clear_has_head_portrait();
  if (head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = head_portrait_;
    head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_head_portrait(::std::string* head_portrait) {
  if (head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete head_portrait_;
  }
  if (head_portrait) {
    set_has_head_portrait();
    head_portrait_ = head_portrait;
  } else {
    clear_has_head_portrait();
    head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.head_portrait)
}

// optional .common.sex sex = 3;
inline bool history_info::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void history_info::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void history_info::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void history_info::clear_sex() {
  sex_ = 1;
  clear_has_sex();
}
inline ::common::sex history_info::sex() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.sex)
  return static_cast< ::common::sex >(sex_);
}
inline void history_info::set_sex(::common::sex value) {
  assert(::common::sex_IsValid(value));
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.sex)
}

// optional bytes bid_title = 4;
inline bool history_info::has_bid_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void history_info::set_has_bid_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void history_info::clear_has_bid_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void history_info::clear_bid_title() {
  if (bid_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bid_title_->clear();
  }
  clear_has_bid_title();
}
inline const ::std::string& history_info::bid_title() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.bid_title)
  return *bid_title_;
}
inline void history_info::set_bid_title(const ::std::string& value) {
  set_has_bid_title();
  if (bid_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bid_title_ = new ::std::string;
  }
  bid_title_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.bid_title)
}
inline void history_info::set_bid_title(const char* value) {
  set_has_bid_title();
  if (bid_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bid_title_ = new ::std::string;
  }
  bid_title_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.bid_title)
}
inline void history_info::set_bid_title(const void* value, size_t size) {
  set_has_bid_title();
  if (bid_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bid_title_ = new ::std::string;
  }
  bid_title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.bid_title)
}
inline ::std::string* history_info::mutable_bid_title() {
  set_has_bid_title();
  if (bid_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bid_title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.bid_title)
  return bid_title_;
}
inline ::std::string* history_info::release_bid_title() {
  clear_has_bid_title();
  if (bid_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bid_title_;
    bid_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_bid_title(::std::string* bid_title) {
  if (bid_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bid_title_;
  }
  if (bid_title) {
    set_has_bid_title();
    bid_title_ = bid_title;
  } else {
    clear_has_bid_title();
    bid_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.bid_title)
}

// optional bytes createdate = 5;
inline bool history_info::has_createdate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void history_info::set_has_createdate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void history_info::clear_has_createdate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void history_info::clear_createdate() {
  if (createdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createdate_->clear();
  }
  clear_has_createdate();
}
inline const ::std::string& history_info::createdate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.createdate)
  return *createdate_;
}
inline void history_info::set_createdate(const ::std::string& value) {
  set_has_createdate();
  if (createdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createdate_ = new ::std::string;
  }
  createdate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.createdate)
}
inline void history_info::set_createdate(const char* value) {
  set_has_createdate();
  if (createdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createdate_ = new ::std::string;
  }
  createdate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.createdate)
}
inline void history_info::set_createdate(const void* value, size_t size) {
  set_has_createdate();
  if (createdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createdate_ = new ::std::string;
  }
  createdate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.createdate)
}
inline ::std::string* history_info::mutable_createdate() {
  set_has_createdate();
  if (createdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createdate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.createdate)
  return createdate_;
}
inline ::std::string* history_info::release_createdate() {
  clear_has_createdate();
  if (createdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createdate_;
    createdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_createdate(::std::string* createdate) {
  if (createdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdate_;
  }
  if (createdate) {
    set_has_createdate();
    createdate_ = createdate;
  } else {
    clear_has_createdate();
    createdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.createdate)
}

// optional double borrow_amount = 6;
inline bool history_info::has_borrow_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void history_info::set_has_borrow_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void history_info::clear_has_borrow_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void history_info::clear_borrow_amount() {
  borrow_amount_ = 0;
  clear_has_borrow_amount();
}
inline double history_info::borrow_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.borrow_amount)
  return borrow_amount_;
}
inline void history_info::set_borrow_amount(double value) {
  set_has_borrow_amount();
  borrow_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.borrow_amount)
}

// optional double guarantee_rates = 7;
inline bool history_info::has_guarantee_rates() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void history_info::set_has_guarantee_rates() {
  _has_bits_[0] |= 0x00000040u;
}
inline void history_info::clear_has_guarantee_rates() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void history_info::clear_guarantee_rates() {
  guarantee_rates_ = 0;
  clear_has_guarantee_rates();
}
inline double history_info::guarantee_rates() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.guarantee_rates)
  return guarantee_rates_;
}
inline void history_info::set_guarantee_rates(double value) {
  set_has_guarantee_rates();
  guarantee_rates_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.guarantee_rates)
}

// optional double lendrates = 8;
inline bool history_info::has_lendrates() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void history_info::set_has_lendrates() {
  _has_bits_[0] |= 0x00000080u;
}
inline void history_info::clear_has_lendrates() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void history_info::clear_lendrates() {
  lendrates_ = 0;
  clear_has_lendrates();
}
inline double history_info::lendrates() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.lendrates)
  return lendrates_;
}
inline void history_info::set_lendrates(double value) {
  set_has_lendrates();
  lendrates_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.lendrates)
}

// optional double borrowingmonth = 9;
inline bool history_info::has_borrowingmonth() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void history_info::set_has_borrowingmonth() {
  _has_bits_[0] |= 0x00000100u;
}
inline void history_info::clear_has_borrowingmonth() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void history_info::clear_borrowingmonth() {
  borrowingmonth_ = 0;
  clear_has_borrowingmonth();
}
inline double history_info::borrowingmonth() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.borrowingmonth)
  return borrowingmonth_;
}
inline void history_info::set_borrowingmonth(double value) {
  set_has_borrowingmonth();
  borrowingmonth_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.borrowingmonth)
}

// optional bytes jd_nick_name = 10;
inline bool history_info::has_jd_nick_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void history_info::set_has_jd_nick_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void history_info::clear_has_jd_nick_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void history_info::clear_jd_nick_name() {
  if (jd_nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_nick_name_->clear();
  }
  clear_has_jd_nick_name();
}
inline const ::std::string& history_info::jd_nick_name() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.jd_nick_name)
  return *jd_nick_name_;
}
inline void history_info::set_jd_nick_name(const ::std::string& value) {
  set_has_jd_nick_name();
  if (jd_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_nick_name_ = new ::std::string;
  }
  jd_nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.jd_nick_name)
}
inline void history_info::set_jd_nick_name(const char* value) {
  set_has_jd_nick_name();
  if (jd_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_nick_name_ = new ::std::string;
  }
  jd_nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.jd_nick_name)
}
inline void history_info::set_jd_nick_name(const void* value, size_t size) {
  set_has_jd_nick_name();
  if (jd_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_nick_name_ = new ::std::string;
  }
  jd_nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.jd_nick_name)
}
inline ::std::string* history_info::mutable_jd_nick_name() {
  set_has_jd_nick_name();
  if (jd_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.jd_nick_name)
  return jd_nick_name_;
}
inline ::std::string* history_info::release_jd_nick_name() {
  clear_has_jd_nick_name();
  if (jd_nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_nick_name_;
    jd_nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_jd_nick_name(::std::string* jd_nick_name) {
  if (jd_nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_nick_name_;
  }
  if (jd_nick_name) {
    set_has_jd_nick_name();
    jd_nick_name_ = jd_nick_name;
  } else {
    clear_has_jd_nick_name();
    jd_nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.jd_nick_name)
}

// optional bytes jd_head_portrait = 11;
inline bool history_info::has_jd_head_portrait() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void history_info::set_has_jd_head_portrait() {
  _has_bits_[0] |= 0x00000400u;
}
inline void history_info::clear_has_jd_head_portrait() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void history_info::clear_jd_head_portrait() {
  if (jd_head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_head_portrait_->clear();
  }
  clear_has_jd_head_portrait();
}
inline const ::std::string& history_info::jd_head_portrait() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.jd_head_portrait)
  return *jd_head_portrait_;
}
inline void history_info::set_jd_head_portrait(const ::std::string& value) {
  set_has_jd_head_portrait();
  if (jd_head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_head_portrait_ = new ::std::string;
  }
  jd_head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.jd_head_portrait)
}
inline void history_info::set_jd_head_portrait(const char* value) {
  set_has_jd_head_portrait();
  if (jd_head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_head_portrait_ = new ::std::string;
  }
  jd_head_portrait_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.jd_head_portrait)
}
inline void history_info::set_jd_head_portrait(const void* value, size_t size) {
  set_has_jd_head_portrait();
  if (jd_head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_head_portrait_ = new ::std::string;
  }
  jd_head_portrait_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.jd_head_portrait)
}
inline ::std::string* history_info::mutable_jd_head_portrait() {
  set_has_jd_head_portrait();
  if (jd_head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_head_portrait_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.jd_head_portrait)
  return jd_head_portrait_;
}
inline ::std::string* history_info::release_jd_head_portrait() {
  clear_has_jd_head_portrait();
  if (jd_head_portrait_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_head_portrait_;
    jd_head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_jd_head_portrait(::std::string* jd_head_portrait) {
  if (jd_head_portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_head_portrait_;
  }
  if (jd_head_portrait) {
    set_has_jd_head_portrait();
    jd_head_portrait_ = jd_head_portrait;
  } else {
    clear_has_jd_head_portrait();
    jd_head_portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.jd_head_portrait)
}

// optional int32 islocation = 12;
inline bool history_info::has_islocation() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void history_info::set_has_islocation() {
  _has_bits_[0] |= 0x00000800u;
}
inline void history_info::clear_has_islocation() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void history_info::clear_islocation() {
  islocation_ = 0;
  clear_has_islocation();
}
inline ::google::protobuf::int32 history_info::islocation() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.islocation)
  return islocation_;
}
inline void history_info::set_islocation(::google::protobuf::int32 value) {
  set_has_islocation();
  islocation_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.islocation)
}

// optional bytes bstatus = 13;
inline bool history_info::has_bstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void history_info::set_has_bstatus() {
  _has_bits_[0] |= 0x00001000u;
}
inline void history_info::clear_has_bstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void history_info::clear_bstatus() {
  if (bstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bstatus_->clear();
  }
  clear_has_bstatus();
}
inline const ::std::string& history_info::bstatus() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.bstatus)
  return *bstatus_;
}
inline void history_info::set_bstatus(const ::std::string& value) {
  set_has_bstatus();
  if (bstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bstatus_ = new ::std::string;
  }
  bstatus_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.bstatus)
}
inline void history_info::set_bstatus(const char* value) {
  set_has_bstatus();
  if (bstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bstatus_ = new ::std::string;
  }
  bstatus_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.bstatus)
}
inline void history_info::set_bstatus(const void* value, size_t size) {
  set_has_bstatus();
  if (bstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bstatus_ = new ::std::string;
  }
  bstatus_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.bstatus)
}
inline ::std::string* history_info::mutable_bstatus() {
  set_has_bstatus();
  if (bstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bstatus_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.bstatus)
  return bstatus_;
}
inline ::std::string* history_info::release_bstatus() {
  clear_has_bstatus();
  if (bstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bstatus_;
    bstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_bstatus(::std::string* bstatus) {
  if (bstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bstatus_;
  }
  if (bstatus) {
    set_has_bstatus();
    bstatus_ = bstatus;
  } else {
    clear_has_bstatus();
    bstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.bstatus)
}

// optional double amount = 14;
inline bool history_info::has_amount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void history_info::set_has_amount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void history_info::clear_has_amount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void history_info::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline double history_info::amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.amount)
  return amount_;
}
inline void history_info::set_amount(double value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.amount)
}

// optional bytes dateTime = 15;
inline bool history_info::has_datetime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void history_info::set_has_datetime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void history_info::clear_has_datetime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void history_info::clear_datetime() {
  if (datetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    datetime_->clear();
  }
  clear_has_datetime();
}
inline const ::std::string& history_info::datetime() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.history_info.dateTime)
  return *datetime_;
}
inline void history_info::set_datetime(const ::std::string& value) {
  set_has_datetime();
  if (datetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    datetime_ = new ::std::string;
  }
  datetime_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.history_info.dateTime)
}
inline void history_info::set_datetime(const char* value) {
  set_has_datetime();
  if (datetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    datetime_ = new ::std::string;
  }
  datetime_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.history_info.dateTime)
}
inline void history_info::set_datetime(const void* value, size_t size) {
  set_has_datetime();
  if (datetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    datetime_ = new ::std::string;
  }
  datetime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.history_info.dateTime)
}
inline ::std::string* history_info::mutable_datetime() {
  set_has_datetime();
  if (datetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    datetime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.history_info.dateTime)
  return datetime_;
}
inline ::std::string* history_info::release_datetime() {
  clear_has_datetime();
  if (datetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = datetime_;
    datetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void history_info::set_allocated_datetime(::std::string* datetime) {
  if (datetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete datetime_;
  }
  if (datetime) {
    set_has_datetime();
    datetime_ = datetime;
  } else {
    clear_has_datetime();
    datetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.history_info.dateTime)
}

// -------------------------------------------------------------------

// statistics_common_info

// optional bytes horizontal_coordinate = 1;
inline bool statistics_common_info::has_horizontal_coordinate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void statistics_common_info::set_has_horizontal_coordinate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void statistics_common_info::clear_has_horizontal_coordinate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void statistics_common_info::clear_horizontal_coordinate() {
  if (horizontal_coordinate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    horizontal_coordinate_->clear();
  }
  clear_has_horizontal_coordinate();
}
inline const ::std::string& statistics_common_info::horizontal_coordinate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
  return *horizontal_coordinate_;
}
inline void statistics_common_info::set_horizontal_coordinate(const ::std::string& value) {
  set_has_horizontal_coordinate();
  if (horizontal_coordinate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    horizontal_coordinate_ = new ::std::string;
  }
  horizontal_coordinate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
}
inline void statistics_common_info::set_horizontal_coordinate(const char* value) {
  set_has_horizontal_coordinate();
  if (horizontal_coordinate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    horizontal_coordinate_ = new ::std::string;
  }
  horizontal_coordinate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
}
inline void statistics_common_info::set_horizontal_coordinate(const void* value, size_t size) {
  set_has_horizontal_coordinate();
  if (horizontal_coordinate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    horizontal_coordinate_ = new ::std::string;
  }
  horizontal_coordinate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
}
inline ::std::string* statistics_common_info::mutable_horizontal_coordinate() {
  set_has_horizontal_coordinate();
  if (horizontal_coordinate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    horizontal_coordinate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
  return horizontal_coordinate_;
}
inline ::std::string* statistics_common_info::release_horizontal_coordinate() {
  clear_has_horizontal_coordinate();
  if (horizontal_coordinate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = horizontal_coordinate_;
    horizontal_coordinate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void statistics_common_info::set_allocated_horizontal_coordinate(::std::string* horizontal_coordinate) {
  if (horizontal_coordinate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete horizontal_coordinate_;
  }
  if (horizontal_coordinate) {
    set_has_horizontal_coordinate();
    horizontal_coordinate_ = horizontal_coordinate;
  } else {
    clear_has_horizontal_coordinate();
    horizontal_coordinate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.statistics_common_info.horizontal_coordinate)
}

// optional int32 vertical_coordinate_num = 2;
inline bool statistics_common_info::has_vertical_coordinate_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void statistics_common_info::set_has_vertical_coordinate_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void statistics_common_info::clear_has_vertical_coordinate_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void statistics_common_info::clear_vertical_coordinate_num() {
  vertical_coordinate_num_ = 0;
  clear_has_vertical_coordinate_num();
}
inline ::google::protobuf::int32 statistics_common_info::vertical_coordinate_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.statistics_common_info.vertical_coordinate_num)
  return vertical_coordinate_num_;
}
inline void statistics_common_info::set_vertical_coordinate_num(::google::protobuf::int32 value) {
  set_has_vertical_coordinate_num();
  vertical_coordinate_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.statistics_common_info.vertical_coordinate_num)
}

// -------------------------------------------------------------------

// danger_param_info

// optional bytes param1 = 1;
inline bool danger_param_info::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void danger_param_info::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void danger_param_info::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void danger_param_info::clear_param1() {
  if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_->clear();
  }
  clear_has_param1();
}
inline const ::std::string& danger_param_info::param1() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_param_info.param1)
  return *param1_;
}
inline void danger_param_info::set_param1(const ::std::string& value) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.danger_param_info.param1)
}
inline void danger_param_info::set_param1(const char* value) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.danger_param_info.param1)
}
inline void danger_param_info::set_param1(const void* value, size_t size) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.danger_param_info.param1)
}
inline ::std::string* danger_param_info::mutable_param1() {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_param_info.param1)
  return param1_;
}
inline ::std::string* danger_param_info::release_param1() {
  clear_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param1_;
    param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void danger_param_info::set_allocated_param1(::std::string* param1) {
  if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param1_;
  }
  if (param1) {
    set_has_param1();
    param1_ = param1;
  } else {
    clear_has_param1();
    param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.danger_param_info.param1)
}

// optional bytes param2 = 2;
inline bool danger_param_info::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void danger_param_info::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void danger_param_info::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void danger_param_info::clear_param2() {
  if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_->clear();
  }
  clear_has_param2();
}
inline const ::std::string& danger_param_info::param2() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_param_info.param2)
  return *param2_;
}
inline void danger_param_info::set_param2(const ::std::string& value) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.danger_param_info.param2)
}
inline void danger_param_info::set_param2(const char* value) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.danger_param_info.param2)
}
inline void danger_param_info::set_param2(const void* value, size_t size) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.danger_param_info.param2)
}
inline ::std::string* danger_param_info::mutable_param2() {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_param_info.param2)
  return param2_;
}
inline ::std::string* danger_param_info::release_param2() {
  clear_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param2_;
    param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void danger_param_info::set_allocated_param2(::std::string* param2) {
  if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param2_;
  }
  if (param2) {
    set_has_param2();
    param2_ = param2;
  } else {
    clear_has_param2();
    param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.danger_param_info.param2)
}

// -------------------------------------------------------------------

// danger_analysis_info

// optional .ODP_user_portrayal.danger_analysis_type type = 1;
inline bool danger_analysis_info::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void danger_analysis_info::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void danger_analysis_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void danger_analysis_info::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ODP_user_portrayal::danger_analysis_type danger_analysis_info::type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.type)
  return static_cast< ::ODP_user_portrayal::danger_analysis_type >(type_);
}
inline void danger_analysis_info::set_type(::ODP_user_portrayal::danger_analysis_type value) {
  assert(::ODP_user_portrayal::danger_analysis_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.danger_analysis_info.type)
}

// optional int32 isexist = 2;
inline bool danger_analysis_info::has_isexist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void danger_analysis_info::set_has_isexist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void danger_analysis_info::clear_has_isexist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void danger_analysis_info::clear_isexist() {
  isexist_ = 0;
  clear_has_isexist();
}
inline ::google::protobuf::int32 danger_analysis_info::isexist() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.isexist)
  return isexist_;
}
inline void danger_analysis_info::set_isexist(::google::protobuf::int32 value) {
  set_has_isexist();
  isexist_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.danger_analysis_info.isexist)
}

// repeated .ODP_user_portrayal.danger_param_info paramlist1 = 3;
inline int danger_analysis_info::paramlist1_size() const {
  return paramlist1_.size();
}
inline void danger_analysis_info::clear_paramlist1() {
  paramlist1_.Clear();
}
inline const ::ODP_user_portrayal::danger_param_info& danger_analysis_info::paramlist1(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.paramlist1)
  return paramlist1_.Get(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::mutable_paramlist1(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_info.paramlist1)
  return paramlist1_.Mutable(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::add_paramlist1() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.danger_analysis_info.paramlist1)
  return paramlist1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
danger_analysis_info::paramlist1() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.danger_analysis_info.paramlist1)
  return paramlist1_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
danger_analysis_info::mutable_paramlist1() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.danger_analysis_info.paramlist1)
  return &paramlist1_;
}

// repeated .ODP_user_portrayal.danger_param_info paramlist2 = 4;
inline int danger_analysis_info::paramlist2_size() const {
  return paramlist2_.size();
}
inline void danger_analysis_info::clear_paramlist2() {
  paramlist2_.Clear();
}
inline const ::ODP_user_portrayal::danger_param_info& danger_analysis_info::paramlist2(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.paramlist2)
  return paramlist2_.Get(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::mutable_paramlist2(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_info.paramlist2)
  return paramlist2_.Mutable(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::add_paramlist2() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.danger_analysis_info.paramlist2)
  return paramlist2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
danger_analysis_info::paramlist2() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.danger_analysis_info.paramlist2)
  return paramlist2_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
danger_analysis_info::mutable_paramlist2() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.danger_analysis_info.paramlist2)
  return &paramlist2_;
}

// repeated .ODP_user_portrayal.danger_param_info paramlist3 = 5;
inline int danger_analysis_info::paramlist3_size() const {
  return paramlist3_.size();
}
inline void danger_analysis_info::clear_paramlist3() {
  paramlist3_.Clear();
}
inline const ::ODP_user_portrayal::danger_param_info& danger_analysis_info::paramlist3(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.paramlist3)
  return paramlist3_.Get(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::mutable_paramlist3(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_info.paramlist3)
  return paramlist3_.Mutable(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::add_paramlist3() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.danger_analysis_info.paramlist3)
  return paramlist3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
danger_analysis_info::paramlist3() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.danger_analysis_info.paramlist3)
  return paramlist3_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
danger_analysis_info::mutable_paramlist3() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.danger_analysis_info.paramlist3)
  return &paramlist3_;
}

// repeated .ODP_user_portrayal.danger_param_info paramlist4 = 6;
inline int danger_analysis_info::paramlist4_size() const {
  return paramlist4_.size();
}
inline void danger_analysis_info::clear_paramlist4() {
  paramlist4_.Clear();
}
inline const ::ODP_user_portrayal::danger_param_info& danger_analysis_info::paramlist4(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_info.paramlist4)
  return paramlist4_.Get(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::mutable_paramlist4(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_info.paramlist4)
  return paramlist4_.Mutable(index);
}
inline ::ODP_user_portrayal::danger_param_info* danger_analysis_info::add_paramlist4() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.danger_analysis_info.paramlist4)
  return paramlist4_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >&
danger_analysis_info::paramlist4() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.danger_analysis_info.paramlist4)
  return paramlist4_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_param_info >*
danger_analysis_info::mutable_paramlist4() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.danger_analysis_info.paramlist4)
  return &paramlist4_;
}

// -------------------------------------------------------------------

// user_action_ask

// optional .ODP_user_portrayal.action_ask_type type = 1;
inline bool user_action_ask::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_action_ask::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_action_ask::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_action_ask::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ODP_user_portrayal::action_ask_type user_action_ask::type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.type)
  return static_cast< ::ODP_user_portrayal::action_ask_type >(type_);
}
inline void user_action_ask::set_type(::ODP_user_portrayal::action_ask_type value) {
  assert(::ODP_user_portrayal::action_ask_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.user_action_ask.type)
}

// optional bytes phone = 2;
inline bool user_action_ask::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_action_ask::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_action_ask::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_action_ask::clear_phone() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& user_action_ask::phone() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.phone)
  return *phone_;
}
inline void user_action_ask::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.user_action_ask.phone)
}
inline void user_action_ask::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.user_action_ask.phone)
}
inline void user_action_ask::set_phone(const void* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.user_action_ask.phone)
}
inline ::std::string* user_action_ask::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.user_action_ask.phone)
  return phone_;
}
inline ::std::string* user_action_ask::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user_action_ask::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.user_action_ask.phone)
}

// optional bytes idcard = 3;
inline bool user_action_ask::has_idcard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_action_ask::set_has_idcard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_action_ask::clear_has_idcard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_action_ask::clear_idcard() {
  if (idcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    idcard_->clear();
  }
  clear_has_idcard();
}
inline const ::std::string& user_action_ask::idcard() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.idcard)
  return *idcard_;
}
inline void user_action_ask::set_idcard(const ::std::string& value) {
  set_has_idcard();
  if (idcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    idcard_ = new ::std::string;
  }
  idcard_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.user_action_ask.idcard)
}
inline void user_action_ask::set_idcard(const char* value) {
  set_has_idcard();
  if (idcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    idcard_ = new ::std::string;
  }
  idcard_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.user_action_ask.idcard)
}
inline void user_action_ask::set_idcard(const void* value, size_t size) {
  set_has_idcard();
  if (idcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    idcard_ = new ::std::string;
  }
  idcard_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.user_action_ask.idcard)
}
inline ::std::string* user_action_ask::mutable_idcard() {
  set_has_idcard();
  if (idcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    idcard_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.user_action_ask.idcard)
  return idcard_;
}
inline ::std::string* user_action_ask::release_idcard() {
  clear_has_idcard();
  if (idcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = idcard_;
    idcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user_action_ask::set_allocated_idcard(::std::string* idcard) {
  if (idcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete idcard_;
  }
  if (idcard) {
    set_has_idcard();
    idcard_ = idcard;
  } else {
    clear_has_idcard();
    idcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.user_action_ask.idcard)
}

// optional int32 curpage = 4;
inline bool user_action_ask::has_curpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_action_ask::set_has_curpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_action_ask::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_action_ask::clear_curpage() {
  curpage_ = 0;
  clear_has_curpage();
}
inline ::google::protobuf::int32 user_action_ask::curpage() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.curpage)
  return curpage_;
}
inline void user_action_ask::set_curpage(::google::protobuf::int32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.user_action_ask.curpage)
}

// optional int32 pagenum = 5;
inline bool user_action_ask::has_pagenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_action_ask::set_has_pagenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_action_ask::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_action_ask::clear_pagenum() {
  pagenum_ = 0;
  clear_has_pagenum();
}
inline ::google::protobuf::int32 user_action_ask::pagenum() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.pagenum)
  return pagenum_;
}
inline void user_action_ask::set_pagenum(::google::protobuf::int32 value) {
  set_has_pagenum();
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.user_action_ask.pagenum)
}

// optional .common.common_ask_header ask_header = 6;
inline bool user_action_ask::has_ask_header() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_action_ask::set_has_ask_header() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_action_ask::clear_has_ask_header() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_action_ask::clear_ask_header() {
  if (ask_header_ != NULL) ask_header_->::common::common_ask_header::Clear();
  clear_has_ask_header();
}
inline const ::common::common_ask_header& user_action_ask::ask_header() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_action_ask.ask_header)
  return ask_header_ != NULL ? *ask_header_ : *default_instance_->ask_header_;
}
inline ::common::common_ask_header* user_action_ask::mutable_ask_header() {
  set_has_ask_header();
  if (ask_header_ == NULL) ask_header_ = new ::common::common_ask_header;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.user_action_ask.ask_header)
  return ask_header_;
}
inline ::common::common_ask_header* user_action_ask::release_ask_header() {
  clear_has_ask_header();
  ::common::common_ask_header* temp = ask_header_;
  ask_header_ = NULL;
  return temp;
}
inline void user_action_ask::set_allocated_ask_header(::common::common_ask_header* ask_header) {
  delete ask_header_;
  ask_header_ = ask_header;
  if (ask_header) {
    set_has_ask_header();
  } else {
    clear_has_ask_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.user_action_ask.ask_header)
}

// -------------------------------------------------------------------

// location_info_ans

// repeated .ODP_user_portrayal.location_info location_list = 1;
inline int location_info_ans::location_list_size() const {
  return location_list_.size();
}
inline void location_info_ans::clear_location_list() {
  location_list_.Clear();
}
inline const ::ODP_user_portrayal::location_info& location_info_ans::location_list(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.location_info_ans.location_list)
  return location_list_.Get(index);
}
inline ::ODP_user_portrayal::location_info* location_info_ans::mutable_location_list(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.location_info_ans.location_list)
  return location_list_.Mutable(index);
}
inline ::ODP_user_portrayal::location_info* location_info_ans::add_location_list() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.location_info_ans.location_list)
  return location_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::location_info >&
location_info_ans::location_list() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.location_info_ans.location_list)
  return location_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::location_info >*
location_info_ans::mutable_location_list() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.location_info_ans.location_list)
  return &location_list_;
}

// optional .common.result_info result = 2;
inline bool location_info_ans::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void location_info_ans::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void location_info_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void location_info_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& location_info_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.location_info_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* location_info_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.location_info_ans.result)
  return result_;
}
inline ::common::result_info* location_info_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void location_info_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.location_info_ans.result)
}

// -------------------------------------------------------------------

// user_version_info_ans

// repeated .ODP_user_portrayal.version_info version_list = 1;
inline int user_version_info_ans::version_list_size() const {
  return version_list_.size();
}
inline void user_version_info_ans::clear_version_list() {
  version_list_.Clear();
}
inline const ::ODP_user_portrayal::version_info& user_version_info_ans::version_list(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_version_info_ans.version_list)
  return version_list_.Get(index);
}
inline ::ODP_user_portrayal::version_info* user_version_info_ans::mutable_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.user_version_info_ans.version_list)
  return version_list_.Mutable(index);
}
inline ::ODP_user_portrayal::version_info* user_version_info_ans::add_version_list() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.user_version_info_ans.version_list)
  return version_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::version_info >&
user_version_info_ans::version_list() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.user_version_info_ans.version_list)
  return version_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::version_info >*
user_version_info_ans::mutable_version_list() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.user_version_info_ans.version_list)
  return &version_list_;
}

// optional .common.result_info result = 2;
inline bool user_version_info_ans::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_version_info_ans::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_version_info_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_version_info_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& user_version_info_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.user_version_info_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* user_version_info_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.user_version_info_ans.result)
  return result_;
}
inline ::common::result_info* user_version_info_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void user_version_info_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.user_version_info_ans.result)
}

// -------------------------------------------------------------------

// login_analysis_ans

// optional int32 login_num = 1;
inline bool login_analysis_ans::has_login_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_analysis_ans::set_has_login_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_analysis_ans::clear_has_login_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_analysis_ans::clear_login_num() {
  login_num_ = 0;
  clear_has_login_num();
}
inline ::google::protobuf::int32 login_analysis_ans::login_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.login_num)
  return login_num_;
}
inline void login_analysis_ans::set_login_num(::google::protobuf::int32 value) {
  set_has_login_num();
  login_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.login_num)
}

// optional int32 login_days = 2;
inline bool login_analysis_ans::has_login_days() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void login_analysis_ans::set_has_login_days() {
  _has_bits_[0] |= 0x00000002u;
}
inline void login_analysis_ans::clear_has_login_days() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void login_analysis_ans::clear_login_days() {
  login_days_ = 0;
  clear_has_login_days();
}
inline ::google::protobuf::int32 login_analysis_ans::login_days() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.login_days)
  return login_days_;
}
inline void login_analysis_ans::set_login_days(::google::protobuf::int32 value) {
  set_has_login_days();
  login_days_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.login_days)
}

// optional float login_frequency = 3;
inline bool login_analysis_ans::has_login_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void login_analysis_ans::set_has_login_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void login_analysis_ans::clear_has_login_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void login_analysis_ans::clear_login_frequency() {
  login_frequency_ = 0;
  clear_has_login_frequency();
}
inline float login_analysis_ans::login_frequency() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.login_frequency)
  return login_frequency_;
}
inline void login_analysis_ans::set_login_frequency(float value) {
  set_has_login_frequency();
  login_frequency_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.login_frequency)
}

// optional bytes last_login_time = 4;
inline bool login_analysis_ans::has_last_login_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void login_analysis_ans::set_has_last_login_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void login_analysis_ans::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void login_analysis_ans::clear_last_login_time() {
  if (last_login_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_login_time_->clear();
  }
  clear_has_last_login_time();
}
inline const ::std::string& login_analysis_ans::last_login_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.last_login_time)
  return *last_login_time_;
}
inline void login_analysis_ans::set_last_login_time(const ::std::string& value) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.last_login_time)
}
inline void login_analysis_ans::set_last_login_time(const char* value) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.login_analysis_ans.last_login_time)
}
inline void login_analysis_ans::set_last_login_time(const void* value, size_t size) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.login_analysis_ans.last_login_time)
}
inline ::std::string* login_analysis_ans::mutable_last_login_time() {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_login_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.last_login_time)
  return last_login_time_;
}
inline ::std::string* login_analysis_ans::release_last_login_time() {
  clear_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_login_time_;
    last_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void login_analysis_ans::set_allocated_last_login_time(::std::string* last_login_time) {
  if (last_login_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_login_time_;
  }
  if (last_login_time) {
    set_has_last_login_time();
    last_login_time_ = last_login_time;
  } else {
    clear_has_last_login_time();
    last_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.login_analysis_ans.last_login_time)
}

// optional bytes first_login_time = 5;
inline bool login_analysis_ans::has_first_login_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void login_analysis_ans::set_has_first_login_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void login_analysis_ans::clear_has_first_login_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void login_analysis_ans::clear_first_login_time() {
  if (first_login_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_login_time_->clear();
  }
  clear_has_first_login_time();
}
inline const ::std::string& login_analysis_ans::first_login_time() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.first_login_time)
  return *first_login_time_;
}
inline void login_analysis_ans::set_first_login_time(const ::std::string& value) {
  set_has_first_login_time();
  if (first_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_login_time_ = new ::std::string;
  }
  first_login_time_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.first_login_time)
}
inline void login_analysis_ans::set_first_login_time(const char* value) {
  set_has_first_login_time();
  if (first_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_login_time_ = new ::std::string;
  }
  first_login_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.login_analysis_ans.first_login_time)
}
inline void login_analysis_ans::set_first_login_time(const void* value, size_t size) {
  set_has_first_login_time();
  if (first_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_login_time_ = new ::std::string;
  }
  first_login_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.login_analysis_ans.first_login_time)
}
inline ::std::string* login_analysis_ans::mutable_first_login_time() {
  set_has_first_login_time();
  if (first_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_login_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.first_login_time)
  return first_login_time_;
}
inline ::std::string* login_analysis_ans::release_first_login_time() {
  clear_has_first_login_time();
  if (first_login_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = first_login_time_;
    first_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void login_analysis_ans::set_allocated_first_login_time(::std::string* first_login_time) {
  if (first_login_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete first_login_time_;
  }
  if (first_login_time) {
    set_has_first_login_time();
    first_login_time_ = first_login_time;
  } else {
    clear_has_first_login_time();
    first_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.login_analysis_ans.first_login_time)
}

// optional int32 silent_days = 6;
inline bool login_analysis_ans::has_silent_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void login_analysis_ans::set_has_silent_days() {
  _has_bits_[0] |= 0x00000020u;
}
inline void login_analysis_ans::clear_has_silent_days() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void login_analysis_ans::clear_silent_days() {
  silent_days_ = 0;
  clear_has_silent_days();
}
inline ::google::protobuf::int32 login_analysis_ans::silent_days() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.silent_days)
  return silent_days_;
}
inline void login_analysis_ans::set_silent_days(::google::protobuf::int32 value) {
  set_has_silent_days();
  silent_days_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.silent_days)
}

// repeated bytes week_most_login = 7;
inline int login_analysis_ans::week_most_login_size() const {
  return week_most_login_.size();
}
inline void login_analysis_ans::clear_week_most_login() {
  week_most_login_.Clear();
}
inline const ::std::string& login_analysis_ans::week_most_login(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.week_most_login)
  return week_most_login_.Get(index);
}
inline ::std::string* login_analysis_ans::mutable_week_most_login(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.week_most_login)
  return week_most_login_.Mutable(index);
}
inline void login_analysis_ans::set_week_most_login(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.week_most_login)
  week_most_login_.Mutable(index)->assign(value);
}
inline void login_analysis_ans::set_week_most_login(int index, const char* value) {
  week_most_login_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.login_analysis_ans.week_most_login)
}
inline void login_analysis_ans::set_week_most_login(int index, const void* value, size_t size) {
  week_most_login_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.login_analysis_ans.week_most_login)
}
inline ::std::string* login_analysis_ans::add_week_most_login() {
  return week_most_login_.Add();
}
inline void login_analysis_ans::add_week_most_login(const ::std::string& value) {
  week_most_login_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.login_analysis_ans.week_most_login)
}
inline void login_analysis_ans::add_week_most_login(const char* value) {
  week_most_login_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ODP_user_portrayal.login_analysis_ans.week_most_login)
}
inline void login_analysis_ans::add_week_most_login(const void* value, size_t size) {
  week_most_login_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ODP_user_portrayal.login_analysis_ans.week_most_login)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
login_analysis_ans::week_most_login() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.login_analysis_ans.week_most_login)
  return week_most_login_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
login_analysis_ans::mutable_week_most_login() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.login_analysis_ans.week_most_login)
  return &week_most_login_;
}

// repeated bytes day_most_action = 8;
inline int login_analysis_ans::day_most_action_size() const {
  return day_most_action_.size();
}
inline void login_analysis_ans::clear_day_most_action() {
  day_most_action_.Clear();
}
inline const ::std::string& login_analysis_ans::day_most_action(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.day_most_action)
  return day_most_action_.Get(index);
}
inline ::std::string* login_analysis_ans::mutable_day_most_action(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.day_most_action)
  return day_most_action_.Mutable(index);
}
inline void login_analysis_ans::set_day_most_action(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.login_analysis_ans.day_most_action)
  day_most_action_.Mutable(index)->assign(value);
}
inline void login_analysis_ans::set_day_most_action(int index, const char* value) {
  day_most_action_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.login_analysis_ans.day_most_action)
}
inline void login_analysis_ans::set_day_most_action(int index, const void* value, size_t size) {
  day_most_action_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.login_analysis_ans.day_most_action)
}
inline ::std::string* login_analysis_ans::add_day_most_action() {
  return day_most_action_.Add();
}
inline void login_analysis_ans::add_day_most_action(const ::std::string& value) {
  day_most_action_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.login_analysis_ans.day_most_action)
}
inline void login_analysis_ans::add_day_most_action(const char* value) {
  day_most_action_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ODP_user_portrayal.login_analysis_ans.day_most_action)
}
inline void login_analysis_ans::add_day_most_action(const void* value, size_t size) {
  day_most_action_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ODP_user_portrayal.login_analysis_ans.day_most_action)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
login_analysis_ans::day_most_action() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.login_analysis_ans.day_most_action)
  return day_most_action_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
login_analysis_ans::mutable_day_most_action() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.login_analysis_ans.day_most_action)
  return &day_most_action_;
}

// repeated .ODP_user_portrayal.statistics_common_info week_info = 9;
inline int login_analysis_ans::week_info_size() const {
  return week_info_.size();
}
inline void login_analysis_ans::clear_week_info() {
  week_info_.Clear();
}
inline const ::ODP_user_portrayal::statistics_common_info& login_analysis_ans::week_info(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.week_info)
  return week_info_.Get(index);
}
inline ::ODP_user_portrayal::statistics_common_info* login_analysis_ans::mutable_week_info(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.week_info)
  return week_info_.Mutable(index);
}
inline ::ODP_user_portrayal::statistics_common_info* login_analysis_ans::add_week_info() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.login_analysis_ans.week_info)
  return week_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >&
login_analysis_ans::week_info() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.login_analysis_ans.week_info)
  return week_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >*
login_analysis_ans::mutable_week_info() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.login_analysis_ans.week_info)
  return &week_info_;
}

// repeated .ODP_user_portrayal.statistics_common_info day_info = 10;
inline int login_analysis_ans::day_info_size() const {
  return day_info_.size();
}
inline void login_analysis_ans::clear_day_info() {
  day_info_.Clear();
}
inline const ::ODP_user_portrayal::statistics_common_info& login_analysis_ans::day_info(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.day_info)
  return day_info_.Get(index);
}
inline ::ODP_user_portrayal::statistics_common_info* login_analysis_ans::mutable_day_info(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.day_info)
  return day_info_.Mutable(index);
}
inline ::ODP_user_portrayal::statistics_common_info* login_analysis_ans::add_day_info() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.login_analysis_ans.day_info)
  return day_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >&
login_analysis_ans::day_info() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.login_analysis_ans.day_info)
  return day_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::statistics_common_info >*
login_analysis_ans::mutable_day_info() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.login_analysis_ans.day_info)
  return &day_info_;
}

// optional .common.result_info result = 11;
inline bool login_analysis_ans::has_result() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void login_analysis_ans::set_has_result() {
  _has_bits_[0] |= 0x00000400u;
}
inline void login_analysis_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void login_analysis_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& login_analysis_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.login_analysis_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* login_analysis_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.login_analysis_ans.result)
  return result_;
}
inline ::common::result_info* login_analysis_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void login_analysis_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.login_analysis_ans.result)
}

// -------------------------------------------------------------------

// business_predilection_ans

// optional bytes invest_interval = 1;
inline bool business_predilection_ans::has_invest_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void business_predilection_ans::set_has_invest_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void business_predilection_ans::clear_has_invest_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void business_predilection_ans::clear_invest_interval() {
  if (invest_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_interval_->clear();
  }
  clear_has_invest_interval();
}
inline const ::std::string& business_predilection_ans::invest_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.invest_interval)
  return *invest_interval_;
}
inline void business_predilection_ans::set_invest_interval(const ::std::string& value) {
  set_has_invest_interval();
  if (invest_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_interval_ = new ::std::string;
  }
  invest_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.invest_interval)
}
inline void business_predilection_ans::set_invest_interval(const char* value) {
  set_has_invest_interval();
  if (invest_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_interval_ = new ::std::string;
  }
  invest_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.invest_interval)
}
inline void business_predilection_ans::set_invest_interval(const void* value, size_t size) {
  set_has_invest_interval();
  if (invest_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_interval_ = new ::std::string;
  }
  invest_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.invest_interval)
}
inline ::std::string* business_predilection_ans::mutable_invest_interval() {
  set_has_invest_interval();
  if (invest_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.invest_interval)
  return invest_interval_;
}
inline ::std::string* business_predilection_ans::release_invest_interval() {
  clear_has_invest_interval();
  if (invest_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invest_interval_;
    invest_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_invest_interval(::std::string* invest_interval) {
  if (invest_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invest_interval_;
  }
  if (invest_interval) {
    set_has_invest_interval();
    invest_interval_ = invest_interval;
  } else {
    clear_has_invest_interval();
    invest_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.invest_interval)
}

// optional bytes invest_rate = 2;
inline bool business_predilection_ans::has_invest_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void business_predilection_ans::set_has_invest_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void business_predilection_ans::clear_has_invest_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void business_predilection_ans::clear_invest_rate() {
  if (invest_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_rate_->clear();
  }
  clear_has_invest_rate();
}
inline const ::std::string& business_predilection_ans::invest_rate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.invest_rate)
  return *invest_rate_;
}
inline void business_predilection_ans::set_invest_rate(const ::std::string& value) {
  set_has_invest_rate();
  if (invest_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_rate_ = new ::std::string;
  }
  invest_rate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.invest_rate)
}
inline void business_predilection_ans::set_invest_rate(const char* value) {
  set_has_invest_rate();
  if (invest_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_rate_ = new ::std::string;
  }
  invest_rate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.invest_rate)
}
inline void business_predilection_ans::set_invest_rate(const void* value, size_t size) {
  set_has_invest_rate();
  if (invest_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_rate_ = new ::std::string;
  }
  invest_rate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.invest_rate)
}
inline ::std::string* business_predilection_ans::mutable_invest_rate() {
  set_has_invest_rate();
  if (invest_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invest_rate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.invest_rate)
  return invest_rate_;
}
inline ::std::string* business_predilection_ans::release_invest_rate() {
  clear_has_invest_rate();
  if (invest_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invest_rate_;
    invest_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_invest_rate(::std::string* invest_rate) {
  if (invest_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invest_rate_;
  }
  if (invest_rate) {
    set_has_invest_rate();
    invest_rate_ = invest_rate;
  } else {
    clear_has_invest_rate();
    invest_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.invest_rate)
}

// optional bytes time_type = 3;
inline bool business_predilection_ans::has_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void business_predilection_ans::set_has_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void business_predilection_ans::clear_has_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void business_predilection_ans::clear_time_type() {
  if (time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_type_->clear();
  }
  clear_has_time_type();
}
inline const ::std::string& business_predilection_ans::time_type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.time_type)
  return *time_type_;
}
inline void business_predilection_ans::set_time_type(const ::std::string& value) {
  set_has_time_type();
  if (time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_type_ = new ::std::string;
  }
  time_type_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.time_type)
}
inline void business_predilection_ans::set_time_type(const char* value) {
  set_has_time_type();
  if (time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_type_ = new ::std::string;
  }
  time_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.time_type)
}
inline void business_predilection_ans::set_time_type(const void* value, size_t size) {
  set_has_time_type();
  if (time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_type_ = new ::std::string;
  }
  time_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.time_type)
}
inline ::std::string* business_predilection_ans::mutable_time_type() {
  set_has_time_type();
  if (time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.time_type)
  return time_type_;
}
inline ::std::string* business_predilection_ans::release_time_type() {
  clear_has_time_type();
  if (time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_type_;
    time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_time_type(::std::string* time_type) {
  if (time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_type_;
  }
  if (time_type) {
    set_has_time_type();
    time_type_ = time_type;
  } else {
    clear_has_time_type();
    time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.time_type)
}

// optional bytes amount_interval = 4;
inline bool business_predilection_ans::has_amount_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void business_predilection_ans::set_has_amount_interval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void business_predilection_ans::clear_has_amount_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void business_predilection_ans::clear_amount_interval() {
  if (amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    amount_interval_->clear();
  }
  clear_has_amount_interval();
}
inline const ::std::string& business_predilection_ans::amount_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.amount_interval)
  return *amount_interval_;
}
inline void business_predilection_ans::set_amount_interval(const ::std::string& value) {
  set_has_amount_interval();
  if (amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    amount_interval_ = new ::std::string;
  }
  amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.amount_interval)
}
inline void business_predilection_ans::set_amount_interval(const char* value) {
  set_has_amount_interval();
  if (amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    amount_interval_ = new ::std::string;
  }
  amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.amount_interval)
}
inline void business_predilection_ans::set_amount_interval(const void* value, size_t size) {
  set_has_amount_interval();
  if (amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    amount_interval_ = new ::std::string;
  }
  amount_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.amount_interval)
}
inline ::std::string* business_predilection_ans::mutable_amount_interval() {
  set_has_amount_interval();
  if (amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    amount_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.amount_interval)
  return amount_interval_;
}
inline ::std::string* business_predilection_ans::release_amount_interval() {
  clear_has_amount_interval();
  if (amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = amount_interval_;
    amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_amount_interval(::std::string* amount_interval) {
  if (amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete amount_interval_;
  }
  if (amount_interval) {
    set_has_amount_interval();
    amount_interval_ = amount_interval;
  } else {
    clear_has_amount_interval();
    amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.amount_interval)
}

// optional bytes garantee_interval = 5;
inline bool business_predilection_ans::has_garantee_interval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void business_predilection_ans::set_has_garantee_interval() {
  _has_bits_[0] |= 0x00000010u;
}
inline void business_predilection_ans::clear_has_garantee_interval() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void business_predilection_ans::clear_garantee_interval() {
  if (garantee_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_interval_->clear();
  }
  clear_has_garantee_interval();
}
inline const ::std::string& business_predilection_ans::garantee_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.garantee_interval)
  return *garantee_interval_;
}
inline void business_predilection_ans::set_garantee_interval(const ::std::string& value) {
  set_has_garantee_interval();
  if (garantee_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_interval_ = new ::std::string;
  }
  garantee_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.garantee_interval)
}
inline void business_predilection_ans::set_garantee_interval(const char* value) {
  set_has_garantee_interval();
  if (garantee_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_interval_ = new ::std::string;
  }
  garantee_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.garantee_interval)
}
inline void business_predilection_ans::set_garantee_interval(const void* value, size_t size) {
  set_has_garantee_interval();
  if (garantee_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_interval_ = new ::std::string;
  }
  garantee_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.garantee_interval)
}
inline ::std::string* business_predilection_ans::mutable_garantee_interval() {
  set_has_garantee_interval();
  if (garantee_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.garantee_interval)
  return garantee_interval_;
}
inline ::std::string* business_predilection_ans::release_garantee_interval() {
  clear_has_garantee_interval();
  if (garantee_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = garantee_interval_;
    garantee_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_garantee_interval(::std::string* garantee_interval) {
  if (garantee_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete garantee_interval_;
  }
  if (garantee_interval) {
    set_has_garantee_interval();
    garantee_interval_ = garantee_interval;
  } else {
    clear_has_garantee_interval();
    garantee_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.garantee_interval)
}

// optional bytes garantee_rate = 6;
inline bool business_predilection_ans::has_garantee_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void business_predilection_ans::set_has_garantee_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void business_predilection_ans::clear_has_garantee_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void business_predilection_ans::clear_garantee_rate() {
  if (garantee_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_rate_->clear();
  }
  clear_has_garantee_rate();
}
inline const ::std::string& business_predilection_ans::garantee_rate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.garantee_rate)
  return *garantee_rate_;
}
inline void business_predilection_ans::set_garantee_rate(const ::std::string& value) {
  set_has_garantee_rate();
  if (garantee_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_rate_ = new ::std::string;
  }
  garantee_rate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.garantee_rate)
}
inline void business_predilection_ans::set_garantee_rate(const char* value) {
  set_has_garantee_rate();
  if (garantee_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_rate_ = new ::std::string;
  }
  garantee_rate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.garantee_rate)
}
inline void business_predilection_ans::set_garantee_rate(const void* value, size_t size) {
  set_has_garantee_rate();
  if (garantee_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_rate_ = new ::std::string;
  }
  garantee_rate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.garantee_rate)
}
inline ::std::string* business_predilection_ans::mutable_garantee_rate() {
  set_has_garantee_rate();
  if (garantee_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_rate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.garantee_rate)
  return garantee_rate_;
}
inline ::std::string* business_predilection_ans::release_garantee_rate() {
  clear_has_garantee_rate();
  if (garantee_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = garantee_rate_;
    garantee_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_garantee_rate(::std::string* garantee_rate) {
  if (garantee_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete garantee_rate_;
  }
  if (garantee_rate) {
    set_has_garantee_rate();
    garantee_rate_ = garantee_rate;
  } else {
    clear_has_garantee_rate();
    garantee_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.garantee_rate)
}

// optional bytes garantee_time_type = 7;
inline bool business_predilection_ans::has_garantee_time_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void business_predilection_ans::set_has_garantee_time_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void business_predilection_ans::clear_has_garantee_time_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void business_predilection_ans::clear_garantee_time_type() {
  if (garantee_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_time_type_->clear();
  }
  clear_has_garantee_time_type();
}
inline const ::std::string& business_predilection_ans::garantee_time_type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
  return *garantee_time_type_;
}
inline void business_predilection_ans::set_garantee_time_type(const ::std::string& value) {
  set_has_garantee_time_type();
  if (garantee_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_time_type_ = new ::std::string;
  }
  garantee_time_type_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
}
inline void business_predilection_ans::set_garantee_time_type(const char* value) {
  set_has_garantee_time_type();
  if (garantee_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_time_type_ = new ::std::string;
  }
  garantee_time_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
}
inline void business_predilection_ans::set_garantee_time_type(const void* value, size_t size) {
  set_has_garantee_time_type();
  if (garantee_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_time_type_ = new ::std::string;
  }
  garantee_time_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
}
inline ::std::string* business_predilection_ans::mutable_garantee_time_type() {
  set_has_garantee_time_type();
  if (garantee_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_time_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
  return garantee_time_type_;
}
inline ::std::string* business_predilection_ans::release_garantee_time_type() {
  clear_has_garantee_time_type();
  if (garantee_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = garantee_time_type_;
    garantee_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_garantee_time_type(::std::string* garantee_time_type) {
  if (garantee_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete garantee_time_type_;
  }
  if (garantee_time_type) {
    set_has_garantee_time_type();
    garantee_time_type_ = garantee_time_type;
  } else {
    clear_has_garantee_time_type();
    garantee_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.garantee_time_type)
}

// optional bytes garantee_amount_interval = 8;
inline bool business_predilection_ans::has_garantee_amount_interval() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void business_predilection_ans::set_has_garantee_amount_interval() {
  _has_bits_[0] |= 0x00000080u;
}
inline void business_predilection_ans::clear_has_garantee_amount_interval() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void business_predilection_ans::clear_garantee_amount_interval() {
  if (garantee_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_amount_interval_->clear();
  }
  clear_has_garantee_amount_interval();
}
inline const ::std::string& business_predilection_ans::garantee_amount_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
  return *garantee_amount_interval_;
}
inline void business_predilection_ans::set_garantee_amount_interval(const ::std::string& value) {
  set_has_garantee_amount_interval();
  if (garantee_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_amount_interval_ = new ::std::string;
  }
  garantee_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
}
inline void business_predilection_ans::set_garantee_amount_interval(const char* value) {
  set_has_garantee_amount_interval();
  if (garantee_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_amount_interval_ = new ::std::string;
  }
  garantee_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
}
inline void business_predilection_ans::set_garantee_amount_interval(const void* value, size_t size) {
  set_has_garantee_amount_interval();
  if (garantee_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_amount_interval_ = new ::std::string;
  }
  garantee_amount_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
}
inline ::std::string* business_predilection_ans::mutable_garantee_amount_interval() {
  set_has_garantee_amount_interval();
  if (garantee_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    garantee_amount_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
  return garantee_amount_interval_;
}
inline ::std::string* business_predilection_ans::release_garantee_amount_interval() {
  clear_has_garantee_amount_interval();
  if (garantee_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = garantee_amount_interval_;
    garantee_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_garantee_amount_interval(::std::string* garantee_amount_interval) {
  if (garantee_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete garantee_amount_interval_;
  }
  if (garantee_amount_interval) {
    set_has_garantee_amount_interval();
    garantee_amount_interval_ = garantee_amount_interval;
  } else {
    clear_has_garantee_amount_interval();
    garantee_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.garantee_amount_interval)
}

// optional bytes jd_interval = 9;
inline bool business_predilection_ans::has_jd_interval() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void business_predilection_ans::set_has_jd_interval() {
  _has_bits_[0] |= 0x00000100u;
}
inline void business_predilection_ans::clear_has_jd_interval() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void business_predilection_ans::clear_jd_interval() {
  if (jd_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_interval_->clear();
  }
  clear_has_jd_interval();
}
inline const ::std::string& business_predilection_ans::jd_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.jd_interval)
  return *jd_interval_;
}
inline void business_predilection_ans::set_jd_interval(const ::std::string& value) {
  set_has_jd_interval();
  if (jd_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_interval_ = new ::std::string;
  }
  jd_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.jd_interval)
}
inline void business_predilection_ans::set_jd_interval(const char* value) {
  set_has_jd_interval();
  if (jd_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_interval_ = new ::std::string;
  }
  jd_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.jd_interval)
}
inline void business_predilection_ans::set_jd_interval(const void* value, size_t size) {
  set_has_jd_interval();
  if (jd_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_interval_ = new ::std::string;
  }
  jd_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.jd_interval)
}
inline ::std::string* business_predilection_ans::mutable_jd_interval() {
  set_has_jd_interval();
  if (jd_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.jd_interval)
  return jd_interval_;
}
inline ::std::string* business_predilection_ans::release_jd_interval() {
  clear_has_jd_interval();
  if (jd_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_interval_;
    jd_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_jd_interval(::std::string* jd_interval) {
  if (jd_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_interval_;
  }
  if (jd_interval) {
    set_has_jd_interval();
    jd_interval_ = jd_interval;
  } else {
    clear_has_jd_interval();
    jd_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.jd_interval)
}

// optional bytes jd_rate = 10;
inline bool business_predilection_ans::has_jd_rate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void business_predilection_ans::set_has_jd_rate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void business_predilection_ans::clear_has_jd_rate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void business_predilection_ans::clear_jd_rate() {
  if (jd_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_rate_->clear();
  }
  clear_has_jd_rate();
}
inline const ::std::string& business_predilection_ans::jd_rate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.jd_rate)
  return *jd_rate_;
}
inline void business_predilection_ans::set_jd_rate(const ::std::string& value) {
  set_has_jd_rate();
  if (jd_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_rate_ = new ::std::string;
  }
  jd_rate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.jd_rate)
}
inline void business_predilection_ans::set_jd_rate(const char* value) {
  set_has_jd_rate();
  if (jd_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_rate_ = new ::std::string;
  }
  jd_rate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.jd_rate)
}
inline void business_predilection_ans::set_jd_rate(const void* value, size_t size) {
  set_has_jd_rate();
  if (jd_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_rate_ = new ::std::string;
  }
  jd_rate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.jd_rate)
}
inline ::std::string* business_predilection_ans::mutable_jd_rate() {
  set_has_jd_rate();
  if (jd_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_rate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.jd_rate)
  return jd_rate_;
}
inline ::std::string* business_predilection_ans::release_jd_rate() {
  clear_has_jd_rate();
  if (jd_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_rate_;
    jd_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_jd_rate(::std::string* jd_rate) {
  if (jd_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_rate_;
  }
  if (jd_rate) {
    set_has_jd_rate();
    jd_rate_ = jd_rate;
  } else {
    clear_has_jd_rate();
    jd_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.jd_rate)
}

// optional bytes jd_time_type = 11;
inline bool business_predilection_ans::has_jd_time_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void business_predilection_ans::set_has_jd_time_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void business_predilection_ans::clear_has_jd_time_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void business_predilection_ans::clear_jd_time_type() {
  if (jd_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_time_type_->clear();
  }
  clear_has_jd_time_type();
}
inline const ::std::string& business_predilection_ans::jd_time_type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.jd_time_type)
  return *jd_time_type_;
}
inline void business_predilection_ans::set_jd_time_type(const ::std::string& value) {
  set_has_jd_time_type();
  if (jd_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_time_type_ = new ::std::string;
  }
  jd_time_type_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.jd_time_type)
}
inline void business_predilection_ans::set_jd_time_type(const char* value) {
  set_has_jd_time_type();
  if (jd_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_time_type_ = new ::std::string;
  }
  jd_time_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.jd_time_type)
}
inline void business_predilection_ans::set_jd_time_type(const void* value, size_t size) {
  set_has_jd_time_type();
  if (jd_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_time_type_ = new ::std::string;
  }
  jd_time_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.jd_time_type)
}
inline ::std::string* business_predilection_ans::mutable_jd_time_type() {
  set_has_jd_time_type();
  if (jd_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_time_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.jd_time_type)
  return jd_time_type_;
}
inline ::std::string* business_predilection_ans::release_jd_time_type() {
  clear_has_jd_time_type();
  if (jd_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_time_type_;
    jd_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_jd_time_type(::std::string* jd_time_type) {
  if (jd_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_time_type_;
  }
  if (jd_time_type) {
    set_has_jd_time_type();
    jd_time_type_ = jd_time_type;
  } else {
    clear_has_jd_time_type();
    jd_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.jd_time_type)
}

// optional bytes jd_amount_interval = 12;
inline bool business_predilection_ans::has_jd_amount_interval() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void business_predilection_ans::set_has_jd_amount_interval() {
  _has_bits_[0] |= 0x00000800u;
}
inline void business_predilection_ans::clear_has_jd_amount_interval() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void business_predilection_ans::clear_jd_amount_interval() {
  if (jd_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_amount_interval_->clear();
  }
  clear_has_jd_amount_interval();
}
inline const ::std::string& business_predilection_ans::jd_amount_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
  return *jd_amount_interval_;
}
inline void business_predilection_ans::set_jd_amount_interval(const ::std::string& value) {
  set_has_jd_amount_interval();
  if (jd_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_amount_interval_ = new ::std::string;
  }
  jd_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
}
inline void business_predilection_ans::set_jd_amount_interval(const char* value) {
  set_has_jd_amount_interval();
  if (jd_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_amount_interval_ = new ::std::string;
  }
  jd_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
}
inline void business_predilection_ans::set_jd_amount_interval(const void* value, size_t size) {
  set_has_jd_amount_interval();
  if (jd_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_amount_interval_ = new ::std::string;
  }
  jd_amount_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
}
inline ::std::string* business_predilection_ans::mutable_jd_amount_interval() {
  set_has_jd_amount_interval();
  if (jd_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jd_amount_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
  return jd_amount_interval_;
}
inline ::std::string* business_predilection_ans::release_jd_amount_interval() {
  clear_has_jd_amount_interval();
  if (jd_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jd_amount_interval_;
    jd_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_jd_amount_interval(::std::string* jd_amount_interval) {
  if (jd_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jd_amount_interval_;
  }
  if (jd_amount_interval) {
    set_has_jd_amount_interval();
    jd_amount_interval_ = jd_amount_interval;
  } else {
    clear_has_jd_amount_interval();
    jd_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.jd_amount_interval)
}

// optional bytes loan_interval = 13;
inline bool business_predilection_ans::has_loan_interval() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void business_predilection_ans::set_has_loan_interval() {
  _has_bits_[0] |= 0x00001000u;
}
inline void business_predilection_ans::clear_has_loan_interval() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void business_predilection_ans::clear_loan_interval() {
  if (loan_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_interval_->clear();
  }
  clear_has_loan_interval();
}
inline const ::std::string& business_predilection_ans::loan_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.loan_interval)
  return *loan_interval_;
}
inline void business_predilection_ans::set_loan_interval(const ::std::string& value) {
  set_has_loan_interval();
  if (loan_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_interval_ = new ::std::string;
  }
  loan_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.loan_interval)
}
inline void business_predilection_ans::set_loan_interval(const char* value) {
  set_has_loan_interval();
  if (loan_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_interval_ = new ::std::string;
  }
  loan_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.loan_interval)
}
inline void business_predilection_ans::set_loan_interval(const void* value, size_t size) {
  set_has_loan_interval();
  if (loan_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_interval_ = new ::std::string;
  }
  loan_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.loan_interval)
}
inline ::std::string* business_predilection_ans::mutable_loan_interval() {
  set_has_loan_interval();
  if (loan_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.loan_interval)
  return loan_interval_;
}
inline ::std::string* business_predilection_ans::release_loan_interval() {
  clear_has_loan_interval();
  if (loan_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loan_interval_;
    loan_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_loan_interval(::std::string* loan_interval) {
  if (loan_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loan_interval_;
  }
  if (loan_interval) {
    set_has_loan_interval();
    loan_interval_ = loan_interval;
  } else {
    clear_has_loan_interval();
    loan_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.loan_interval)
}

// optional bytes loan_rate = 14;
inline bool business_predilection_ans::has_loan_rate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void business_predilection_ans::set_has_loan_rate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void business_predilection_ans::clear_has_loan_rate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void business_predilection_ans::clear_loan_rate() {
  if (loan_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_rate_->clear();
  }
  clear_has_loan_rate();
}
inline const ::std::string& business_predilection_ans::loan_rate() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.loan_rate)
  return *loan_rate_;
}
inline void business_predilection_ans::set_loan_rate(const ::std::string& value) {
  set_has_loan_rate();
  if (loan_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_rate_ = new ::std::string;
  }
  loan_rate_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.loan_rate)
}
inline void business_predilection_ans::set_loan_rate(const char* value) {
  set_has_loan_rate();
  if (loan_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_rate_ = new ::std::string;
  }
  loan_rate_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.loan_rate)
}
inline void business_predilection_ans::set_loan_rate(const void* value, size_t size) {
  set_has_loan_rate();
  if (loan_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_rate_ = new ::std::string;
  }
  loan_rate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.loan_rate)
}
inline ::std::string* business_predilection_ans::mutable_loan_rate() {
  set_has_loan_rate();
  if (loan_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_rate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.loan_rate)
  return loan_rate_;
}
inline ::std::string* business_predilection_ans::release_loan_rate() {
  clear_has_loan_rate();
  if (loan_rate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loan_rate_;
    loan_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_loan_rate(::std::string* loan_rate) {
  if (loan_rate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loan_rate_;
  }
  if (loan_rate) {
    set_has_loan_rate();
    loan_rate_ = loan_rate;
  } else {
    clear_has_loan_rate();
    loan_rate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.loan_rate)
}

// optional bytes loan_time_type = 15;
inline bool business_predilection_ans::has_loan_time_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void business_predilection_ans::set_has_loan_time_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void business_predilection_ans::clear_has_loan_time_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void business_predilection_ans::clear_loan_time_type() {
  if (loan_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_time_type_->clear();
  }
  clear_has_loan_time_type();
}
inline const ::std::string& business_predilection_ans::loan_time_type() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.loan_time_type)
  return *loan_time_type_;
}
inline void business_predilection_ans::set_loan_time_type(const ::std::string& value) {
  set_has_loan_time_type();
  if (loan_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_time_type_ = new ::std::string;
  }
  loan_time_type_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.loan_time_type)
}
inline void business_predilection_ans::set_loan_time_type(const char* value) {
  set_has_loan_time_type();
  if (loan_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_time_type_ = new ::std::string;
  }
  loan_time_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.loan_time_type)
}
inline void business_predilection_ans::set_loan_time_type(const void* value, size_t size) {
  set_has_loan_time_type();
  if (loan_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_time_type_ = new ::std::string;
  }
  loan_time_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.loan_time_type)
}
inline ::std::string* business_predilection_ans::mutable_loan_time_type() {
  set_has_loan_time_type();
  if (loan_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_time_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.loan_time_type)
  return loan_time_type_;
}
inline ::std::string* business_predilection_ans::release_loan_time_type() {
  clear_has_loan_time_type();
  if (loan_time_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loan_time_type_;
    loan_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_loan_time_type(::std::string* loan_time_type) {
  if (loan_time_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loan_time_type_;
  }
  if (loan_time_type) {
    set_has_loan_time_type();
    loan_time_type_ = loan_time_type;
  } else {
    clear_has_loan_time_type();
    loan_time_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.loan_time_type)
}

// optional bytes loan_amount_interval = 16;
inline bool business_predilection_ans::has_loan_amount_interval() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void business_predilection_ans::set_has_loan_amount_interval() {
  _has_bits_[0] |= 0x00008000u;
}
inline void business_predilection_ans::clear_has_loan_amount_interval() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void business_predilection_ans::clear_loan_amount_interval() {
  if (loan_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_amount_interval_->clear();
  }
  clear_has_loan_amount_interval();
}
inline const ::std::string& business_predilection_ans::loan_amount_interval() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
  return *loan_amount_interval_;
}
inline void business_predilection_ans::set_loan_amount_interval(const ::std::string& value) {
  set_has_loan_amount_interval();
  if (loan_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_amount_interval_ = new ::std::string;
  }
  loan_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
}
inline void business_predilection_ans::set_loan_amount_interval(const char* value) {
  set_has_loan_amount_interval();
  if (loan_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_amount_interval_ = new ::std::string;
  }
  loan_amount_interval_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
}
inline void business_predilection_ans::set_loan_amount_interval(const void* value, size_t size) {
  set_has_loan_amount_interval();
  if (loan_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_amount_interval_ = new ::std::string;
  }
  loan_amount_interval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
}
inline ::std::string* business_predilection_ans::mutable_loan_amount_interval() {
  set_has_loan_amount_interval();
  if (loan_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    loan_amount_interval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
  return loan_amount_interval_;
}
inline ::std::string* business_predilection_ans::release_loan_amount_interval() {
  clear_has_loan_amount_interval();
  if (loan_amount_interval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = loan_amount_interval_;
    loan_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void business_predilection_ans::set_allocated_loan_amount_interval(::std::string* loan_amount_interval) {
  if (loan_amount_interval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loan_amount_interval_;
  }
  if (loan_amount_interval) {
    set_has_loan_amount_interval();
    loan_amount_interval_ = loan_amount_interval;
  } else {
    clear_has_loan_amount_interval();
    loan_amount_interval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.loan_amount_interval)
}

// optional .common.result_info result = 17;
inline bool business_predilection_ans::has_result() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void business_predilection_ans::set_has_result() {
  _has_bits_[0] |= 0x00010000u;
}
inline void business_predilection_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void business_predilection_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& business_predilection_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.business_predilection_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* business_predilection_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.business_predilection_ans.result)
  return result_;
}
inline ::common::result_info* business_predilection_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void business_predilection_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.business_predilection_ans.result)
}

// -------------------------------------------------------------------

// auth_info_ans

// optional int32 phone_auth = 1;
inline bool auth_info_ans::has_phone_auth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void auth_info_ans::set_has_phone_auth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void auth_info_ans::clear_has_phone_auth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void auth_info_ans::clear_phone_auth() {
  phone_auth_ = 0;
  clear_has_phone_auth();
}
inline ::google::protobuf::int32 auth_info_ans::phone_auth() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.phone_auth)
  return phone_auth_;
}
inline void auth_info_ans::set_phone_auth(::google::protobuf::int32 value) {
  set_has_phone_auth();
  phone_auth_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.phone_auth)
}

// optional int32 real_name_auth = 2;
inline bool auth_info_ans::has_real_name_auth() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void auth_info_ans::set_has_real_name_auth() {
  _has_bits_[0] |= 0x00000002u;
}
inline void auth_info_ans::clear_has_real_name_auth() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void auth_info_ans::clear_real_name_auth() {
  real_name_auth_ = 0;
  clear_has_real_name_auth();
}
inline ::google::protobuf::int32 auth_info_ans::real_name_auth() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.real_name_auth)
  return real_name_auth_;
}
inline void auth_info_ans::set_real_name_auth(::google::protobuf::int32 value) {
  set_has_real_name_auth();
  real_name_auth_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.real_name_auth)
}

// optional int32 loan_auth = 3;
inline bool auth_info_ans::has_loan_auth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void auth_info_ans::set_has_loan_auth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void auth_info_ans::clear_has_loan_auth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void auth_info_ans::clear_loan_auth() {
  loan_auth_ = 0;
  clear_has_loan_auth();
}
inline ::google::protobuf::int32 auth_info_ans::loan_auth() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.loan_auth)
  return loan_auth_;
}
inline void auth_info_ans::set_loan_auth(::google::protobuf::int32 value) {
  set_has_loan_auth();
  loan_auth_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.loan_auth)
}

// optional int32 garantee_auth = 4;
inline bool auth_info_ans::has_garantee_auth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void auth_info_ans::set_has_garantee_auth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void auth_info_ans::clear_has_garantee_auth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void auth_info_ans::clear_garantee_auth() {
  garantee_auth_ = 0;
  clear_has_garantee_auth();
}
inline ::google::protobuf::int32 auth_info_ans::garantee_auth() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.garantee_auth)
  return garantee_auth_;
}
inline void auth_info_ans::set_garantee_auth(::google::protobuf::int32 value) {
  set_has_garantee_auth();
  garantee_auth_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.garantee_auth)
}

// optional int32 big_garantee = 5;
inline bool auth_info_ans::has_big_garantee() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void auth_info_ans::set_has_big_garantee() {
  _has_bits_[0] |= 0x00000010u;
}
inline void auth_info_ans::clear_has_big_garantee() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void auth_info_ans::clear_big_garantee() {
  big_garantee_ = 0;
  clear_has_big_garantee();
}
inline ::google::protobuf::int32 auth_info_ans::big_garantee() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.big_garantee)
  return big_garantee_;
}
inline void auth_info_ans::set_big_garantee(::google::protobuf::int32 value) {
  set_has_big_garantee();
  big_garantee_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.big_garantee)
}

// optional int32 micro_garantee = 6;
inline bool auth_info_ans::has_micro_garantee() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void auth_info_ans::set_has_micro_garantee() {
  _has_bits_[0] |= 0x00000020u;
}
inline void auth_info_ans::clear_has_micro_garantee() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void auth_info_ans::clear_micro_garantee() {
  micro_garantee_ = 0;
  clear_has_micro_garantee();
}
inline ::google::protobuf::int32 auth_info_ans::micro_garantee() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.micro_garantee)
  return micro_garantee_;
}
inline void auth_info_ans::set_micro_garantee(::google::protobuf::int32 value) {
  set_has_micro_garantee();
  micro_garantee_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.auth_info_ans.micro_garantee)
}

// optional .common.result_info result = 7;
inline bool auth_info_ans::has_result() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void auth_info_ans::set_has_result() {
  _has_bits_[0] |= 0x00000040u;
}
inline void auth_info_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void auth_info_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& auth_info_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.auth_info_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* auth_info_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.auth_info_ans.result)
  return result_;
}
inline ::common::result_info* auth_info_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void auth_info_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.auth_info_ans.result)
}

// -------------------------------------------------------------------

// amount_info_ans

// optional double loan_amount = 1;
inline bool amount_info_ans::has_loan_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void amount_info_ans::set_has_loan_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void amount_info_ans::clear_has_loan_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void amount_info_ans::clear_loan_amount() {
  loan_amount_ = 0;
  clear_has_loan_amount();
}
inline double amount_info_ans::loan_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.loan_amount)
  return loan_amount_;
}
inline void amount_info_ans::set_loan_amount(double value) {
  set_has_loan_amount();
  loan_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.loan_amount)
}

// optional double loan_manual_amount = 2;
inline bool amount_info_ans::has_loan_manual_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void amount_info_ans::set_has_loan_manual_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void amount_info_ans::clear_has_loan_manual_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void amount_info_ans::clear_loan_manual_amount() {
  loan_manual_amount_ = 0;
  clear_has_loan_manual_amount();
}
inline double amount_info_ans::loan_manual_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.loan_manual_amount)
  return loan_manual_amount_;
}
inline void amount_info_ans::set_loan_manual_amount(double value) {
  set_has_loan_manual_amount();
  loan_manual_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.loan_manual_amount)
}

// optional double loan_award_amount = 3;
inline bool amount_info_ans::has_loan_award_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void amount_info_ans::set_has_loan_award_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void amount_info_ans::clear_has_loan_award_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void amount_info_ans::clear_loan_award_amount() {
  loan_award_amount_ = 0;
  clear_has_loan_award_amount();
}
inline double amount_info_ans::loan_award_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.loan_award_amount)
  return loan_award_amount_;
}
inline void amount_info_ans::set_loan_award_amount(double value) {
  set_has_loan_award_amount();
  loan_award_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.loan_award_amount)
}

// optional double loan_unite_amount = 4;
inline bool amount_info_ans::has_loan_unite_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void amount_info_ans::set_has_loan_unite_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void amount_info_ans::clear_has_loan_unite_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void amount_info_ans::clear_loan_unite_amount() {
  loan_unite_amount_ = 0;
  clear_has_loan_unite_amount();
}
inline double amount_info_ans::loan_unite_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.loan_unite_amount)
  return loan_unite_amount_;
}
inline void amount_info_ans::set_loan_unite_amount(double value) {
  set_has_loan_unite_amount();
  loan_unite_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.loan_unite_amount)
}

// optional double garantee_amount = 5;
inline bool amount_info_ans::has_garantee_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void amount_info_ans::set_has_garantee_amount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void amount_info_ans::clear_has_garantee_amount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void amount_info_ans::clear_garantee_amount() {
  garantee_amount_ = 0;
  clear_has_garantee_amount();
}
inline double amount_info_ans::garantee_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.garantee_amount)
  return garantee_amount_;
}
inline void amount_info_ans::set_garantee_amount(double value) {
  set_has_garantee_amount();
  garantee_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.garantee_amount)
}

// optional double garantee_manual_amount = 6;
inline bool amount_info_ans::has_garantee_manual_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void amount_info_ans::set_has_garantee_manual_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void amount_info_ans::clear_has_garantee_manual_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void amount_info_ans::clear_garantee_manual_amount() {
  garantee_manual_amount_ = 0;
  clear_has_garantee_manual_amount();
}
inline double amount_info_ans::garantee_manual_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.garantee_manual_amount)
  return garantee_manual_amount_;
}
inline void amount_info_ans::set_garantee_manual_amount(double value) {
  set_has_garantee_manual_amount();
  garantee_manual_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.garantee_manual_amount)
}

// optional double garantee_award_amount = 7;
inline bool amount_info_ans::has_garantee_award_amount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void amount_info_ans::set_has_garantee_award_amount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void amount_info_ans::clear_has_garantee_award_amount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void amount_info_ans::clear_garantee_award_amount() {
  garantee_award_amount_ = 0;
  clear_has_garantee_award_amount();
}
inline double amount_info_ans::garantee_award_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.garantee_award_amount)
  return garantee_award_amount_;
}
inline void amount_info_ans::set_garantee_award_amount(double value) {
  set_has_garantee_award_amount();
  garantee_award_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.garantee_award_amount)
}

// optional double garantee_unite_amount = 8;
inline bool amount_info_ans::has_garantee_unite_amount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void amount_info_ans::set_has_garantee_unite_amount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void amount_info_ans::clear_has_garantee_unite_amount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void amount_info_ans::clear_garantee_unite_amount() {
  garantee_unite_amount_ = 0;
  clear_has_garantee_unite_amount();
}
inline double amount_info_ans::garantee_unite_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.garantee_unite_amount)
  return garantee_unite_amount_;
}
inline void amount_info_ans::set_garantee_unite_amount(double value) {
  set_has_garantee_unite_amount();
  garantee_unite_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.amount_info_ans.garantee_unite_amount)
}

// optional .common.result_info result = 9;
inline bool amount_info_ans::has_result() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void amount_info_ans::set_has_result() {
  _has_bits_[0] |= 0x00000100u;
}
inline void amount_info_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void amount_info_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& amount_info_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.amount_info_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* amount_info_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.amount_info_ans.result)
  return result_;
}
inline ::common::result_info* amount_info_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void amount_info_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.amount_info_ans.result)
}

// -------------------------------------------------------------------

// device_ans

// repeated .ODP_user_portrayal.device_info device_list = 1;
inline int device_ans::device_list_size() const {
  return device_list_.size();
}
inline void device_ans::clear_device_list() {
  device_list_.Clear();
}
inline const ::ODP_user_portrayal::device_info& device_ans::device_list(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_ans.device_list)
  return device_list_.Get(index);
}
inline ::ODP_user_portrayal::device_info* device_ans::mutable_device_list(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_ans.device_list)
  return device_list_.Mutable(index);
}
inline ::ODP_user_portrayal::device_info* device_ans::add_device_list() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.device_ans.device_list)
  return device_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_info >&
device_ans::device_list() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.device_ans.device_list)
  return device_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::device_info >*
device_ans::mutable_device_list() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.device_ans.device_list)
  return &device_list_;
}

// optional .common.result_info result = 2;
inline bool device_ans::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void device_ans::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void device_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void device_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& device_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.device_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* device_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.device_ans.result)
  return result_;
}
inline ::common::result_info* device_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void device_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.device_ans.result)
}

// -------------------------------------------------------------------

// bid_research_ans

// optional bytes identity = 1;
inline bool bid_research_ans::has_identity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bid_research_ans::set_has_identity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bid_research_ans::clear_has_identity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bid_research_ans::clear_identity() {
  if (identity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    identity_->clear();
  }
  clear_has_identity();
}
inline const ::std::string& bid_research_ans::identity() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.identity)
  return *identity_;
}
inline void bid_research_ans::set_identity(const ::std::string& value) {
  set_has_identity();
  if (identity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    identity_ = new ::std::string;
  }
  identity_->assign(value);
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.identity)
}
inline void bid_research_ans::set_identity(const char* value) {
  set_has_identity();
  if (identity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    identity_ = new ::std::string;
  }
  identity_->assign(value);
  // @@protoc_insertion_point(field_set_char:ODP_user_portrayal.bid_research_ans.identity)
}
inline void bid_research_ans::set_identity(const void* value, size_t size) {
  set_has_identity();
  if (identity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    identity_ = new ::std::string;
  }
  identity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ODP_user_portrayal.bid_research_ans.identity)
}
inline ::std::string* bid_research_ans::mutable_identity() {
  set_has_identity();
  if (identity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    identity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_research_ans.identity)
  return identity_;
}
inline ::std::string* bid_research_ans::release_identity() {
  clear_has_identity();
  if (identity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = identity_;
    identity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void bid_research_ans::set_allocated_identity(::std::string* identity) {
  if (identity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete identity_;
  }
  if (identity) {
    set_has_identity();
    identity_ = identity;
  } else {
    clear_has_identity();
    identity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_research_ans.identity)
}

// optional int32 total_num = 2;
inline bool bid_research_ans::has_total_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bid_research_ans::set_has_total_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bid_research_ans::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bid_research_ans::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 bid_research_ans::total_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.total_num)
  return total_num_;
}
inline void bid_research_ans::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.total_num)
}

// optional int32 success_num = 3;
inline bool bid_research_ans::has_success_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bid_research_ans::set_has_success_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bid_research_ans::clear_has_success_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bid_research_ans::clear_success_num() {
  success_num_ = 0;
  clear_has_success_num();
}
inline ::google::protobuf::int32 bid_research_ans::success_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.success_num)
  return success_num_;
}
inline void bid_research_ans::set_success_num(::google::protobuf::int32 value) {
  set_has_success_num();
  success_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.success_num)
}

// optional int32 fail_num = 4;
inline bool bid_research_ans::has_fail_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bid_research_ans::set_has_fail_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bid_research_ans::clear_has_fail_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bid_research_ans::clear_fail_num() {
  fail_num_ = 0;
  clear_has_fail_num();
}
inline ::google::protobuf::int32 bid_research_ans::fail_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.fail_num)
  return fail_num_;
}
inline void bid_research_ans::set_fail_num(::google::protobuf::int32 value) {
  set_has_fail_num();
  fail_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.fail_num)
}

// optional int32 bid_overdue_num = 5;
inline bool bid_research_ans::has_bid_overdue_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bid_research_ans::set_has_bid_overdue_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bid_research_ans::clear_has_bid_overdue_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bid_research_ans::clear_bid_overdue_num() {
  bid_overdue_num_ = 0;
  clear_has_bid_overdue_num();
}
inline ::google::protobuf::int32 bid_research_ans::bid_overdue_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.bid_overdue_num)
  return bid_overdue_num_;
}
inline void bid_research_ans::set_bid_overdue_num(::google::protobuf::int32 value) {
  set_has_bid_overdue_num();
  bid_overdue_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.bid_overdue_num)
}

// optional int32 bid_bad_debt = 6;
inline bool bid_research_ans::has_bid_bad_debt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bid_research_ans::set_has_bid_bad_debt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bid_research_ans::clear_has_bid_bad_debt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bid_research_ans::clear_bid_bad_debt() {
  bid_bad_debt_ = 0;
  clear_has_bid_bad_debt();
}
inline ::google::protobuf::int32 bid_research_ans::bid_bad_debt() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.bid_bad_debt)
  return bid_bad_debt_;
}
inline void bid_research_ans::set_bid_bad_debt(::google::protobuf::int32 value) {
  set_has_bid_bad_debt();
  bid_bad_debt_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.bid_bad_debt)
}

// optional int32 advance_overdue = 7;
inline bool bid_research_ans::has_advance_overdue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bid_research_ans::set_has_advance_overdue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bid_research_ans::clear_has_advance_overdue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bid_research_ans::clear_advance_overdue() {
  advance_overdue_ = 0;
  clear_has_advance_overdue();
}
inline ::google::protobuf::int32 bid_research_ans::advance_overdue() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.advance_overdue)
  return advance_overdue_;
}
inline void bid_research_ans::set_advance_overdue(::google::protobuf::int32 value) {
  set_has_advance_overdue();
  advance_overdue_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.advance_overdue)
}

// optional double travelfee = 8;
inline bool bid_research_ans::has_travelfee() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void bid_research_ans::set_has_travelfee() {
  _has_bits_[0] |= 0x00000080u;
}
inline void bid_research_ans::clear_has_travelfee() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void bid_research_ans::clear_travelfee() {
  travelfee_ = 0;
  clear_has_travelfee();
}
inline double bid_research_ans::travelfee() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.travelfee)
  return travelfee_;
}
inline void bid_research_ans::set_travelfee(double value) {
  set_has_travelfee();
  travelfee_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_research_ans.travelfee)
}

// optional .common.result_info result = 9;
inline bool bid_research_ans::has_result() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void bid_research_ans::set_has_result() {
  _has_bits_[0] |= 0x00000100u;
}
inline void bid_research_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void bid_research_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& bid_research_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_research_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* bid_research_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_research_ans.result)
  return result_;
}
inline ::common::result_info* bid_research_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void bid_research_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_research_ans.result)
}

// -------------------------------------------------------------------

// bid_invest_ans

// optional int32 total_num = 1;
inline bool bid_invest_ans::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bid_invest_ans::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bid_invest_ans::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bid_invest_ans::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 bid_invest_ans::total_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.total_num)
  return total_num_;
}
inline void bid_invest_ans::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_invest_ans.total_num)
}

// optional double totalamount = 2;
inline bool bid_invest_ans::has_totalamount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bid_invest_ans::set_has_totalamount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bid_invest_ans::clear_has_totalamount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bid_invest_ans::clear_totalamount() {
  totalamount_ = 0;
  clear_has_totalamount();
}
inline double bid_invest_ans::totalamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.totalamount)
  return totalamount_;
}
inline void bid_invest_ans::set_totalamount(double value) {
  set_has_totalamount();
  totalamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_invest_ans.totalamount)
}

// optional double investmentprofit = 3;
inline bool bid_invest_ans::has_investmentprofit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bid_invest_ans::set_has_investmentprofit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bid_invest_ans::clear_has_investmentprofit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bid_invest_ans::clear_investmentprofit() {
  investmentprofit_ = 0;
  clear_has_investmentprofit();
}
inline double bid_invest_ans::investmentprofit() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.investmentprofit)
  return investmentprofit_;
}
inline void bid_invest_ans::set_investmentprofit(double value) {
  set_has_investmentprofit();
  investmentprofit_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_invest_ans.investmentprofit)
}

// optional double receive_amount = 4;
inline bool bid_invest_ans::has_receive_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bid_invest_ans::set_has_receive_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bid_invest_ans::clear_has_receive_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bid_invest_ans::clear_receive_amount() {
  receive_amount_ = 0;
  clear_has_receive_amount();
}
inline double bid_invest_ans::receive_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.receive_amount)
  return receive_amount_;
}
inline void bid_invest_ans::set_receive_amount(double value) {
  set_has_receive_amount();
  receive_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_invest_ans.receive_amount)
}

// optional double lateamount = 5;
inline bool bid_invest_ans::has_lateamount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bid_invest_ans::set_has_lateamount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bid_invest_ans::clear_has_lateamount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bid_invest_ans::clear_lateamount() {
  lateamount_ = 0;
  clear_has_lateamount();
}
inline double bid_invest_ans::lateamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.lateamount)
  return lateamount_;
}
inline void bid_invest_ans::set_lateamount(double value) {
  set_has_lateamount();
  lateamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_invest_ans.lateamount)
}

// optional .common.result_info result = 6;
inline bool bid_invest_ans::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bid_invest_ans::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bid_invest_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bid_invest_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& bid_invest_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_invest_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* bid_invest_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_invest_ans.result)
  return result_;
}
inline ::common::result_info* bid_invest_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void bid_invest_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_invest_ans.result)
}

// -------------------------------------------------------------------

// bid_guarantee_ans

// optional int32 total_num = 1;
inline bool bid_guarantee_ans::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bid_guarantee_ans::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bid_guarantee_ans::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bid_guarantee_ans::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 bid_guarantee_ans::total_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.total_num)
  return total_num_;
}
inline void bid_guarantee_ans::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.total_num)
}

// optional int32 overdue_num = 2;
inline bool bid_guarantee_ans::has_overdue_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bid_guarantee_ans::set_has_overdue_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bid_guarantee_ans::clear_has_overdue_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bid_guarantee_ans::clear_overdue_num() {
  overdue_num_ = 0;
  clear_has_overdue_num();
}
inline ::google::protobuf::int32 bid_guarantee_ans::overdue_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.overdue_num)
  return overdue_num_;
}
inline void bid_guarantee_ans::set_overdue_num(::google::protobuf::int32 value) {
  set_has_overdue_num();
  overdue_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.overdue_num)
}

// optional int32 bad_debt_num = 3;
inline bool bid_guarantee_ans::has_bad_debt_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bid_guarantee_ans::set_has_bad_debt_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bid_guarantee_ans::clear_has_bad_debt_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bid_guarantee_ans::clear_bad_debt_num() {
  bad_debt_num_ = 0;
  clear_has_bad_debt_num();
}
inline ::google::protobuf::int32 bid_guarantee_ans::bad_debt_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.bad_debt_num)
  return bad_debt_num_;
}
inline void bid_guarantee_ans::set_bad_debt_num(::google::protobuf::int32 value) {
  set_has_bad_debt_num();
  bad_debt_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.bad_debt_num)
}

// optional double totalamount = 4;
inline bool bid_guarantee_ans::has_totalamount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bid_guarantee_ans::set_has_totalamount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bid_guarantee_ans::clear_has_totalamount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bid_guarantee_ans::clear_totalamount() {
  totalamount_ = 0;
  clear_has_totalamount();
}
inline double bid_guarantee_ans::totalamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.totalamount)
  return totalamount_;
}
inline void bid_guarantee_ans::set_totalamount(double value) {
  set_has_totalamount();
  totalamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.totalamount)
}

// optional double investmentprofit = 5;
inline bool bid_guarantee_ans::has_investmentprofit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bid_guarantee_ans::set_has_investmentprofit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bid_guarantee_ans::clear_has_investmentprofit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bid_guarantee_ans::clear_investmentprofit() {
  investmentprofit_ = 0;
  clear_has_investmentprofit();
}
inline double bid_guarantee_ans::investmentprofit() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.investmentprofit)
  return investmentprofit_;
}
inline void bid_guarantee_ans::set_investmentprofit(double value) {
  set_has_investmentprofit();
  investmentprofit_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.investmentprofit)
}

// optional double advance_amount = 6;
inline bool bid_guarantee_ans::has_advance_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bid_guarantee_ans::set_has_advance_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bid_guarantee_ans::clear_has_advance_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bid_guarantee_ans::clear_advance_amount() {
  advance_amount_ = 0;
  clear_has_advance_amount();
}
inline double bid_guarantee_ans::advance_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.advance_amount)
  return advance_amount_;
}
inline void bid_guarantee_ans::set_advance_amount(double value) {
  set_has_advance_amount();
  advance_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.advance_amount)
}

// optional double not_advence = 7;
inline bool bid_guarantee_ans::has_not_advence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bid_guarantee_ans::set_has_not_advence() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bid_guarantee_ans::clear_has_not_advence() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bid_guarantee_ans::clear_not_advence() {
  not_advence_ = 0;
  clear_has_not_advence();
}
inline double bid_guarantee_ans::not_advence() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.not_advence)
  return not_advence_;
}
inline void bid_guarantee_ans::set_not_advence(double value) {
  set_has_not_advence();
  not_advence_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.not_advence)
}

// optional double receive_amount = 8;
inline bool bid_guarantee_ans::has_receive_amount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void bid_guarantee_ans::set_has_receive_amount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void bid_guarantee_ans::clear_has_receive_amount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void bid_guarantee_ans::clear_receive_amount() {
  receive_amount_ = 0;
  clear_has_receive_amount();
}
inline double bid_guarantee_ans::receive_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.receive_amount)
  return receive_amount_;
}
inline void bid_guarantee_ans::set_receive_amount(double value) {
  set_has_receive_amount();
  receive_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.receive_amount)
}

// optional double lateamount = 9;
inline bool bid_guarantee_ans::has_lateamount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void bid_guarantee_ans::set_has_lateamount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void bid_guarantee_ans::clear_has_lateamount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void bid_guarantee_ans::clear_lateamount() {
  lateamount_ = 0;
  clear_has_lateamount();
}
inline double bid_guarantee_ans::lateamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.lateamount)
  return lateamount_;
}
inline void bid_guarantee_ans::set_lateamount(double value) {
  set_has_lateamount();
  lateamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_guarantee_ans.lateamount)
}

// optional .common.result_info result = 10;
inline bool bid_guarantee_ans::has_result() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void bid_guarantee_ans::set_has_result() {
  _has_bits_[0] |= 0x00000200u;
}
inline void bid_guarantee_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void bid_guarantee_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& bid_guarantee_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_guarantee_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* bid_guarantee_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_guarantee_ans.result)
  return result_;
}
inline ::common::result_info* bid_guarantee_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void bid_guarantee_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_guarantee_ans.result)
}

// -------------------------------------------------------------------

// bid_loan_ans

// optional int32 total_num = 1;
inline bool bid_loan_ans::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bid_loan_ans::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bid_loan_ans::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bid_loan_ans::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 bid_loan_ans::total_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.total_num)
  return total_num_;
}
inline void bid_loan_ans::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.total_num)
}

// optional int32 success_num = 2;
inline bool bid_loan_ans::has_success_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bid_loan_ans::set_has_success_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bid_loan_ans::clear_has_success_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bid_loan_ans::clear_success_num() {
  success_num_ = 0;
  clear_has_success_num();
}
inline ::google::protobuf::int32 bid_loan_ans::success_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.success_num)
  return success_num_;
}
inline void bid_loan_ans::set_success_num(::google::protobuf::int32 value) {
  set_has_success_num();
  success_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.success_num)
}

// optional int32 payment_success = 3;
inline bool bid_loan_ans::has_payment_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bid_loan_ans::set_has_payment_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bid_loan_ans::clear_has_payment_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bid_loan_ans::clear_payment_success() {
  payment_success_ = 0;
  clear_has_payment_success();
}
inline ::google::protobuf::int32 bid_loan_ans::payment_success() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.payment_success)
  return payment_success_;
}
inline void bid_loan_ans::set_payment_success(::google::protobuf::int32 value) {
  set_has_payment_success();
  payment_success_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.payment_success)
}

// optional double totalamount = 4;
inline bool bid_loan_ans::has_totalamount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bid_loan_ans::set_has_totalamount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bid_loan_ans::clear_has_totalamount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bid_loan_ans::clear_totalamount() {
  totalamount_ = 0;
  clear_has_totalamount();
}
inline double bid_loan_ans::totalamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.totalamount)
  return totalamount_;
}
inline void bid_loan_ans::set_totalamount(double value) {
  set_has_totalamount();
  totalamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.totalamount)
}

// optional double lateamount = 5;
inline bool bid_loan_ans::has_lateamount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bid_loan_ans::set_has_lateamount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bid_loan_ans::clear_has_lateamount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bid_loan_ans::clear_lateamount() {
  lateamount_ = 0;
  clear_has_lateamount();
}
inline double bid_loan_ans::lateamount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.lateamount)
  return lateamount_;
}
inline void bid_loan_ans::set_lateamount(double value) {
  set_has_lateamount();
  lateamount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.lateamount)
}

// optional double overdue_amount = 6;
inline bool bid_loan_ans::has_overdue_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bid_loan_ans::set_has_overdue_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bid_loan_ans::clear_has_overdue_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bid_loan_ans::clear_overdue_amount() {
  overdue_amount_ = 0;
  clear_has_overdue_amount();
}
inline double bid_loan_ans::overdue_amount() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.overdue_amount)
  return overdue_amount_;
}
inline void bid_loan_ans::set_overdue_amount(double value) {
  set_has_overdue_amount();
  overdue_amount_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.overdue_amount)
}

// optional int32 overdue_num = 7;
inline bool bid_loan_ans::has_overdue_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bid_loan_ans::set_has_overdue_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bid_loan_ans::clear_has_overdue_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bid_loan_ans::clear_overdue_num() {
  overdue_num_ = 0;
  clear_has_overdue_num();
}
inline ::google::protobuf::int32 bid_loan_ans::overdue_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.overdue_num)
  return overdue_num_;
}
inline void bid_loan_ans::set_overdue_num(::google::protobuf::int32 value) {
  set_has_overdue_num();
  overdue_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.overdue_num)
}

// optional int32 grave_overdue_num = 8;
inline bool bid_loan_ans::has_grave_overdue_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void bid_loan_ans::set_has_grave_overdue_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void bid_loan_ans::clear_has_grave_overdue_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void bid_loan_ans::clear_grave_overdue_num() {
  grave_overdue_num_ = 0;
  clear_has_grave_overdue_num();
}
inline ::google::protobuf::int32 bid_loan_ans::grave_overdue_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.grave_overdue_num)
  return grave_overdue_num_;
}
inline void bid_loan_ans::set_grave_overdue_num(::google::protobuf::int32 value) {
  set_has_grave_overdue_num();
  grave_overdue_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.grave_overdue_num)
}

// optional int32 max_overdue_days = 9;
inline bool bid_loan_ans::has_max_overdue_days() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void bid_loan_ans::set_has_max_overdue_days() {
  _has_bits_[0] |= 0x00000100u;
}
inline void bid_loan_ans::clear_has_max_overdue_days() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void bid_loan_ans::clear_max_overdue_days() {
  max_overdue_days_ = 0;
  clear_has_max_overdue_days();
}
inline ::google::protobuf::int32 bid_loan_ans::max_overdue_days() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.max_overdue_days)
  return max_overdue_days_;
}
inline void bid_loan_ans::set_max_overdue_days(::google::protobuf::int32 value) {
  set_has_max_overdue_days();
  max_overdue_days_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_loan_ans.max_overdue_days)
}

// optional .common.result_info result = 10;
inline bool bid_loan_ans::has_result() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void bid_loan_ans::set_has_result() {
  _has_bits_[0] |= 0x00000200u;
}
inline void bid_loan_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void bid_loan_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& bid_loan_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_loan_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* bid_loan_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_loan_ans.result)
  return result_;
}
inline ::common::result_info* bid_loan_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void bid_loan_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_loan_ans.result)
}

// -------------------------------------------------------------------

// danger_analysis_ans

// repeated .ODP_user_portrayal.danger_analysis_info danger_list = 1;
inline int danger_analysis_ans::danger_list_size() const {
  return danger_list_.size();
}
inline void danger_analysis_ans::clear_danger_list() {
  danger_list_.Clear();
}
inline const ::ODP_user_portrayal::danger_analysis_info& danger_analysis_ans::danger_list(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_ans.danger_list)
  return danger_list_.Get(index);
}
inline ::ODP_user_portrayal::danger_analysis_info* danger_analysis_ans::mutable_danger_list(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_ans.danger_list)
  return danger_list_.Mutable(index);
}
inline ::ODP_user_portrayal::danger_analysis_info* danger_analysis_ans::add_danger_list() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.danger_analysis_ans.danger_list)
  return danger_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_analysis_info >&
danger_analysis_ans::danger_list() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.danger_analysis_ans.danger_list)
  return danger_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::danger_analysis_info >*
danger_analysis_ans::mutable_danger_list() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.danger_analysis_ans.danger_list)
  return &danger_list_;
}

// optional .common.result_info result = 2;
inline bool danger_analysis_ans::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void danger_analysis_ans::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void danger_analysis_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void danger_analysis_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& danger_analysis_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.danger_analysis_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* danger_analysis_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.danger_analysis_ans.result)
  return result_;
}
inline ::common::result_info* danger_analysis_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void danger_analysis_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.danger_analysis_ans.result)
}

// -------------------------------------------------------------------

// bid_history_ans

// repeated .ODP_user_portrayal.history_info history_list = 1;
inline int bid_history_ans::history_list_size() const {
  return history_list_.size();
}
inline void bid_history_ans::clear_history_list() {
  history_list_.Clear();
}
inline const ::ODP_user_portrayal::history_info& bid_history_ans::history_list(int index) const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_history_ans.history_list)
  return history_list_.Get(index);
}
inline ::ODP_user_portrayal::history_info* bid_history_ans::mutable_history_list(int index) {
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_history_ans.history_list)
  return history_list_.Mutable(index);
}
inline ::ODP_user_portrayal::history_info* bid_history_ans::add_history_list() {
  // @@protoc_insertion_point(field_add:ODP_user_portrayal.bid_history_ans.history_list)
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::history_info >&
bid_history_ans::history_list() const {
  // @@protoc_insertion_point(field_list:ODP_user_portrayal.bid_history_ans.history_list)
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ODP_user_portrayal::history_info >*
bid_history_ans::mutable_history_list() {
  // @@protoc_insertion_point(field_mutable_list:ODP_user_portrayal.bid_history_ans.history_list)
  return &history_list_;
}

// optional int32 total_num = 2;
inline bool bid_history_ans::has_total_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bid_history_ans::set_has_total_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bid_history_ans::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bid_history_ans::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 bid_history_ans::total_num() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_history_ans.total_num)
  return total_num_;
}
inline void bid_history_ans::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ODP_user_portrayal.bid_history_ans.total_num)
}

// optional .common.result_info result = 3;
inline bool bid_history_ans::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bid_history_ans::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bid_history_ans::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bid_history_ans::clear_result() {
  if (result_ != NULL) result_->::common::result_info::Clear();
  clear_has_result();
}
inline const ::common::result_info& bid_history_ans::result() const {
  // @@protoc_insertion_point(field_get:ODP_user_portrayal.bid_history_ans.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::common::result_info* bid_history_ans::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::common::result_info;
  // @@protoc_insertion_point(field_mutable:ODP_user_portrayal.bid_history_ans.result)
  return result_;
}
inline ::common::result_info* bid_history_ans::release_result() {
  clear_has_result();
  ::common::result_info* temp = result_;
  result_ = NULL;
  return temp;
}
inline void bid_history_ans::set_allocated_result(::common::result_info* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ODP_user_portrayal.bid_history_ans.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ODP_user_portrayal

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ODP_user_portrayal::action_ask_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ODP_user_portrayal::action_ask_type>() {
  return ::ODP_user_portrayal::action_ask_type_descriptor();
}
template <> struct is_proto_enum< ::ODP_user_portrayal::danger_analysis_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ODP_user_portrayal::danger_analysis_type>() {
  return ::ODP_user_portrayal::danger_analysis_type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ODP_5fuser_5fportrayal_2eproto__INCLUDED
