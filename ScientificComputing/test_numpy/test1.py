#coding=utf8
import numpy as np
"""
Numpy是Python的一个科学计算的库

Python中提供了list容器，可以当作数组使用。但列表中的元素可以是任何对象，因此列表中保存的是对象的指针，这样一来，为了保存一个简单的列表[1,2,3]。
就需要三个指针和三个整数对象。对于数值运算来说，这种结构显然不够高效。Python虽然也提供了array模块，但其只支持一维数组，不支持多维数组，也没有
各种运算函数。因而不适合数值运算。而NumPy的出现弥补了这些不足


NumPy数组是一个多维数组对象，称为ndarray。其由两部分组成：
实际的数据
描述这些数据的元数据
大部分操作仅针对于元数据，而不改变底层实际的数据。

关于NumPy数组有几点必需了解的：
NumPy数组的下标从0开始。
同一个NumPy数组中所有元素的类型必须是相同的

NumPy中的基本数据类型
名称          描述
——————————————————————————————————
bool    用一个字节存储的布尔类型（True或False）
inti    由所在平台决定其大小的整数（一般为int32或int64）
int8    一个字节大小，-128 至 127
int16   整数，-32768 至 32767
int32   整数，-2 ** 31 至 2 ** 32 -1
int64   整数，-2 ** 63 至 2 ** 63 - 1
uint8   无符号整数，0 至 255
uint16  无符号整数，0 至 65535
uint32  无符号整数，0 至 2 ** 32 - 1
uint64  无符号整数，0 至 2 ** 64 - 1
float16 半精度浮点数：16位，正负号1位，指数5位，精度10位
float32 单精度浮点数：32位，正负号1位，指数8位，精度23位
float64或float   双精度浮点数：64位，正负号1位，指数11位，精度52位
complex64   复数，分别用两个32位浮点数表示实部和虚部
complex128或complex  复数，分别用两个64位浮点数表示实部和虚部
"""

print np.version.version

#可以使用array函数从常规的Python列表和元组创造数组。所创建的数组类型由原序列中的元素类型推导而来
a = np.array([2,3,4])
print a
print a.dtype

b = np.array([1.2, 3.5, 5.1])
print b.dtype

#多维的数组
c = np.array([(1.5,2,3), (4,5,6)])
print c


#显式指定数组中元素的类型
d = np.array( [ [1,2], [3,4] ], dtype=complex)
print d










